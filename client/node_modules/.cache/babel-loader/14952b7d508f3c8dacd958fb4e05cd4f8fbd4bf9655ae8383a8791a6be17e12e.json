{"ast":null,"code":"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useDialog } from '../Dialog';\nimport { defaultReactionOptions } from './reactionOptions';\nimport { isMutableRef } from './utils/utils';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nconst UnMemoizedReactionSelector = props => {\n  const {\n    Avatar: propAvatar,\n    detailedView = true,\n    handleReaction: propHandleReaction,\n    latest_reactions: propLatestReactions,\n    own_reactions: propOwnReactions,\n    reaction_groups: propReactionGroups,\n    reactionOptions: propReactionOptions,\n    reverse = false\n  } = props;\n  const {\n    Avatar: contextAvatar,\n    reactionOptions: contextReactionOptions = defaultReactionOptions\n  } = useComponentContext('ReactionSelector');\n  const {\n    closeReactionSelectorOnClick,\n    handleReaction: contextHandleReaction,\n    message\n  } = useMessageContext('ReactionSelector');\n  const dialogId = `reaction-selector--${message.id}`;\n  const dialog = useDialog({\n    id: dialogId\n  });\n  const reactionOptions = propReactionOptions ?? contextReactionOptions;\n  const Avatar = propAvatar || contextAvatar || DefaultAvatar;\n  const handleReaction = propHandleReaction || contextHandleReaction;\n  const latestReactions = propLatestReactions || message?.latest_reactions || [];\n  const ownReactions = propOwnReactions || message?.own_reactions || [];\n  const reactionGroups = propReactionGroups || message?.reaction_groups || {};\n  const [tooltipReactionType, setTooltipReactionType] = useState(null);\n  const [tooltipPositions, setTooltipPositions] = useState(null);\n  const rootRef = useRef(null);\n  const targetRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const showTooltip = useCallback((event, reactionType) => {\n    targetRef.current = event.currentTarget;\n    setTooltipReactionType(reactionType);\n  }, []);\n  const hideTooltip = useCallback(() => {\n    setTooltipReactionType(null);\n    setTooltipPositions(null);\n  }, []);\n  useEffect(() => {\n    if (!tooltipReactionType || !rootRef.current) return;\n    const tooltip = tooltipRef.current?.getBoundingClientRect();\n    const target = targetRef.current?.getBoundingClientRect();\n    const container = isMutableRef(rootRef) ? rootRef.current?.getBoundingClientRect() : null;\n    if (!tooltip || !target || !container) return;\n    const tooltipPosition = tooltip.width === container.width || tooltip.x < container.x ? 0 : target.left + target.width / 2 - container.left - tooltip.width / 2;\n    const arrowPosition = target.x - tooltip.x + target.width / 2 - tooltipPosition;\n    setTooltipPositions({\n      arrow: arrowPosition,\n      tooltip: tooltipPosition\n    });\n  }, [tooltipReactionType, rootRef]);\n  const getUsersPerReactionType = type => latestReactions.map(reaction => {\n    if (reaction.type === type) {\n      return reaction.user?.name || reaction.user?.id;\n    }\n    return null;\n  }).filter(Boolean);\n  const iHaveReactedWithReaction = reactionType => ownReactions.find(reaction => reaction.type === reactionType);\n  const getLatestUserForReactionType = type => latestReactions.find(reaction => reaction.type === type && !!reaction.user)?.user || undefined;\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__reaction-selector str-chat__message-reaction-selector str-chat-react__message-reaction-selector', {\n      'str-chat__reaction-selector--reverse': reverse\n    }),\n    \"data-testid\": 'reaction-selector',\n    ref: rootRef\n  }, !!tooltipReactionType && detailedView && React.createElement(\"div\", {\n    className: 'str-chat__reaction-selector-tooltip',\n    ref: tooltipRef,\n    style: {\n      left: tooltipPositions?.tooltip,\n      visibility: tooltipPositions ? 'visible' : 'hidden'\n    }\n  }, React.createElement(\"div\", {\n    className: 'arrow',\n    style: {\n      left: tooltipPositions?.arrow\n    }\n  }), getUsersPerReactionType(tooltipReactionType)?.map((user, i, users) => React.createElement(\"span\", {\n    className: 'latest-user-username',\n    key: `key-${i}-${user}`\n  }, `${user}${i < users.length - 1 ? ', ' : ''}`))), React.createElement(\"ul\", {\n    className: 'str-chat__message-reactions-list str-chat__message-reactions-options'\n  }, reactionOptions.map(({\n    Component,\n    name: reactionName,\n    type: reactionType\n  }) => {\n    const latestUser = getLatestUserForReactionType(reactionType);\n    const count = reactionGroups[reactionType]?.count ?? 0;\n    return React.createElement(\"li\", {\n      key: reactionType\n    }, React.createElement(\"button\", {\n      \"aria-label\": `Select Reaction: ${reactionName || reactionType}`,\n      className: clsx('str-chat__message-reactions-list-item str-chat__message-reactions-option', {\n        'str-chat__message-reactions-option-selected': iHaveReactedWithReaction(reactionType)\n      }),\n      \"data-testid\": 'select-reaction-button',\n      \"data-text\": reactionType,\n      onClick: event => {\n        handleReaction(reactionType, event);\n        if (closeReactionSelectorOnClick) {\n          dialog.close();\n        }\n      }\n    }, !!count && detailedView && React.createElement(\"div\", {\n      className: 'latest-user str-chat__message-reactions-last-user',\n      onClick: hideTooltip,\n      onMouseEnter: e => showTooltip(e, reactionType),\n      onMouseLeave: hideTooltip\n    }, latestUser ? React.createElement(Avatar, {\n      image: latestUser.image,\n      name: latestUser.name,\n      size: 20,\n      user: latestUser\n    }) : React.createElement(\"div\", {\n      className: 'latest-user-not-found'\n    })), React.createElement(\"span\", {\n      className: 'str-chat__message-reaction-emoji'\n    }, React.createElement(Component, null)), Boolean(count) && detailedView && React.createElement(\"span\", {\n      className: 'str-chat__message-reactions-list-item__count'\n    }, count || '')));\n  })));\n};\n/**\n * Component that allows a user to select a reaction.\n */\nexport const ReactionSelector = React.memo(UnMemoizedReactionSelector);","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","clsx","Avatar","DefaultAvatar","useDialog","defaultReactionOptions","isMutableRef","useComponentContext","useMessageContext","UnMemoizedReactionSelector","props","propAvatar","detailedView","handleReaction","propHandleReaction","latest_reactions","propLatestReactions","own_reactions","propOwnReactions","reaction_groups","propReactionGroups","reactionOptions","propReactionOptions","reverse","contextAvatar","contextReactionOptions","closeReactionSelectorOnClick","contextHandleReaction","message","dialogId","id","dialog","latestReactions","ownReactions","reactionGroups","tooltipReactionType","setTooltipReactionType","tooltipPositions","setTooltipPositions","rootRef","targetRef","tooltipRef","showTooltip","event","reactionType","current","currentTarget","hideTooltip","tooltip","getBoundingClientRect","target","container","tooltipPosition","width","x","left","arrowPosition","arrow","getUsersPerReactionType","type","map","reaction","user","name","filter","Boolean","iHaveReactedWithReaction","find","getLatestUserForReactionType","undefined","createElement","className","ref","style","visibility","i","users","key","length","Component","reactionName","latestUser","count","onClick","close","onMouseEnter","e","onMouseLeave","image","size","ReactionSelector","memo"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Reactions/ReactionSelector.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useDialog } from '../Dialog';\nimport { defaultReactionOptions } from './reactionOptions';\nimport { isMutableRef } from './utils/utils';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nconst UnMemoizedReactionSelector = (props) => {\n    const { Avatar: propAvatar, detailedView = true, handleReaction: propHandleReaction, latest_reactions: propLatestReactions, own_reactions: propOwnReactions, reaction_groups: propReactionGroups, reactionOptions: propReactionOptions, reverse = false, } = props;\n    const { Avatar: contextAvatar, reactionOptions: contextReactionOptions = defaultReactionOptions, } = useComponentContext('ReactionSelector');\n    const { closeReactionSelectorOnClick, handleReaction: contextHandleReaction, message, } = useMessageContext('ReactionSelector');\n    const dialogId = `reaction-selector--${message.id}`;\n    const dialog = useDialog({ id: dialogId });\n    const reactionOptions = propReactionOptions ?? contextReactionOptions;\n    const Avatar = propAvatar || contextAvatar || DefaultAvatar;\n    const handleReaction = propHandleReaction || contextHandleReaction;\n    const latestReactions = propLatestReactions || message?.latest_reactions || [];\n    const ownReactions = propOwnReactions || message?.own_reactions || [];\n    const reactionGroups = propReactionGroups || message?.reaction_groups || {};\n    const [tooltipReactionType, setTooltipReactionType] = useState(null);\n    const [tooltipPositions, setTooltipPositions] = useState(null);\n    const rootRef = useRef(null);\n    const targetRef = useRef(null);\n    const tooltipRef = useRef(null);\n    const showTooltip = useCallback((event, reactionType) => {\n        targetRef.current = event.currentTarget;\n        setTooltipReactionType(reactionType);\n    }, []);\n    const hideTooltip = useCallback(() => {\n        setTooltipReactionType(null);\n        setTooltipPositions(null);\n    }, []);\n    useEffect(() => {\n        if (!tooltipReactionType || !rootRef.current)\n            return;\n        const tooltip = tooltipRef.current?.getBoundingClientRect();\n        const target = targetRef.current?.getBoundingClientRect();\n        const container = isMutableRef(rootRef)\n            ? rootRef.current?.getBoundingClientRect()\n            : null;\n        if (!tooltip || !target || !container)\n            return;\n        const tooltipPosition = tooltip.width === container.width || tooltip.x < container.x\n            ? 0\n            : target.left + target.width / 2 - container.left - tooltip.width / 2;\n        const arrowPosition = target.x - tooltip.x + target.width / 2 - tooltipPosition;\n        setTooltipPositions({\n            arrow: arrowPosition,\n            tooltip: tooltipPosition,\n        });\n    }, [tooltipReactionType, rootRef]);\n    const getUsersPerReactionType = (type) => latestReactions\n        .map((reaction) => {\n        if (reaction.type === type) {\n            return reaction.user?.name || reaction.user?.id;\n        }\n        return null;\n    })\n        .filter(Boolean);\n    const iHaveReactedWithReaction = (reactionType) => ownReactions.find((reaction) => reaction.type === reactionType);\n    const getLatestUserForReactionType = (type) => latestReactions.find((reaction) => reaction.type === type && !!reaction.user)?.user ||\n        undefined;\n    return (React.createElement(\"div\", { className: clsx('str-chat__reaction-selector str-chat__message-reaction-selector str-chat-react__message-reaction-selector', {\n            'str-chat__reaction-selector--reverse': reverse,\n        }), \"data-testid\": 'reaction-selector', ref: rootRef },\n        !!tooltipReactionType && detailedView && (React.createElement(\"div\", { className: 'str-chat__reaction-selector-tooltip', ref: tooltipRef, style: {\n                left: tooltipPositions?.tooltip,\n                visibility: tooltipPositions ? 'visible' : 'hidden',\n            } },\n            React.createElement(\"div\", { className: 'arrow', style: { left: tooltipPositions?.arrow } }),\n            getUsersPerReactionType(tooltipReactionType)?.map((user, i, users) => (React.createElement(\"span\", { className: 'latest-user-username', key: `key-${i}-${user}` }, `${user}${i < users.length - 1 ? ', ' : ''}`))))),\n        React.createElement(\"ul\", { className: 'str-chat__message-reactions-list str-chat__message-reactions-options' }, reactionOptions.map(({ Component, name: reactionName, type: reactionType }) => {\n            const latestUser = getLatestUserForReactionType(reactionType);\n            const count = reactionGroups[reactionType]?.count ?? 0;\n            return (React.createElement(\"li\", { key: reactionType },\n                React.createElement(\"button\", { \"aria-label\": `Select Reaction: ${reactionName || reactionType}`, className: clsx('str-chat__message-reactions-list-item str-chat__message-reactions-option', {\n                        'str-chat__message-reactions-option-selected': iHaveReactedWithReaction(reactionType),\n                    }), \"data-testid\": 'select-reaction-button', \"data-text\": reactionType, onClick: (event) => {\n                        handleReaction(reactionType, event);\n                        if (closeReactionSelectorOnClick) {\n                            dialog.close();\n                        }\n                    } },\n                    !!count && detailedView && (React.createElement(\"div\", { className: 'latest-user str-chat__message-reactions-last-user', onClick: hideTooltip, onMouseEnter: (e) => showTooltip(e, reactionType), onMouseLeave: hideTooltip }, latestUser ? (React.createElement(Avatar, { image: latestUser.image, name: latestUser.name, size: 20, user: latestUser })) : (React.createElement(\"div\", { className: 'latest-user-not-found' })))),\n                    React.createElement(\"span\", { className: 'str-chat__message-reaction-emoji' },\n                        React.createElement(Component, null)),\n                    Boolean(count) && detailedView && (React.createElement(\"span\", { className: 'str-chat__message-reactions-list-item__count' }, count || '')))));\n        }))));\n};\n/**\n * Component that allows a user to select a reaction.\n */\nexport const ReactionSelector = React.memo(UnMemoizedReactionSelector);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}