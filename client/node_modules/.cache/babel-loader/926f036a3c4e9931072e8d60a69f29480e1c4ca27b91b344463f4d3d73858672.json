{"ast":null,"code":"import { useCallback } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nexport function useSelectedChannelState({\n  channel,\n  selector,\n  stateChangeEventKeys = ['all']\n}) {\n  const subscribe = useCallback(onStoreChange => {\n    if (!channel) return noop;\n    const subscriptions = stateChangeEventKeys.map(et => channel.on(et, () => {\n      onStoreChange(selector(channel));\n    }));\n    return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n  }, [channel, selector, stateChangeEventKeys]);\n  const getSnapshot = useCallback(() => {\n    if (!channel) return undefined;\n    return selector(channel);\n  }, [channel, selector]);\n  return useSyncExternalStore(subscribe, getSnapshot);\n}","map":{"version":3,"names":["useCallback","useSyncExternalStore","noop","useSelectedChannelState","channel","selector","stateChangeEventKeys","subscribe","onStoreChange","subscriptions","map","et","on","forEach","subscription","unsubscribe","getSnapshot","undefined"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useSelectedChannelState.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nexport function useSelectedChannelState({ channel, selector, stateChangeEventKeys = ['all'], }) {\n    const subscribe = useCallback((onStoreChange) => {\n        if (!channel)\n            return noop;\n        const subscriptions = stateChangeEventKeys.map((et) => channel.on(et, () => {\n            onStoreChange(selector(channel));\n        }));\n        return () => subscriptions.forEach((subscription) => subscription.unsubscribe());\n    }, [channel, selector, stateChangeEventKeys]);\n    const getSnapshot = useCallback(() => {\n        if (!channel)\n            return undefined;\n        return selector(channel);\n    }, [channel, selector]);\n    return useSyncExternalStore(subscribe, getSnapshot);\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAE,CAAC;AACtB,OAAO,SAASC,uBAAuBA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,oBAAoB,GAAG,CAAC,KAAK;AAAG,CAAC,EAAE;EAC5F,MAAMC,SAAS,GAAGP,WAAW,CAAEQ,aAAa,IAAK;IAC7C,IAAI,CAACJ,OAAO,EACR,OAAOF,IAAI;IACf,MAAMO,aAAa,GAAGH,oBAAoB,CAACI,GAAG,CAAEC,EAAE,IAAKP,OAAO,CAACQ,EAAE,CAACD,EAAE,EAAE,MAAM;MACxEH,aAAa,CAACH,QAAQ,CAACD,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,OAAO,MAAMK,aAAa,CAACI,OAAO,CAAEC,YAAY,IAAKA,YAAY,CAACC,WAAW,CAAC,CAAC,CAAC;EACpF,CAAC,EAAE,CAACX,OAAO,EAAEC,QAAQ,EAAEC,oBAAoB,CAAC,CAAC;EAC7C,MAAMU,WAAW,GAAGhB,WAAW,CAAC,MAAM;IAClC,IAAI,CAACI,OAAO,EACR,OAAOa,SAAS;IACpB,OAAOZ,QAAQ,CAACD,OAAO,CAAC;EAC5B,CAAC,EAAE,CAACA,OAAO,EAAEC,QAAQ,CAAC,CAAC;EACvB,OAAOJ,oBAAoB,CAACM,SAAS,EAAES,WAAW,CAAC;AACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}