{"ast":null,"code":"import React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { Modal } from '../Modal';\nimport { useFetchReactions } from './hooks/useFetchReactions';\nimport { LoadingIndicator } from '../Loading';\nimport { Avatar } from '../Avatar';\nimport { useMessageContext } from '../../context';\nconst defaultReactionDetailsSort = {\n  created_at: -1\n};\nexport function ReactionsListModal({\n  handleFetchReactions,\n  onSelectedReactionTypeChange,\n  reactionDetailsSort: propReactionDetailsSort,\n  reactions,\n  selectedReactionType,\n  sortReactionDetails: propSortReactionDetails,\n  ...modalProps\n}) {\n  const selectedReaction = reactions.find(({\n    reactionType\n  }) => reactionType === selectedReactionType);\n  const SelectedEmojiComponent = selectedReaction?.EmojiComponent ?? null;\n  const {\n    reactionDetailsSort: contextReactionDetailsSort,\n    sortReactionDetails: contextSortReactionDetails\n  } = useMessageContext('ReactionsListModal');\n  const legacySortReactionDetails = propSortReactionDetails ?? contextSortReactionDetails;\n  const reactionDetailsSort = propReactionDetailsSort ?? contextReactionDetailsSort ?? defaultReactionDetailsSort;\n  const {\n    isLoading: areReactionsLoading,\n    reactions: reactionDetails\n  } = useFetchReactions({\n    handleFetchReactions,\n    reactionType: selectedReactionType,\n    shouldFetch: modalProps.open,\n    sort: reactionDetailsSort\n  });\n  const reactionDetailsWithLegacyFallback = useMemo(() => legacySortReactionDetails ? [...reactionDetails].sort(legacySortReactionDetails) : reactionDetails, [legacySortReactionDetails, reactionDetails]);\n  return React.createElement(Modal, {\n    ...modalProps,\n    className: clsx('str-chat__message-reactions-details-modal', modalProps.className)\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details',\n    \"data-testid\": 'reactions-list-modal'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details-reaction-types'\n  }, reactions.map(({\n    EmojiComponent,\n    reactionCount,\n    reactionType\n  }) => EmojiComponent && React.createElement(\"div\", {\n    className: clsx('str-chat__message-reactions-details-reaction-type', {\n      'str-chat__message-reactions-details-reaction-type--selected': selectedReactionType === reactionType\n    }),\n    \"data-testid\": `reaction-details-selector-${reactionType}`,\n    key: reactionType,\n    onClick: () => onSelectedReactionTypeChange?.(reactionType)\n  }, React.createElement(\"span\", {\n    className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback'\n  }, React.createElement(EmojiComponent, null)), \"\\u00A0\", React.createElement(\"span\", {\n    className: 'str-chat__message-reaction-count'\n  }, reactionCount)))), SelectedEmojiComponent && React.createElement(\"div\", {\n    className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback str-chat__message-reaction-emoji-big'\n  }, React.createElement(SelectedEmojiComponent, null)), React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details-reacting-users',\n    \"data-testid\": 'all-reacting-users'\n  }, areReactionsLoading ? React.createElement(LoadingIndicator, null) : reactionDetailsWithLegacyFallback.map(({\n    user\n  }) => React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details-reacting-user',\n    key: user?.id\n  }, React.createElement(Avatar, {\n    className: 'stream-chat__avatar--reaction',\n    \"data-testid\": 'avatar',\n    image: user?.image,\n    name: user?.name || user?.id\n  }), React.createElement(\"span\", {\n    className: 'str-chat__user-item--name',\n    \"data-testid\": 'reaction-user-username'\n  }, user?.name || user?.id))))));\n}","map":{"version":3,"names":["React","useMemo","clsx","Modal","useFetchReactions","LoadingIndicator","Avatar","useMessageContext","defaultReactionDetailsSort","created_at","ReactionsListModal","handleFetchReactions","onSelectedReactionTypeChange","reactionDetailsSort","propReactionDetailsSort","reactions","selectedReactionType","sortReactionDetails","propSortReactionDetails","modalProps","selectedReaction","find","reactionType","SelectedEmojiComponent","EmojiComponent","contextReactionDetailsSort","contextSortReactionDetails","legacySortReactionDetails","isLoading","areReactionsLoading","reactionDetails","shouldFetch","open","sort","reactionDetailsWithLegacyFallback","createElement","className","map","reactionCount","key","onClick","user","id","image","name"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Reactions/ReactionsListModal.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { Modal } from '../Modal';\nimport { useFetchReactions } from './hooks/useFetchReactions';\nimport { LoadingIndicator } from '../Loading';\nimport { Avatar } from '../Avatar';\nimport { useMessageContext } from '../../context';\nconst defaultReactionDetailsSort = { created_at: -1 };\nexport function ReactionsListModal({ handleFetchReactions, onSelectedReactionTypeChange, reactionDetailsSort: propReactionDetailsSort, reactions, selectedReactionType, sortReactionDetails: propSortReactionDetails, ...modalProps }) {\n    const selectedReaction = reactions.find(({ reactionType }) => reactionType === selectedReactionType);\n    const SelectedEmojiComponent = selectedReaction?.EmojiComponent ?? null;\n    const { reactionDetailsSort: contextReactionDetailsSort, sortReactionDetails: contextSortReactionDetails, } = useMessageContext('ReactionsListModal');\n    const legacySortReactionDetails = propSortReactionDetails ?? contextSortReactionDetails;\n    const reactionDetailsSort = propReactionDetailsSort ?? contextReactionDetailsSort ?? defaultReactionDetailsSort;\n    const { isLoading: areReactionsLoading, reactions: reactionDetails } = useFetchReactions({\n        handleFetchReactions,\n        reactionType: selectedReactionType,\n        shouldFetch: modalProps.open,\n        sort: reactionDetailsSort,\n    });\n    const reactionDetailsWithLegacyFallback = useMemo(() => legacySortReactionDetails\n        ? [...reactionDetails].sort(legacySortReactionDetails)\n        : reactionDetails, [legacySortReactionDetails, reactionDetails]);\n    return (React.createElement(Modal, { ...modalProps, className: clsx('str-chat__message-reactions-details-modal', modalProps.className) },\n        React.createElement(\"div\", { className: 'str-chat__message-reactions-details', \"data-testid\": 'reactions-list-modal' },\n            React.createElement(\"div\", { className: 'str-chat__message-reactions-details-reaction-types' }, reactions.map(({ EmojiComponent, reactionCount, reactionType }) => EmojiComponent && (React.createElement(\"div\", { className: clsx('str-chat__message-reactions-details-reaction-type', {\n                    'str-chat__message-reactions-details-reaction-type--selected': selectedReactionType === reactionType,\n                }), \"data-testid\": `reaction-details-selector-${reactionType}`, key: reactionType, onClick: () => onSelectedReactionTypeChange?.(reactionType) },\n                React.createElement(\"span\", { className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback' },\n                    React.createElement(EmojiComponent, null)),\n                \"\\u00A0\",\n                React.createElement(\"span\", { className: 'str-chat__message-reaction-count' }, reactionCount))))),\n            SelectedEmojiComponent && (React.createElement(\"div\", { className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback str-chat__message-reaction-emoji-big' },\n                React.createElement(SelectedEmojiComponent, null))),\n            React.createElement(\"div\", { className: 'str-chat__message-reactions-details-reacting-users', \"data-testid\": 'all-reacting-users' }, areReactionsLoading ? (React.createElement(LoadingIndicator, null)) : (reactionDetailsWithLegacyFallback.map(({ user }) => (React.createElement(\"div\", { className: 'str-chat__message-reactions-details-reacting-user', key: user?.id },\n                React.createElement(Avatar, { className: 'stream-chat__avatar--reaction', \"data-testid\": 'avatar', image: user?.image, name: user?.name || user?.id }),\n                React.createElement(\"span\", { className: 'str-chat__user-item--name', \"data-testid\": 'reaction-user-username' }, user?.name || user?.id)))))))));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}