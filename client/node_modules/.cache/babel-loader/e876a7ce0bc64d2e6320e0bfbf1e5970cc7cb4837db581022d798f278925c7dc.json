{"ast":null,"code":"import React, { Fragment } from 'react';\nimport { getIsFirstUnreadMessage, isDateSeparatorMessage, isIntroMessage } from './utils';\nimport { Message } from '../Message';\nimport { DateSeparator as DefaultDateSeparator } from '../DateSeparator';\nimport { EventComponent as DefaultMessageSystem } from '../EventComponent';\nimport { UnreadMessagesSeparator as DefaultUnreadMessagesSeparator } from './UnreadMessagesSeparator';\nexport function defaultRenderMessages({\n  channelUnreadUiState,\n  components,\n  customClasses,\n  lastReceivedMessageId: lastReceivedId,\n  messageGroupStyles,\n  messages,\n  readData,\n  sharedMessageProps: messageProps\n}) {\n  const {\n    DateSeparator = DefaultDateSeparator,\n    HeaderComponent,\n    MessageSystem = DefaultMessageSystem,\n    UnreadMessagesSeparator = DefaultUnreadMessagesSeparator\n  } = components;\n  const renderedMessages = [];\n  let firstMessage;\n  let previousMessage = undefined;\n  for (let index = 0; index < messages.length; index++) {\n    const message = messages[index];\n    if (isDateSeparatorMessage(message)) {\n      renderedMessages.push(React.createElement(\"li\", {\n        key: `${message.date.toISOString()}-i`\n      }, React.createElement(DateSeparator, {\n        date: message.date,\n        formatDate: messageProps.formatDate,\n        unread: message.unread\n      })));\n    } else if (isIntroMessage(message)) {\n      if (HeaderComponent) {\n        renderedMessages.push(React.createElement(\"li\", {\n          key: 'intro'\n        }, React.createElement(HeaderComponent, null)));\n      }\n    } else if (message.type === 'system') {\n      renderedMessages.push(React.createElement(\"li\", {\n        \"data-message-id\": message.id,\n        key: message.id || message.created_at.toISOString()\n      }, React.createElement(MessageSystem, {\n        message: message\n      })));\n    } else {\n      if (!firstMessage) {\n        firstMessage = message;\n      }\n      const groupStyles = messageGroupStyles[message.id] || '';\n      const messageClass = customClasses?.message || `str-chat__li str-chat__li--${groupStyles}`;\n      const isFirstUnreadMessage = getIsFirstUnreadMessage({\n        firstUnreadMessageId: channelUnreadUiState?.first_unread_message_id,\n        isFirstMessage: !!firstMessage?.id && firstMessage.id === message.id,\n        lastReadDate: channelUnreadUiState?.last_read,\n        lastReadMessageId: channelUnreadUiState?.last_read_message_id,\n        message,\n        previousMessage,\n        unreadMessageCount: channelUnreadUiState?.unread_messages\n      });\n      renderedMessages.push(React.createElement(Fragment, {\n        key: message.id || message.created_at.toISOString()\n      }, isFirstUnreadMessage && UnreadMessagesSeparator && React.createElement(\"li\", {\n        className: 'str-chat__li str-chat__unread-messages-separator-wrapper'\n      }, React.createElement(UnreadMessagesSeparator, {\n        unreadCount: channelUnreadUiState?.unread_messages\n      })), React.createElement(\"li\", {\n        className: messageClass,\n        \"data-message-id\": message.id,\n        \"data-testid\": messageClass\n      }, React.createElement(Message, {\n        groupStyles: [groupStyles],\n        lastReceivedId: lastReceivedId,\n        message: message,\n        readBy: readData[message.id] || [],\n        ...messageProps\n      }))));\n      previousMessage = message;\n    }\n  }\n  return renderedMessages;\n}","map":{"version":3,"names":["React","Fragment","getIsFirstUnreadMessage","isDateSeparatorMessage","isIntroMessage","Message","DateSeparator","DefaultDateSeparator","EventComponent","DefaultMessageSystem","UnreadMessagesSeparator","DefaultUnreadMessagesSeparator","defaultRenderMessages","channelUnreadUiState","components","customClasses","lastReceivedMessageId","lastReceivedId","messageGroupStyles","messages","readData","sharedMessageProps","messageProps","HeaderComponent","MessageSystem","renderedMessages","firstMessage","previousMessage","undefined","index","length","message","push","createElement","key","date","toISOString","formatDate","unread","type","id","created_at","groupStyles","messageClass","isFirstUnreadMessage","firstUnreadMessageId","first_unread_message_id","isFirstMessage","lastReadDate","last_read","lastReadMessageId","last_read_message_id","unreadMessageCount","unread_messages","className","unreadCount","readBy"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/node_modules/stream-chat-react/dist/components/MessageList/renderMessages.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { getIsFirstUnreadMessage, isDateSeparatorMessage, isIntroMessage } from './utils';\nimport { Message } from '../Message';\nimport { DateSeparator as DefaultDateSeparator } from '../DateSeparator';\nimport { EventComponent as DefaultMessageSystem } from '../EventComponent';\nimport { UnreadMessagesSeparator as DefaultUnreadMessagesSeparator } from './UnreadMessagesSeparator';\nexport function defaultRenderMessages({ channelUnreadUiState, components, customClasses, lastReceivedMessageId: lastReceivedId, messageGroupStyles, messages, readData, sharedMessageProps: messageProps, }) {\n    const { DateSeparator = DefaultDateSeparator, HeaderComponent, MessageSystem = DefaultMessageSystem, UnreadMessagesSeparator = DefaultUnreadMessagesSeparator, } = components;\n    const renderedMessages = [];\n    let firstMessage;\n    let previousMessage = undefined;\n    for (let index = 0; index < messages.length; index++) {\n        const message = messages[index];\n        if (isDateSeparatorMessage(message)) {\n            renderedMessages.push(React.createElement(\"li\", { key: `${message.date.toISOString()}-i` },\n                React.createElement(DateSeparator, { date: message.date, formatDate: messageProps.formatDate, unread: message.unread })));\n        }\n        else if (isIntroMessage(message)) {\n            if (HeaderComponent) {\n                renderedMessages.push(React.createElement(\"li\", { key: 'intro' },\n                    React.createElement(HeaderComponent, null)));\n            }\n        }\n        else if (message.type === 'system') {\n            renderedMessages.push(React.createElement(\"li\", { \"data-message-id\": message.id, key: message.id || message.created_at.toISOString() },\n                React.createElement(MessageSystem, { message: message })));\n        }\n        else {\n            if (!firstMessage) {\n                firstMessage = message;\n            }\n            const groupStyles = messageGroupStyles[message.id] || '';\n            const messageClass = customClasses?.message || `str-chat__li str-chat__li--${groupStyles}`;\n            const isFirstUnreadMessage = getIsFirstUnreadMessage({\n                firstUnreadMessageId: channelUnreadUiState?.first_unread_message_id,\n                isFirstMessage: !!firstMessage?.id && firstMessage.id === message.id,\n                lastReadDate: channelUnreadUiState?.last_read,\n                lastReadMessageId: channelUnreadUiState?.last_read_message_id,\n                message,\n                previousMessage,\n                unreadMessageCount: channelUnreadUiState?.unread_messages,\n            });\n            renderedMessages.push(React.createElement(Fragment, { key: message.id || message.created_at.toISOString() },\n                isFirstUnreadMessage && UnreadMessagesSeparator && (React.createElement(\"li\", { className: 'str-chat__li str-chat__unread-messages-separator-wrapper' },\n                    React.createElement(UnreadMessagesSeparator, { unreadCount: channelUnreadUiState?.unread_messages }))),\n                React.createElement(\"li\", { className: messageClass, \"data-message-id\": message.id, \"data-testid\": messageClass },\n                    React.createElement(Message, { groupStyles: [groupStyles], lastReceivedId: lastReceivedId, message: message, readBy: readData[message.id] || [], ...messageProps }))));\n            previousMessage = message;\n        }\n    }\n    return renderedMessages;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}