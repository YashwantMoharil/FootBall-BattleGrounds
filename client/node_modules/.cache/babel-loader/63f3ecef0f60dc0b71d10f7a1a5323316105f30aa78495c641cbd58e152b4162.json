{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { MessageInputFlat } from './MessageInputFlat';\nimport { useMessageComposer } from './hooks';\nimport { useCooldownTimer } from './hooks/useCooldownTimer';\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { useMessageInputControls } from './hooks/useMessageInputControls';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { MessageInputContextProvider } from '../../context/MessageInputContext';\nimport { DialogManagerProvider } from '../../context';\nimport { useStableId } from '../UtilityComponents/useStableId';\nimport { useRegisterDropHandlers } from './WithDragAndDropUpload';\nconst MessageInputProvider = props => {\n  const cooldownTimerState = useCooldownTimer();\n  const messageInputUiApi = useMessageInputControls(props);\n  const {\n    emojiSearchIndex\n  } = useComponentContext('MessageInput');\n  const messageInputContextValue = useCreateMessageInputContext({\n    ...cooldownTimerState,\n    ...messageInputUiApi,\n    ...props,\n    emojiSearchIndex: props.emojiSearchIndex ?? emojiSearchIndex\n  });\n  const messageComposer = useMessageComposer();\n  useEffect(() => () => {\n    messageComposer.createDraft();\n  }, [messageComposer]);\n  useEffect(() => {\n    const threadId = messageComposer.threadId;\n    if (!threadId || !messageComposer.channel || !messageComposer.compositionIsEmpty) return;\n    // get draft data for legacy thead composer\n    messageComposer.channel.getDraft({\n      parent_id: threadId\n    }).then(({\n      draft\n    }) => {\n      if (draft) {\n        messageComposer.initState({\n          composition: draft\n        });\n      }\n    });\n  }, [messageComposer]);\n  useRegisterDropHandlers();\n  return React.createElement(MessageInputContextProvider, {\n    value: messageInputContextValue\n  }, props.children);\n};\nconst UnMemoizedMessageInput = props => {\n  const {\n    Input: PropInput\n  } = props;\n  const {\n    Input: ContextInput\n  } = useComponentContext('MessageInput');\n  const id = useStableId();\n  const Input = PropInput || ContextInput || MessageInputFlat;\n  const dialogManagerId = props.isThreadInput ? `message-input-dialog-manager-thread-${id}` : `message-input-dialog-manager-${id}`;\n  return React.createElement(DialogManagerProvider, {\n    id: dialogManagerId\n  }, React.createElement(MessageInputProvider, {\n    ...props\n  }, React.createElement(Input, null)));\n};\n/**\n * A high level component that has provides all functionality to the Input it renders.\n */\nexport const MessageInput = React.memo(UnMemoizedMessageInput);","map":{"version":3,"names":["React","useEffect","MessageInputFlat","useMessageComposer","useCooldownTimer","useCreateMessageInputContext","useMessageInputControls","useComponentContext","MessageInputContextProvider","DialogManagerProvider","useStableId","useRegisterDropHandlers","MessageInputProvider","props","cooldownTimerState","messageInputUiApi","emojiSearchIndex","messageInputContextValue","messageComposer","createDraft","threadId","channel","compositionIsEmpty","getDraft","parent_id","then","draft","initState","composition","createElement","value","children","UnMemoizedMessageInput","Input","PropInput","ContextInput","id","dialogManagerId","isThreadInput","MessageInput","memo"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/MessageInput/MessageInput.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { MessageInputFlat } from './MessageInputFlat';\nimport { useMessageComposer } from './hooks';\nimport { useCooldownTimer } from './hooks/useCooldownTimer';\nimport { useCreateMessageInputContext } from './hooks/useCreateMessageInputContext';\nimport { useMessageInputControls } from './hooks/useMessageInputControls';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { MessageInputContextProvider } from '../../context/MessageInputContext';\nimport { DialogManagerProvider } from '../../context';\nimport { useStableId } from '../UtilityComponents/useStableId';\nimport { useRegisterDropHandlers } from './WithDragAndDropUpload';\nconst MessageInputProvider = (props) => {\n    const cooldownTimerState = useCooldownTimer();\n    const messageInputUiApi = useMessageInputControls(props);\n    const { emojiSearchIndex } = useComponentContext('MessageInput');\n    const messageInputContextValue = useCreateMessageInputContext({\n        ...cooldownTimerState,\n        ...messageInputUiApi,\n        ...props,\n        emojiSearchIndex: props.emojiSearchIndex ?? emojiSearchIndex,\n    });\n    const messageComposer = useMessageComposer();\n    useEffect(() => () => {\n        messageComposer.createDraft();\n    }, [messageComposer]);\n    useEffect(() => {\n        const threadId = messageComposer.threadId;\n        if (!threadId || !messageComposer.channel || !messageComposer.compositionIsEmpty)\n            return;\n        // get draft data for legacy thead composer\n        messageComposer.channel.getDraft({ parent_id: threadId }).then(({ draft }) => {\n            if (draft) {\n                messageComposer.initState({ composition: draft });\n            }\n        });\n    }, [messageComposer]);\n    useRegisterDropHandlers();\n    return (React.createElement(MessageInputContextProvider, { value: messageInputContextValue }, props.children));\n};\nconst UnMemoizedMessageInput = (props) => {\n    const { Input: PropInput } = props;\n    const { Input: ContextInput } = useComponentContext('MessageInput');\n    const id = useStableId();\n    const Input = PropInput || ContextInput || MessageInputFlat;\n    const dialogManagerId = props.isThreadInput\n        ? `message-input-dialog-manager-thread-${id}`\n        : `message-input-dialog-manager-${id}`;\n    return (React.createElement(DialogManagerProvider, { id: dialogManagerId },\n        React.createElement(MessageInputProvider, { ...props },\n            React.createElement(Input, null))));\n};\n/**\n * A high level component that has provides all functionality to the Input it renders.\n */\nexport const MessageInput = React.memo(UnMemoizedMessageInput);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,kBAAkB,QAAQ,SAAS;AAC5C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,4BAA4B,QAAQ,sCAAsC;AACnF,SAASC,uBAAuB,QAAQ,iCAAiC;AACzE,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,2BAA2B,QAAQ,mCAAmC;AAC/E,SAASC,qBAAqB,QAAQ,eAAe;AACrD,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EACpC,MAAMC,kBAAkB,GAAGV,gBAAgB,CAAC,CAAC;EAC7C,MAAMW,iBAAiB,GAAGT,uBAAuB,CAACO,KAAK,CAAC;EACxD,MAAM;IAAEG;EAAiB,CAAC,GAAGT,mBAAmB,CAAC,cAAc,CAAC;EAChE,MAAMU,wBAAwB,GAAGZ,4BAA4B,CAAC;IAC1D,GAAGS,kBAAkB;IACrB,GAAGC,iBAAiB;IACpB,GAAGF,KAAK;IACRG,gBAAgB,EAAEH,KAAK,CAACG,gBAAgB,IAAIA;EAChD,CAAC,CAAC;EACF,MAAME,eAAe,GAAGf,kBAAkB,CAAC,CAAC;EAC5CF,SAAS,CAAC,MAAM,MAAM;IAClBiB,eAAe,CAACC,WAAW,CAAC,CAAC;EACjC,CAAC,EAAE,CAACD,eAAe,CAAC,CAAC;EACrBjB,SAAS,CAAC,MAAM;IACZ,MAAMmB,QAAQ,GAAGF,eAAe,CAACE,QAAQ;IACzC,IAAI,CAACA,QAAQ,IAAI,CAACF,eAAe,CAACG,OAAO,IAAI,CAACH,eAAe,CAACI,kBAAkB,EAC5E;IACJ;IACAJ,eAAe,CAACG,OAAO,CAACE,QAAQ,CAAC;MAAEC,SAAS,EAAEJ;IAAS,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC;MAAEC;IAAM,CAAC,KAAK;MAC1E,IAAIA,KAAK,EAAE;QACPR,eAAe,CAACS,SAAS,CAAC;UAAEC,WAAW,EAAEF;QAAM,CAAC,CAAC;MACrD;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EACrBP,uBAAuB,CAAC,CAAC;EACzB,OAAQX,KAAK,CAAC6B,aAAa,CAACrB,2BAA2B,EAAE;IAAEsB,KAAK,EAAEb;EAAyB,CAAC,EAAEJ,KAAK,CAACkB,QAAQ,CAAC;AACjH,CAAC;AACD,MAAMC,sBAAsB,GAAInB,KAAK,IAAK;EACtC,MAAM;IAAEoB,KAAK,EAAEC;EAAU,CAAC,GAAGrB,KAAK;EAClC,MAAM;IAAEoB,KAAK,EAAEE;EAAa,CAAC,GAAG5B,mBAAmB,CAAC,cAAc,CAAC;EACnE,MAAM6B,EAAE,GAAG1B,WAAW,CAAC,CAAC;EACxB,MAAMuB,KAAK,GAAGC,SAAS,IAAIC,YAAY,IAAIjC,gBAAgB;EAC3D,MAAMmC,eAAe,GAAGxB,KAAK,CAACyB,aAAa,GACrC,uCAAuCF,EAAE,EAAE,GAC3C,gCAAgCA,EAAE,EAAE;EAC1C,OAAQpC,KAAK,CAAC6B,aAAa,CAACpB,qBAAqB,EAAE;IAAE2B,EAAE,EAAEC;EAAgB,CAAC,EACtErC,KAAK,CAAC6B,aAAa,CAACjB,oBAAoB,EAAE;IAAE,GAAGC;EAAM,CAAC,EAClDb,KAAK,CAAC6B,aAAa,CAACI,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9C,CAAC;AACD;AACA;AACA;AACA,OAAO,MAAMM,YAAY,GAAGvC,KAAK,CAACwC,IAAI,CAACR,sBAAsB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}