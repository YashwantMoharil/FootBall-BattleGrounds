{"ast":null,"code":"import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nexport const renderPreviewText = text => React.createElement(ReactMarkdown, {\n  skipHtml: true\n}, text);\nconst getLatestPollVote = latestVotesByOption => {\n  let latestVote;\n  for (const optionVotes of Object.values(latestVotesByOption)) {\n    optionVotes.forEach(vote => {\n      if (latestVote && new Date(latestVote.updated_at) >= new Date(vote.created_at)) return;\n      latestVote = vote;\n    });\n  }\n  return latestVote;\n};\nexport const getLatestMessagePreview = (channel, t, userLanguage = 'en', isMessageAIGenerated) => {\n  const latestMessage = channel.state.latestMessages[channel.state.latestMessages.length - 1];\n  const previewTextToRender = latestMessage?.i18n?.[`${userLanguage}_text`] || latestMessage?.text;\n  const poll = latestMessage?.poll;\n  if (!latestMessage) {\n    return t('Nothing yet...');\n  }\n  if (latestMessage.deleted_at) {\n    return t('Message deleted');\n  }\n  if (poll) {\n    if (!poll.vote_count) {\n      const createdBy = poll.created_by?.id === channel.getClient().userID ? t('You') : poll.created_by?.name ?? t('Poll');\n      return t('📊 {{createdBy}} created: {{ pollName}}', {\n        createdBy,\n        pollName: poll.name\n      });\n    } else {\n      const latestVote = getLatestPollVote(poll.latest_votes_by_option);\n      const option = latestVote && poll.options.find(opt => opt.id === latestVote.option_id);\n      if (option && latestVote) {\n        return t('📊 {{votedBy}} voted: {{pollOptionText}}', {\n          pollOptionText: option.text,\n          votedBy: latestVote?.user?.id === channel.getClient().userID ? t('You') : latestVote.user?.name ?? t('Poll')\n        });\n      }\n    }\n  }\n  if (previewTextToRender) {\n    return isMessageAIGenerated?.(latestMessage) ? previewTextToRender : renderPreviewText(previewTextToRender);\n  }\n  if (latestMessage.command) {\n    return `/${latestMessage.command}`;\n  }\n  if (latestMessage.attachments?.length) {\n    return t('🏙 Attachment...');\n  }\n  return t('Empty message...');\n};\nexport const getGroupChannelDisplayInfo = channel => {\n  const members = Object.values(channel.state.members);\n  if (members.length <= 2) return;\n  const info = [];\n  for (let i = 0; i < members.length; i++) {\n    const {\n      user\n    } = members[i];\n    if (!user?.name && !user?.image) continue;\n    info.push({\n      image: user.image,\n      name: user.name\n    });\n    if (info.length === 4) break;\n  }\n  return info;\n};\nconst getChannelDisplayInfo = (info, channel, currentUser) => {\n  if (channel.data?.[info]) return channel.data[info];\n  const members = Object.values(channel.state.members);\n  if (members.length !== 2) return;\n  const otherMember = members.find(member => member.user?.id !== currentUser?.id);\n  return otherMember?.user?.[info];\n};\nexport const getDisplayTitle = (channel, currentUser) => getChannelDisplayInfo('name', channel, currentUser);\nexport const getDisplayImage = (channel, currentUser) => getChannelDisplayInfo('image', channel, currentUser);","map":{"version":3,"names":["React","ReactMarkdown","renderPreviewText","text","createElement","skipHtml","getLatestPollVote","latestVotesByOption","latestVote","optionVotes","Object","values","forEach","vote","Date","updated_at","created_at","getLatestMessagePreview","channel","t","userLanguage","isMessageAIGenerated","latestMessage","state","latestMessages","length","previewTextToRender","i18n","poll","deleted_at","vote_count","createdBy","created_by","id","getClient","userID","name","pollName","latest_votes_by_option","option","options","find","opt","option_id","pollOptionText","votedBy","user","command","attachments","getGroupChannelDisplayInfo","members","info","i","image","push","getChannelDisplayInfo","currentUser","data","otherMember","member","getDisplayTitle","getDisplayImage"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/ChannelPreview/utils.js"],"sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nexport const renderPreviewText = (text) => (React.createElement(ReactMarkdown, { skipHtml: true }, text));\nconst getLatestPollVote = (latestVotesByOption) => {\n    let latestVote;\n    for (const optionVotes of Object.values(latestVotesByOption)) {\n        optionVotes.forEach((vote) => {\n            if (latestVote && new Date(latestVote.updated_at) >= new Date(vote.created_at))\n                return;\n            latestVote = vote;\n        });\n    }\n    return latestVote;\n};\nexport const getLatestMessagePreview = (channel, t, userLanguage = 'en', isMessageAIGenerated) => {\n    const latestMessage = channel.state.latestMessages[channel.state.latestMessages.length - 1];\n    const previewTextToRender = latestMessage?.i18n?.[`${userLanguage}_text`] ||\n        latestMessage?.text;\n    const poll = latestMessage?.poll;\n    if (!latestMessage) {\n        return t('Nothing yet...');\n    }\n    if (latestMessage.deleted_at) {\n        return t('Message deleted');\n    }\n    if (poll) {\n        if (!poll.vote_count) {\n            const createdBy = poll.created_by?.id === channel.getClient().userID\n                ? t('You')\n                : (poll.created_by?.name ?? t('Poll'));\n            return t('📊 {{createdBy}} created: {{ pollName}}', {\n                createdBy,\n                pollName: poll.name,\n            });\n        }\n        else {\n            const latestVote = getLatestPollVote(poll.latest_votes_by_option);\n            const option = latestVote && poll.options.find((opt) => opt.id === latestVote.option_id);\n            if (option && latestVote) {\n                return t('📊 {{votedBy}} voted: {{pollOptionText}}', {\n                    pollOptionText: option.text,\n                    votedBy: latestVote?.user?.id === channel.getClient().userID\n                        ? t('You')\n                        : (latestVote.user?.name ?? t('Poll')),\n                });\n            }\n        }\n    }\n    if (previewTextToRender) {\n        return isMessageAIGenerated?.(latestMessage)\n            ? previewTextToRender\n            : renderPreviewText(previewTextToRender);\n    }\n    if (latestMessage.command) {\n        return `/${latestMessage.command}`;\n    }\n    if (latestMessage.attachments?.length) {\n        return t('🏙 Attachment...');\n    }\n    return t('Empty message...');\n};\nexport const getGroupChannelDisplayInfo = (channel) => {\n    const members = Object.values(channel.state.members);\n    if (members.length <= 2)\n        return;\n    const info = [];\n    for (let i = 0; i < members.length; i++) {\n        const { user } = members[i];\n        if (!user?.name && !user?.image)\n            continue;\n        info.push({ image: user.image, name: user.name });\n        if (info.length === 4)\n            break;\n    }\n    return info;\n};\nconst getChannelDisplayInfo = (info, channel, currentUser) => {\n    if (channel.data?.[info])\n        return channel.data[info];\n    const members = Object.values(channel.state.members);\n    if (members.length !== 2)\n        return;\n    const otherMember = members.find((member) => member.user?.id !== currentUser?.id);\n    return otherMember?.user?.[info];\n};\nexport const getDisplayTitle = (channel, currentUser) => getChannelDisplayInfo('name', channel, currentUser);\nexport const getDisplayImage = (channel, currentUser) => getChannelDisplayInfo('image', channel, currentUser);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}