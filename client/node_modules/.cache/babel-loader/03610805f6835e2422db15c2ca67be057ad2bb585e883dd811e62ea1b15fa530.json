{"ast":null,"code":"import clsx from 'clsx';\nimport debounce from 'lodash.debounce';\nimport React, { useMemo } from 'react';\nimport { isVoteAnswer } from 'stream-chat';\nimport { Avatar } from '../Avatar';\nimport { useChannelStateContext, useMessageContext, usePollContext, useTranslationContext } from '../../context';\nimport { useStateStore } from '../../store';\nexport const AmountBar = ({\n  amount,\n  className\n}) => React.createElement(\"div\", {\n  className: clsx('str-chat__amount-bar', className),\n  \"data-testid\": 'amount-bar',\n  role: 'progressbar',\n  style: {\n    '--str-chat__amount-bar-fulfillment': amount + '%'\n  }\n});\nexport const Checkmark = ({\n  checked\n}) => React.createElement(\"div\", {\n  className: clsx('str-chat__checkmark', {\n    'str-chat__checkmark--checked': checked\n  })\n});\nconst pollStateSelector = nextValue => ({\n  is_closed: nextValue.is_closed,\n  latest_votes_by_option: nextValue.latest_votes_by_option,\n  maxVotedOptionIds: nextValue.maxVotedOptionIds,\n  ownVotesByOptionId: nextValue.ownVotesByOptionId,\n  vote_counts_by_option: nextValue.vote_counts_by_option,\n  voting_visibility: nextValue.voting_visibility\n});\nexport const PollOptionSelector = ({\n  displayAvatarCount,\n  option,\n  voteCountVerbose\n}) => {\n  const {\n    t\n  } = useTranslationContext();\n  const {\n    channelCapabilities = {}\n  } = useChannelStateContext('PollOptionsShortlist');\n  const {\n    message\n  } = useMessageContext();\n  const {\n    poll\n  } = usePollContext();\n  const {\n    is_closed,\n    latest_votes_by_option,\n    maxVotedOptionIds,\n    ownVotesByOptionId,\n    vote_counts_by_option,\n    voting_visibility\n  } = useStateStore(poll.state, pollStateSelector);\n  const canCastVote = channelCapabilities['cast-poll-vote'] && !is_closed;\n  const winningOptionCount = maxVotedOptionIds[0] ? vote_counts_by_option[maxVotedOptionIds[0]] : 0;\n  const toggleVote = useMemo(() => debounce(() => {\n    if (!canCastVote) return;\n    const haveVotedForTheOption = !!ownVotesByOptionId[option.id];\n    return haveVotedForTheOption ? poll.removeVote(ownVotesByOptionId[option.id].id, message.id) : poll.castVote(option.id, message.id);\n  }, 100), [canCastVote, message.id, option.id, ownVotesByOptionId, poll]);\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__poll-option', {\n      'str-chat__poll-option--votable': canCastVote\n    }),\n    key: `base-poll-option-${option.id}`,\n    onClick: toggleVote\n  }, canCastVote && React.createElement(Checkmark, {\n    checked: !!ownVotesByOptionId[option.id]\n  }), React.createElement(\"div\", {\n    className: 'str-chat__poll-option-data'\n  }, React.createElement(\"p\", {\n    className: 'str-chat__poll-option-text'\n  }, option.text), displayAvatarCount && voting_visibility === 'public' && React.createElement(\"div\", {\n    className: 'str-chat__poll-option-voters'\n  }, latest_votes_by_option?.[option.id] && latest_votes_by_option[option.id].filter(vote => !!vote.user && !isVoteAnswer(vote)).slice(0, displayAvatarCount).map(({\n    user\n  }) => React.createElement(Avatar, {\n    image: user?.image,\n    key: `poll-option-${option.id}-avatar-${user?.id}`,\n    name: user?.name\n  }))), React.createElement(\"div\", {\n    className: 'str-chat__poll-option-vote-count'\n  }, voteCountVerbose ? t('{{count}} votes', {\n    count: vote_counts_by_option[option.id] ?? 0\n  }) : vote_counts_by_option[option.id] ?? 0)), React.createElement(AmountBar, {\n    amount: (winningOptionCount && (vote_counts_by_option[option.id] ?? 0) / winningOptionCount) * 100,\n    className: clsx('str-chat__poll-option__votes-bar', {\n      'str-chat__poll-option__votes-bar--winner': is_closed && maxVotedOptionIds.length === 1 && maxVotedOptionIds[0] === option.id\n    })\n  }));\n};","map":{"version":3,"names":["clsx","debounce","React","useMemo","isVoteAnswer","Avatar","useChannelStateContext","useMessageContext","usePollContext","useTranslationContext","useStateStore","AmountBar","amount","className","createElement","role","style","Checkmark","checked","pollStateSelector","nextValue","is_closed","latest_votes_by_option","maxVotedOptionIds","ownVotesByOptionId","vote_counts_by_option","voting_visibility","PollOptionSelector","displayAvatarCount","option","voteCountVerbose","t","channelCapabilities","message","poll","state","canCastVote","winningOptionCount","toggleVote","haveVotedForTheOption","id","removeVote","castVote","key","onClick","text","filter","vote","user","slice","map","image","name","count","length"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Poll/PollOptionSelector.js"],"sourcesContent":["import clsx from 'clsx';\nimport debounce from 'lodash.debounce';\nimport React, { useMemo } from 'react';\nimport { isVoteAnswer } from 'stream-chat';\nimport { Avatar } from '../Avatar';\nimport { useChannelStateContext, useMessageContext, usePollContext, useTranslationContext, } from '../../context';\nimport { useStateStore } from '../../store';\nexport const AmountBar = ({ amount, className }) => (React.createElement(\"div\", { className: clsx('str-chat__amount-bar', className), \"data-testid\": 'amount-bar', role: 'progressbar', style: {\n        '--str-chat__amount-bar-fulfillment': amount + '%',\n    } }));\nexport const Checkmark = ({ checked }) => (React.createElement(\"div\", { className: clsx('str-chat__checkmark', { 'str-chat__checkmark--checked': checked }) }));\nconst pollStateSelector = (nextValue) => ({\n    is_closed: nextValue.is_closed,\n    latest_votes_by_option: nextValue.latest_votes_by_option,\n    maxVotedOptionIds: nextValue.maxVotedOptionIds,\n    ownVotesByOptionId: nextValue.ownVotesByOptionId,\n    vote_counts_by_option: nextValue.vote_counts_by_option,\n    voting_visibility: nextValue.voting_visibility,\n});\nexport const PollOptionSelector = ({ displayAvatarCount, option, voteCountVerbose, }) => {\n    const { t } = useTranslationContext();\n    const { channelCapabilities = {} } = useChannelStateContext('PollOptionsShortlist');\n    const { message } = useMessageContext();\n    const { poll } = usePollContext();\n    const { is_closed, latest_votes_by_option, maxVotedOptionIds, ownVotesByOptionId, vote_counts_by_option, voting_visibility, } = useStateStore(poll.state, pollStateSelector);\n    const canCastVote = channelCapabilities['cast-poll-vote'] && !is_closed;\n    const winningOptionCount = maxVotedOptionIds[0]\n        ? vote_counts_by_option[maxVotedOptionIds[0]]\n        : 0;\n    const toggleVote = useMemo(() => debounce(() => {\n        if (!canCastVote)\n            return;\n        const haveVotedForTheOption = !!ownVotesByOptionId[option.id];\n        return haveVotedForTheOption\n            ? poll.removeVote(ownVotesByOptionId[option.id].id, message.id)\n            : poll.castVote(option.id, message.id);\n    }, 100), [canCastVote, message.id, option.id, ownVotesByOptionId, poll]);\n    return (React.createElement(\"div\", { className: clsx('str-chat__poll-option', {\n            'str-chat__poll-option--votable': canCastVote,\n        }), key: `base-poll-option-${option.id}`, onClick: toggleVote },\n        canCastVote && React.createElement(Checkmark, { checked: !!ownVotesByOptionId[option.id] }),\n        React.createElement(\"div\", { className: 'str-chat__poll-option-data' },\n            React.createElement(\"p\", { className: 'str-chat__poll-option-text' }, option.text),\n            displayAvatarCount && voting_visibility === 'public' && (React.createElement(\"div\", { className: 'str-chat__poll-option-voters' }, latest_votes_by_option?.[option.id] &&\n                latest_votes_by_option[option.id]\n                    .filter((vote) => !!vote.user && !isVoteAnswer(vote))\n                    .slice(0, displayAvatarCount)\n                    .map(({ user }) => (React.createElement(Avatar, { image: user?.image, key: `poll-option-${option.id}-avatar-${user?.id}`, name: user?.name }))))),\n            React.createElement(\"div\", { className: 'str-chat__poll-option-vote-count' }, voteCountVerbose\n                ? t('{{count}} votes', {\n                    count: vote_counts_by_option[option.id] ?? 0,\n                })\n                : (vote_counts_by_option[option.id] ?? 0))),\n        React.createElement(AmountBar, { amount: (winningOptionCount &&\n                (vote_counts_by_option[option.id] ?? 0) / winningOptionCount) * 100, className: clsx('str-chat__poll-option__votes-bar', {\n                'str-chat__poll-option__votes-bar--winner': is_closed &&\n                    maxVotedOptionIds.length === 1 &&\n                    maxVotedOptionIds[0] === option.id,\n            }) })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}