{"ast":null,"code":"import deepequal from 'react-fast-compare';\nimport emojiRegex from 'emoji-regex';\n/**\n * Following function validates a function which returns notification message.\n * It validates if the first parameter is function and also if return value of function is string or no.\n */\nexport const validateAndGetMessage = (func, args) => {\n  if (!func || typeof func !== 'function') return null;\n  // below is due to tests passing a single argument\n  // rather than an array.\n  if (!Array.isArray(args)) {\n    args = [args];\n  }\n  const returnValue = func(...args);\n  if (typeof returnValue !== 'string') return null;\n  return returnValue;\n};\n/**\n * Tell if the owner of the current message is muted\n */\nexport const isUserMuted = (message, mutes) => {\n  if (!mutes || !message) return false;\n  const userMuted = mutes.filter(el => el.target.id === message.user?.id);\n  return !!userMuted.length;\n};\nexport const MESSAGE_ACTIONS = {\n  delete: 'delete',\n  edit: 'edit',\n  flag: 'flag',\n  markUnread: 'markUnread',\n  mute: 'mute',\n  pin: 'pin',\n  quote: 'quote',\n  react: 'react',\n  remindMe: 'remindMe',\n  reply: 'reply',\n  saveForLater: 'saveForLater'\n};\n// @deprecated in favor of `channelCapabilities` - TODO: remove in next major release\nexport const defaultPinPermissions = {\n  commerce: {\n    admin: true,\n    anonymous: false,\n    channel_member: false,\n    channel_moderator: true,\n    guest: false,\n    member: false,\n    moderator: true,\n    owner: true,\n    user: false\n  },\n  gaming: {\n    admin: true,\n    anonymous: false,\n    channel_member: false,\n    channel_moderator: true,\n    guest: false,\n    member: false,\n    moderator: true,\n    owner: false,\n    user: false\n  },\n  livestream: {\n    admin: true,\n    anonymous: false,\n    channel_member: false,\n    channel_moderator: true,\n    guest: false,\n    member: false,\n    moderator: true,\n    owner: true,\n    user: false\n  },\n  messaging: {\n    admin: true,\n    anonymous: false,\n    channel_member: true,\n    channel_moderator: true,\n    guest: false,\n    member: true,\n    moderator: true,\n    owner: true,\n    user: false\n  },\n  team: {\n    admin: true,\n    anonymous: false,\n    channel_member: true,\n    channel_moderator: true,\n    guest: false,\n    member: true,\n    moderator: true,\n    owner: true,\n    user: false\n  }\n};\nexport const getMessageActions = (actions, {\n  canDelete,\n  canEdit,\n  canFlag,\n  canMarkUnread,\n  canMute,\n  canPin,\n  canQuote,\n  canReact,\n  canReply\n}, channelConfig) => {\n  const messageActionsAfterPermission = [];\n  let messageActions = [];\n  if (actions && typeof actions === 'boolean') {\n    // If value of actions is true, then populate all the possible values\n    messageActions = Object.keys(MESSAGE_ACTIONS);\n  } else if (actions && actions.length > 0) {\n    messageActions = [...actions];\n  } else {\n    return [];\n  }\n  if (canDelete && messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.delete);\n  }\n  if (canEdit && messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.edit);\n  }\n  if (canFlag && messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.flag);\n  }\n  if (canMarkUnread && messageActions.indexOf(MESSAGE_ACTIONS.markUnread) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.markUnread);\n  }\n  if (canMute && messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.mute);\n  }\n  if (canPin && messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.pin);\n  }\n  if (canQuote && messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.quote);\n  }\n  if (canReact && messageActions.indexOf(MESSAGE_ACTIONS.react) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.react);\n  }\n  if (channelConfig?.['user_message_reminders'] && messageActions.indexOf(MESSAGE_ACTIONS.remindMe)) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.remindMe);\n  }\n  if (canReply && messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.reply);\n  }\n  if (channelConfig?.['user_message_reminders'] && messageActions.indexOf(MESSAGE_ACTIONS.saveForLater)) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.saveForLater);\n  }\n  return messageActionsAfterPermission;\n};\nexport const ACTIONS_NOT_WORKING_IN_THREAD = [MESSAGE_ACTIONS.pin, MESSAGE_ACTIONS.reply, MESSAGE_ACTIONS.markUnread];\n/**\n * @deprecated use `shouldRenderMessageActions` instead\n */\nexport const showMessageActionsBox = (actions, inThread) => shouldRenderMessageActions({\n  inThread,\n  messageActions: actions\n});\nexport const shouldRenderMessageActions = ({\n  customMessageActions,\n  CustomMessageActionsList,\n  inThread,\n  messageActions\n}) => {\n  if (typeof CustomMessageActionsList !== 'undefined' || typeof customMessageActions !== 'undefined') return true;\n  if (!messageActions.length) return false;\n  if (inThread && messageActions.filter(action => !ACTIONS_NOT_WORKING_IN_THREAD.includes(action)).length === 0) {\n    return false;\n  }\n  if (messageActions.length === 1 && (messageActions.includes(MESSAGE_ACTIONS.react) || messageActions.includes(MESSAGE_ACTIONS.reply))) {\n    return false;\n  }\n  if (messageActions.length === 2 && messageActions.includes(MESSAGE_ACTIONS.react) && messageActions.includes(MESSAGE_ACTIONS.reply)) {\n    return false;\n  }\n  return true;\n};\nfunction areMessagesEqual(prevMessage, nextMessage) {\n  const areBaseMessagesEqual = (prevMessage, nextMessage) => prevMessage.deleted_at === nextMessage.deleted_at && prevMessage.latest_reactions?.length === nextMessage.latest_reactions?.length && prevMessage.own_reactions?.length === nextMessage.own_reactions?.length && prevMessage.pinned === nextMessage.pinned && prevMessage.reply_count === nextMessage.reply_count && prevMessage.status === nextMessage.status && prevMessage.text === nextMessage.text && prevMessage.type === nextMessage.type && prevMessage.updated_at === nextMessage.updated_at && prevMessage.user?.updated_at === nextMessage.user?.updated_at;\n  return areBaseMessagesEqual(prevMessage, nextMessage) && Boolean(prevMessage.quoted_message) === Boolean(nextMessage.quoted_message) && (!prevMessage.quoted_message && !nextMessage.quoted_message || areBaseMessagesEqual(prevMessage.quoted_message, nextMessage.quoted_message));\n}\nexport const areMessagePropsEqual = (prevProps, nextProps) => {\n  const {\n    message: prevMessage,\n    Message: prevMessageUI\n  } = prevProps;\n  const {\n    message: nextMessage,\n    Message: nextMessageUI\n  } = nextProps;\n  if (prevMessageUI !== nextMessageUI) return false;\n  if (prevProps.endOfGroup !== nextProps.endOfGroup) return false;\n  if (nextProps.showDetailedReactions !== prevProps.showDetailedReactions) {\n    return false;\n  }\n  if (nextProps.closeReactionSelectorOnClick !== prevProps.closeReactionSelectorOnClick) {\n    return false;\n  }\n  const messagesAreEqual = areMessagesEqual(prevMessage, nextMessage);\n  if (!messagesAreEqual) return false;\n  const deepEqualProps = deepequal(nextProps.messageActions, prevProps.messageActions) && deepequal(nextProps.readBy, prevProps.readBy) && deepequal(nextProps.highlighted, prevProps.highlighted) && deepequal(nextProps.groupStyles, prevProps.groupStyles) &&\n  // last 3 messages can have different group styles\n  deepequal(nextProps.mutes, prevProps.mutes) && deepequal(nextProps.lastReceivedId, prevProps.lastReceivedId);\n  if (!deepEqualProps) return false;\n  return prevProps.messageListRect === nextProps.messageListRect // MessageList wrapper layout changes\n  ;\n};\nexport const areMessageUIPropsEqual = (prevProps, nextProps) => {\n  const {\n    lastReceivedId: prevLastReceivedId,\n    message: prevMessage\n  } = prevProps;\n  const {\n    lastReceivedId: nextLastReceivedId,\n    message: nextMessage\n  } = nextProps;\n  if (prevProps.editing !== nextProps.editing) return false;\n  if (prevProps.highlighted !== nextProps.highlighted) return false;\n  if (prevProps.endOfGroup !== nextProps.endOfGroup) return false;\n  if (prevProps.mutes?.length !== nextProps.mutes?.length) return false;\n  if (prevProps.readBy?.length !== nextProps.readBy?.length) return false;\n  if (prevProps.groupStyles !== nextProps.groupStyles) return false;\n  if (prevProps.showDetailedReactions !== nextProps.showDetailedReactions) {\n    return false;\n  }\n  if ((prevMessage.id === prevLastReceivedId || prevMessage.id === nextLastReceivedId) && prevLastReceivedId !== nextLastReceivedId) {\n    return false;\n  }\n  return areMessagesEqual(prevMessage, nextMessage);\n};\nexport const messageHasReactions = message => Object.values(message?.reaction_groups ?? {}).some(({\n  count\n}) => count > 0);\nexport const messageHasAttachments = message => !!message?.attachments && !!message.attachments.length;\nexport const getImages = message => {\n  if (!message?.attachments) {\n    return [];\n  }\n  return message.attachments.filter(item => item.type === 'image');\n};\nexport const getNonImageAttachments = message => {\n  if (!message?.attachments) {\n    return [];\n  }\n  return message.attachments.filter(item => item.type !== 'image');\n};\n/**\n * Default Tooltip Username mapper implementation.\n *\n * @param user the user.\n */\nexport const mapToUserNameOrId = user => user.name || user.id;\nexport const getReadByTooltipText = (users, t, client, tooltipUserNameMapper) => {\n  let outStr = '';\n  if (!t) {\n    throw new Error('getReadByTooltipText was called, but translation function is not available');\n  }\n  if (!tooltipUserNameMapper) {\n    throw new Error('getReadByTooltipText was called, but tooltipUserNameMapper function is not available');\n  }\n  // first filter out client user, so restLength won't count it\n  const otherUsers = users.filter(item => item && client?.user && item.id !== client.user.id).map(tooltipUserNameMapper);\n  const slicedArr = otherUsers.slice(0, 5);\n  const restLength = otherUsers.length - slicedArr.length;\n  if (slicedArr.length === 1) {\n    outStr = `${slicedArr[0]} `;\n  } else if (slicedArr.length === 2) {\n    // joins all with \"and\" but =no commas\n    // example: \"bob and sam\"\n    outStr = t('{{ firstUser }} and {{ secondUser }}', {\n      firstUser: slicedArr[0],\n      secondUser: slicedArr[1]\n    });\n  } else if (slicedArr.length > 2) {\n    // joins all with commas, but last one gets \", and\" (oxford comma!)\n    // example: \"bob, joe, sam and 4 more\"\n    if (restLength === 0) {\n      // mutate slicedArr to remove last user to display it separately\n      const lastUser = slicedArr.splice(slicedArr.length - 1, 1);\n      outStr = t('{{ commaSeparatedUsers }}, and {{ lastUser }}', {\n        commaSeparatedUsers: slicedArr.join(', '),\n        lastUser\n      });\n    } else {\n      outStr = t('{{ commaSeparatedUsers }} and {{ moreCount }} more', {\n        commaSeparatedUsers: slicedArr.join(', '),\n        moreCount: restLength\n      });\n    }\n  }\n  return outStr;\n};\nexport const isOnlyEmojis = text => {\n  if (!text) return false;\n  const noEmojis = text.replace(emojiRegex(), '');\n  const noSpace = noEmojis.replace(/[\\s\\n]/gm, '');\n  return !noSpace;\n};\nexport const isMessageBounced = message => message.type === 'error' && (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_BOUNCE' || message.moderation?.action === 'bounce');\nexport const isMessageBlocked = message => message.type === 'error' && (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_REMOVE' || message.moderation?.action === 'remove');\nexport const isMessageEdited = message => !!message.message_text_updated_at;","map":{"version":3,"names":["deepequal","emojiRegex","validateAndGetMessage","func","args","Array","isArray","returnValue","isUserMuted","message","mutes","userMuted","filter","el","target","id","user","length","MESSAGE_ACTIONS","delete","edit","flag","markUnread","mute","pin","quote","react","remindMe","reply","saveForLater","defaultPinPermissions","commerce","admin","anonymous","channel_member","channel_moderator","guest","member","moderator","owner","gaming","livestream","messaging","team","getMessageActions","actions","canDelete","canEdit","canFlag","canMarkUnread","canMute","canPin","canQuote","canReact","canReply","channelConfig","messageActionsAfterPermission","messageActions","Object","keys","indexOf","push","ACTIONS_NOT_WORKING_IN_THREAD","showMessageActionsBox","inThread","shouldRenderMessageActions","customMessageActions","CustomMessageActionsList","action","includes","areMessagesEqual","prevMessage","nextMessage","areBaseMessagesEqual","deleted_at","latest_reactions","own_reactions","pinned","reply_count","status","text","type","updated_at","Boolean","quoted_message","areMessagePropsEqual","prevProps","nextProps","Message","prevMessageUI","nextMessageUI","endOfGroup","showDetailedReactions","closeReactionSelectorOnClick","messagesAreEqual","deepEqualProps","readBy","highlighted","groupStyles","lastReceivedId","messageListRect","areMessageUIPropsEqual","prevLastReceivedId","nextLastReceivedId","editing","messageHasReactions","values","reaction_groups","some","count","messageHasAttachments","attachments","getImages","item","getNonImageAttachments","mapToUserNameOrId","name","getReadByTooltipText","users","t","client","tooltipUserNameMapper","outStr","Error","otherUsers","map","slicedArr","slice","restLength","firstUser","secondUser","lastUser","splice","commaSeparatedUsers","join","moreCount","isOnlyEmojis","noEmojis","replace","noSpace","isMessageBounced","moderation_details","moderation","isMessageBlocked","isMessageEdited","message_text_updated_at"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/node_modules/stream-chat-react/dist/components/Message/utils.js"],"sourcesContent":["import deepequal from 'react-fast-compare';\nimport emojiRegex from 'emoji-regex';\n/**\n * Following function validates a function which returns notification message.\n * It validates if the first parameter is function and also if return value of function is string or no.\n */\nexport const validateAndGetMessage = (func, args) => {\n    if (!func || typeof func !== 'function')\n        return null;\n    // below is due to tests passing a single argument\n    // rather than an array.\n    if (!Array.isArray(args)) {\n        args = [args];\n    }\n    const returnValue = func(...args);\n    if (typeof returnValue !== 'string')\n        return null;\n    return returnValue;\n};\n/**\n * Tell if the owner of the current message is muted\n */\nexport const isUserMuted = (message, mutes) => {\n    if (!mutes || !message)\n        return false;\n    const userMuted = mutes.filter((el) => el.target.id === message.user?.id);\n    return !!userMuted.length;\n};\nexport const MESSAGE_ACTIONS = {\n    delete: 'delete',\n    edit: 'edit',\n    flag: 'flag',\n    markUnread: 'markUnread',\n    mute: 'mute',\n    pin: 'pin',\n    quote: 'quote',\n    react: 'react',\n    remindMe: 'remindMe',\n    reply: 'reply',\n    saveForLater: 'saveForLater',\n};\n// @deprecated in favor of `channelCapabilities` - TODO: remove in next major release\nexport const defaultPinPermissions = {\n    commerce: {\n        admin: true,\n        anonymous: false,\n        channel_member: false,\n        channel_moderator: true,\n        guest: false,\n        member: false,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n    gaming: {\n        admin: true,\n        anonymous: false,\n        channel_member: false,\n        channel_moderator: true,\n        guest: false,\n        member: false,\n        moderator: true,\n        owner: false,\n        user: false,\n    },\n    livestream: {\n        admin: true,\n        anonymous: false,\n        channel_member: false,\n        channel_moderator: true,\n        guest: false,\n        member: false,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n    messaging: {\n        admin: true,\n        anonymous: false,\n        channel_member: true,\n        channel_moderator: true,\n        guest: false,\n        member: true,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n    team: {\n        admin: true,\n        anonymous: false,\n        channel_member: true,\n        channel_moderator: true,\n        guest: false,\n        member: true,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n};\nexport const getMessageActions = (actions, { canDelete, canEdit, canFlag, canMarkUnread, canMute, canPin, canQuote, canReact, canReply, }, channelConfig) => {\n    const messageActionsAfterPermission = [];\n    let messageActions = [];\n    if (actions && typeof actions === 'boolean') {\n        // If value of actions is true, then populate all the possible values\n        messageActions = Object.keys(MESSAGE_ACTIONS);\n    }\n    else if (actions && actions.length > 0) {\n        messageActions = [...actions];\n    }\n    else {\n        return [];\n    }\n    if (canDelete && messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.delete);\n    }\n    if (canEdit && messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.edit);\n    }\n    if (canFlag && messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.flag);\n    }\n    if (canMarkUnread && messageActions.indexOf(MESSAGE_ACTIONS.markUnread) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.markUnread);\n    }\n    if (canMute && messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.mute);\n    }\n    if (canPin && messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.pin);\n    }\n    if (canQuote && messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.quote);\n    }\n    if (canReact && messageActions.indexOf(MESSAGE_ACTIONS.react) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.react);\n    }\n    if (channelConfig?.['user_message_reminders'] &&\n        messageActions.indexOf(MESSAGE_ACTIONS.remindMe)) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.remindMe);\n    }\n    if (canReply && messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.reply);\n    }\n    if (channelConfig?.['user_message_reminders'] &&\n        messageActions.indexOf(MESSAGE_ACTIONS.saveForLater)) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.saveForLater);\n    }\n    return messageActionsAfterPermission;\n};\nexport const ACTIONS_NOT_WORKING_IN_THREAD = [\n    MESSAGE_ACTIONS.pin,\n    MESSAGE_ACTIONS.reply,\n    MESSAGE_ACTIONS.markUnread,\n];\n/**\n * @deprecated use `shouldRenderMessageActions` instead\n */\nexport const showMessageActionsBox = (actions, inThread) => shouldRenderMessageActions({ inThread, messageActions: actions });\nexport const shouldRenderMessageActions = ({ customMessageActions, CustomMessageActionsList, inThread, messageActions, }) => {\n    if (typeof CustomMessageActionsList !== 'undefined' ||\n        typeof customMessageActions !== 'undefined')\n        return true;\n    if (!messageActions.length)\n        return false;\n    if (inThread &&\n        messageActions.filter((action) => !ACTIONS_NOT_WORKING_IN_THREAD.includes(action))\n            .length === 0) {\n        return false;\n    }\n    if (messageActions.length === 1 &&\n        (messageActions.includes(MESSAGE_ACTIONS.react) ||\n            messageActions.includes(MESSAGE_ACTIONS.reply))) {\n        return false;\n    }\n    if (messageActions.length === 2 &&\n        messageActions.includes(MESSAGE_ACTIONS.react) &&\n        messageActions.includes(MESSAGE_ACTIONS.reply)) {\n        return false;\n    }\n    return true;\n};\nfunction areMessagesEqual(prevMessage, nextMessage) {\n    const areBaseMessagesEqual = (prevMessage, nextMessage) => prevMessage.deleted_at === nextMessage.deleted_at &&\n        prevMessage.latest_reactions?.length === nextMessage.latest_reactions?.length &&\n        prevMessage.own_reactions?.length === nextMessage.own_reactions?.length &&\n        prevMessage.pinned === nextMessage.pinned &&\n        prevMessage.reply_count === nextMessage.reply_count &&\n        prevMessage.status === nextMessage.status &&\n        prevMessage.text === nextMessage.text &&\n        prevMessage.type === nextMessage.type &&\n        prevMessage.updated_at === nextMessage.updated_at &&\n        prevMessage.user?.updated_at === nextMessage.user?.updated_at;\n    return (areBaseMessagesEqual(prevMessage, nextMessage) &&\n        Boolean(prevMessage.quoted_message) === Boolean(nextMessage.quoted_message) &&\n        ((!prevMessage.quoted_message && !nextMessage.quoted_message) ||\n            areBaseMessagesEqual(prevMessage.quoted_message, nextMessage.quoted_message)));\n}\nexport const areMessagePropsEqual = (prevProps, nextProps) => {\n    const { message: prevMessage, Message: prevMessageUI } = prevProps;\n    const { message: nextMessage, Message: nextMessageUI } = nextProps;\n    if (prevMessageUI !== nextMessageUI)\n        return false;\n    if (prevProps.endOfGroup !== nextProps.endOfGroup)\n        return false;\n    if (nextProps.showDetailedReactions !== prevProps.showDetailedReactions) {\n        return false;\n    }\n    if (nextProps.closeReactionSelectorOnClick !== prevProps.closeReactionSelectorOnClick) {\n        return false;\n    }\n    const messagesAreEqual = areMessagesEqual(prevMessage, nextMessage);\n    if (!messagesAreEqual)\n        return false;\n    const deepEqualProps = deepequal(nextProps.messageActions, prevProps.messageActions) &&\n        deepequal(nextProps.readBy, prevProps.readBy) &&\n        deepequal(nextProps.highlighted, prevProps.highlighted) &&\n        deepequal(nextProps.groupStyles, prevProps.groupStyles) && // last 3 messages can have different group styles\n        deepequal(nextProps.mutes, prevProps.mutes) &&\n        deepequal(nextProps.lastReceivedId, prevProps.lastReceivedId);\n    if (!deepEqualProps)\n        return false;\n    return (prevProps.messageListRect === nextProps.messageListRect // MessageList wrapper layout changes\n    );\n};\nexport const areMessageUIPropsEqual = (prevProps, nextProps) => {\n    const { lastReceivedId: prevLastReceivedId, message: prevMessage } = prevProps;\n    const { lastReceivedId: nextLastReceivedId, message: nextMessage } = nextProps;\n    if (prevProps.editing !== nextProps.editing)\n        return false;\n    if (prevProps.highlighted !== nextProps.highlighted)\n        return false;\n    if (prevProps.endOfGroup !== nextProps.endOfGroup)\n        return false;\n    if (prevProps.mutes?.length !== nextProps.mutes?.length)\n        return false;\n    if (prevProps.readBy?.length !== nextProps.readBy?.length)\n        return false;\n    if (prevProps.groupStyles !== nextProps.groupStyles)\n        return false;\n    if (prevProps.showDetailedReactions !== nextProps.showDetailedReactions) {\n        return false;\n    }\n    if ((prevMessage.id === prevLastReceivedId || prevMessage.id === nextLastReceivedId) &&\n        prevLastReceivedId !== nextLastReceivedId) {\n        return false;\n    }\n    return areMessagesEqual(prevMessage, nextMessage);\n};\nexport const messageHasReactions = (message) => Object.values(message?.reaction_groups ?? {}).some(({ count }) => count > 0);\nexport const messageHasAttachments = (message) => !!message?.attachments && !!message.attachments.length;\nexport const getImages = (message) => {\n    if (!message?.attachments) {\n        return [];\n    }\n    return message.attachments.filter((item) => item.type === 'image');\n};\nexport const getNonImageAttachments = (message) => {\n    if (!message?.attachments) {\n        return [];\n    }\n    return message.attachments.filter((item) => item.type !== 'image');\n};\n/**\n * Default Tooltip Username mapper implementation.\n *\n * @param user the user.\n */\nexport const mapToUserNameOrId = (user) => user.name || user.id;\nexport const getReadByTooltipText = (users, t, client, tooltipUserNameMapper) => {\n    let outStr = '';\n    if (!t) {\n        throw new Error('getReadByTooltipText was called, but translation function is not available');\n    }\n    if (!tooltipUserNameMapper) {\n        throw new Error('getReadByTooltipText was called, but tooltipUserNameMapper function is not available');\n    }\n    // first filter out client user, so restLength won't count it\n    const otherUsers = users\n        .filter((item) => item && client?.user && item.id !== client.user.id)\n        .map(tooltipUserNameMapper);\n    const slicedArr = otherUsers.slice(0, 5);\n    const restLength = otherUsers.length - slicedArr.length;\n    if (slicedArr.length === 1) {\n        outStr = `${slicedArr[0]} `;\n    }\n    else if (slicedArr.length === 2) {\n        // joins all with \"and\" but =no commas\n        // example: \"bob and sam\"\n        outStr = t('{{ firstUser }} and {{ secondUser }}', {\n            firstUser: slicedArr[0],\n            secondUser: slicedArr[1],\n        });\n    }\n    else if (slicedArr.length > 2) {\n        // joins all with commas, but last one gets \", and\" (oxford comma!)\n        // example: \"bob, joe, sam and 4 more\"\n        if (restLength === 0) {\n            // mutate slicedArr to remove last user to display it separately\n            const lastUser = slicedArr.splice(slicedArr.length - 1, 1);\n            outStr = t('{{ commaSeparatedUsers }}, and {{ lastUser }}', {\n                commaSeparatedUsers: slicedArr.join(', '),\n                lastUser,\n            });\n        }\n        else {\n            outStr = t('{{ commaSeparatedUsers }} and {{ moreCount }} more', {\n                commaSeparatedUsers: slicedArr.join(', '),\n                moreCount: restLength,\n            });\n        }\n    }\n    return outStr;\n};\nexport const isOnlyEmojis = (text) => {\n    if (!text)\n        return false;\n    const noEmojis = text.replace(emojiRegex(), '');\n    const noSpace = noEmojis.replace(/[\\s\\n]/gm, '');\n    return !noSpace;\n};\nexport const isMessageBounced = (message) => message.type === 'error' &&\n    (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_BOUNCE' ||\n        message.moderation?.action === 'bounce');\nexport const isMessageBlocked = (message) => message.type === 'error' &&\n    (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_REMOVE' ||\n        message.moderation?.action === 'remove');\nexport const isMessageEdited = (message) => !!message.message_text_updated_at;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}