{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/JoinTicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const {\n    channel\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  const [player, setPlayer] = useState(null);\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    X: 0,\n    O: 0\n  });\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n\n  // Determine player assignment based on join order\n  useEffect(() => {\n    const members = Object.keys(channel.state.members).sort();\n    const myId = client.userID;\n    const isFirst = members.indexOf(myId) === 0;\n    setPlayer(isFirst ? \"X\" : \"O\");\n  }, [channel, client.userID]);\n\n  // Initialize mines once\n  useEffect(() => {\n    if (gameState === GameState.mineCreation) {\n      const newGrid = Mines(mineCount);\n      setMines(newGrid);\n      setGameState(GameState.start);\n    }\n  }, [gameState, mineCount]);\n\n  // Handle a tile click: compute new state and broadcast\n  const handleTileClick = async index => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    if (turn !== player) return;\n    if (tiles[index] !== null) return;\n\n    // Compute new state snapshot\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    const newMineCount = mines[index] === -1 ? mineCount - 1 : mineCount;\n    const newMistakeCounts = {\n      ...mistakeCounts\n    };\n    if (mines[index] === -1) {\n      newMistakeCounts[player] += 1;\n    }\n    const newTurn = turn === \"X\" ? \"O\" : \"X\";\n    const newGameState = newMineCount === 0 ? GameState.gameover : GameState.inProgress;\n\n    // Broadcast the full game state to all clients\n    await channel.sendEvent({\n      type: \"game-move\",\n      data: {\n        tiles: newTiles,\n        mines,\n        mineCount: newMineCount,\n        turn: newTurn,\n        gameState: newGameState,\n        mistakeCounts: newMistakeCounts\n      }\n    });\n  };\n\n  // Listen for game-move events and apply updates\n  useEffect(() => {\n    const handler = event => {\n      if (event.type === \"game-move\") {\n        const {\n          tiles: newTiles,\n          mines: newMines,\n          mineCount: newMineCount,\n          turn: newTurn,\n          gameState: newGameState,\n          mistakeCounts: newMistakeCounts\n        } = event.data;\n        setTiles(newTiles);\n        setMines(newMines);\n        setMineCount(newMineCount);\n        setTurn(newTurn);\n        setGameState(newGameState);\n        setMistakeCounts(newMistakeCounts);\n      }\n    };\n    channel.on(\"event\", handler);\n    return () => channel.off(\"event\", handler);\n  }, [channel]);\n\n  // Check for tie\n  useEffect(() => {\n    if (!tiles.includes(null)) {\n      setGameState(GameState.tie);\n    }\n  }, [tiles]);\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.mineCreation);\n    setStrike(null);\n    setMineCount(5);\n    setMistakeCounts({\n      X: 0,\n      O: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [turn, \"'s Turn | Mistakes - X: \", mistakeCounts.X, \", O: \", mistakeCounts.O]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileClick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"Qt2q1v2q0iPlxR5DaIxX1lwkcsA=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useState","useChannelStateContext","useChatContext","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","channel","client","player","setPlayer","turn","setTurn","mistakeCounts","setMistakeCounts","X","O","tiles","setTiles","Array","fill","mines","setMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","members","Object","keys","state","sort","myId","userID","isFirst","indexOf","newGrid","start","handleTileClick","index","inProgress","newTiles","newMineCount","newMistakeCounts","newTurn","newGameState","gameover","sendEvent","type","data","handler","event","newMines","on","off","includes","tie","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/JoinTicTacToe.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\nfunction TicTacToe() {\n  const { channel } = useChannelStateContext();\n  const { client } = useChatContext();\n\n  const [player, setPlayer] = useState(null);\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({ X: 0, O: 0 });\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n\n  // Determine player assignment based on join order\n  useEffect(() => {\n    const members = Object.keys(channel.state.members).sort();\n    const myId = client.userID;\n    const isFirst = members.indexOf(myId) === 0;\n    setPlayer(isFirst ? \"X\" : \"O\");\n  }, [channel, client.userID]);\n\n  // Initialize mines once\n  useEffect(() => {\n    if (gameState === GameState.mineCreation) {\n      const newGrid = Mines(mineCount);\n      setMines(newGrid);\n      setGameState(GameState.start);\n    }\n  }, [gameState, mineCount]);\n\n  // Handle a tile click: compute new state and broadcast\n  const handleTileClick = async (index) => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    if (turn !== player) return;\n    if (tiles[index] !== null) return;\n\n    // Compute new state snapshot\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    const newMineCount = mines[index] === -1 ? mineCount - 1 : mineCount;\n\n    const newMistakeCounts = { ...mistakeCounts };\n    if (mines[index] === -1) {\n      newMistakeCounts[player] += 1;\n    }\n\n    const newTurn = turn === \"X\" ? \"O\" : \"X\";\n    const newGameState = newMineCount === 0 ? GameState.gameover : GameState.inProgress;\n\n    // Broadcast the full game state to all clients\n    await channel.sendEvent({\n      type: \"game-move\",\n      data: {\n        tiles: newTiles,\n        mines,\n        mineCount: newMineCount,\n        turn: newTurn,\n        gameState: newGameState,\n        mistakeCounts: newMistakeCounts,\n      },\n    });\n  };\n\n  // Listen for game-move events and apply updates\n  useEffect(() => {\n    const handler = (event) => {\n      if (event.type === \"game-move\") {\n        const {\n          tiles: newTiles,\n          mines: newMines,\n          mineCount: newMineCount,\n          turn: newTurn,\n          gameState: newGameState,\n          mistakeCounts: newMistakeCounts,\n        } = event.data;\n        setTiles(newTiles);\n        setMines(newMines);\n        setMineCount(newMineCount);\n        setTurn(newTurn);\n        setGameState(newGameState);\n        setMistakeCounts(newMistakeCounts);\n      }\n    };\n\n    channel.on(\"event\", handler);\n    return () => channel.off(\"event\", handler);\n  }, [channel]);\n\n  // Check for tie\n  useEffect(() => {\n    if (!tiles.includes(null)) {\n      setGameState(GameState.tie);\n    }\n  }, [tiles]);\n\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.mineCreation);\n    setStrike(null);\n    setMineCount(5);\n    setMistakeCounts({ X: 0, O: 0 });\n  };\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4>\n        {turn}'s Turn | Mistakes - X: {mistakeCounts.X}, O: {mistakeCounts.O}\n      </h4>\n      <Board player={player} tiles={tiles} onTileClick={handleTileClick} strike={strike} />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}