{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\nconst UnMemoizedConnectionStatus = () => {\n  const {\n    client\n  } = useChatContext('ConnectionStatus');\n  const {\n    t\n  } = useTranslationContext('ConnectionStatus');\n  const [online, setOnline] = useState(true);\n  useEffect(() => {\n    const connectionChanged = ({\n      online: onlineStatus = false\n    }) => {\n      if (online !== onlineStatus) {\n        setOnline(onlineStatus);\n      }\n    };\n    client.on('connection.changed', connectionChanged);\n    return () => client.off('connection.changed', connectionChanged);\n  }, [client, online]);\n  return React.createElement(CustomNotification, {\n    active: !online,\n    className: 'str-chat__connection-status-notification',\n    type: 'error'\n  }, t('Connection failure, reconnecting now...'));\n};\nexport const ConnectionStatus = React.memo(UnMemoizedConnectionStatus);","map":{"version":3,"names":["React","useEffect","useState","CustomNotification","useChatContext","useTranslationContext","UnMemoizedConnectionStatus","client","t","online","setOnline","connectionChanged","onlineStatus","on","off","createElement","active","className","type","ConnectionStatus","memo"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/node_modules/stream-chat-react/dist/components/MessageList/ConnectionStatus.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CustomNotification } from './CustomNotification';\nimport { useChatContext, useTranslationContext } from '../../context';\nconst UnMemoizedConnectionStatus = () => {\n    const { client } = useChatContext('ConnectionStatus');\n    const { t } = useTranslationContext('ConnectionStatus');\n    const [online, setOnline] = useState(true);\n    useEffect(() => {\n        const connectionChanged = ({ online: onlineStatus = false }) => {\n            if (online !== onlineStatus) {\n                setOnline(onlineStatus);\n            }\n        };\n        client.on('connection.changed', connectionChanged);\n        return () => client.off('connection.changed', connectionChanged);\n    }, [client, online]);\n    return (React.createElement(CustomNotification, { active: !online, className: 'str-chat__connection-status-notification', type: 'error' }, t('Connection failure, reconnecting now...')));\n};\nexport const ConnectionStatus = React.memo(UnMemoizedConnectionStatus);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,eAAe;AACrE,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EACrC,MAAM;IAAEC;EAAO,CAAC,GAAGH,cAAc,CAAC,kBAAkB,CAAC;EACrD,MAAM;IAAEI;EAAE,CAAC,GAAGH,qBAAqB,CAAC,kBAAkB,CAAC;EACvD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACZ,MAAMU,iBAAiB,GAAGA,CAAC;MAAEF,MAAM,EAAEG,YAAY,GAAG;IAAM,CAAC,KAAK;MAC5D,IAAIH,MAAM,KAAKG,YAAY,EAAE;QACzBF,SAAS,CAACE,YAAY,CAAC;MAC3B;IACJ,CAAC;IACDL,MAAM,CAACM,EAAE,CAAC,oBAAoB,EAAEF,iBAAiB,CAAC;IAClD,OAAO,MAAMJ,MAAM,CAACO,GAAG,CAAC,oBAAoB,EAAEH,iBAAiB,CAAC;EACpE,CAAC,EAAE,CAACJ,MAAM,EAAEE,MAAM,CAAC,CAAC;EACpB,OAAQT,KAAK,CAACe,aAAa,CAACZ,kBAAkB,EAAE;IAAEa,MAAM,EAAE,CAACP,MAAM;IAAEQ,SAAS,EAAE,0CAA0C;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAAEV,CAAC,CAAC,yCAAyC,CAAC,CAAC;AAC5L,CAAC;AACD,OAAO,MAAMW,gBAAgB,GAAGnB,KAAK,CAACoB,IAAI,CAACd,0BAA0B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}