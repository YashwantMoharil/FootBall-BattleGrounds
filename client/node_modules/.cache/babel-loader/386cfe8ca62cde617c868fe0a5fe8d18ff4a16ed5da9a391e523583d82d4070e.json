{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport { useComponentContext } from '../../../context';\nimport { ThreadListItemUI as DefaultThreadListItemUI } from './ThreadListItemUI';\nconst ThreadListItemContext = createContext(undefined);\nexport const useThreadListItemContext = () => useContext(ThreadListItemContext);\nexport const ThreadListItem = ({\n  thread,\n  threadListItemUIProps\n}) => {\n  const {\n    ThreadListItemUI = DefaultThreadListItemUI\n  } = useComponentContext();\n  return React.createElement(ThreadListItemContext.Provider, {\n    value: thread\n  }, React.createElement(ThreadListItemUI, {\n    ...threadListItemUIProps\n  }));\n};\n// const App = () => {\n//   const route = useRouter();\n//   return (\n//     <Chat>\n//       {route === '/channels' && (\n//         <Channel>\n//           <MessageList />\n//           <Thread />\n//         </Channel>\n//       )}\n//       {route === '/threads' && (\n//         <Threads>\n//           <ThreadList />\n//           <ThreadProvider>\n//             <Thread />\n//           </ThreadProvider>\n//         </Threads>\n//       )}\n//     </Chat>\n//   );\n// };\n// pre-built layout\n{\n  /*\n  <Chat client={chatClient}>\n  <Views>\n    // has default\n    <ViewSelector onItemPointerDown={} />\n    <View.Chat>\n      <Channel>\n        <MessageList />\n        <MessageInput />\n      </Channel>\n    </View.Chat>\n    <View.Thread> <-- activeThread state\n      <ThreadList /> <-- uses context for click handler\n      <WrappedThread /> <-- ThreadProvider + Channel combo\n    </View.Thread>\n  </Views>\n  </Chat>;\n  */\n}","map":{"version":3,"names":["React","createContext","useContext","useComponentContext","ThreadListItemUI","DefaultThreadListItemUI","ThreadListItemContext","undefined","useThreadListItemContext","ThreadListItem","thread","threadListItemUIProps","createElement","Provider","value"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Threads/ThreadList/ThreadListItem.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { useComponentContext } from '../../../context';\nimport { ThreadListItemUI as DefaultThreadListItemUI } from './ThreadListItemUI';\nconst ThreadListItemContext = createContext(undefined);\nexport const useThreadListItemContext = () => useContext(ThreadListItemContext);\nexport const ThreadListItem = ({ thread, threadListItemUIProps, }) => {\n    const { ThreadListItemUI = DefaultThreadListItemUI } = useComponentContext();\n    return (React.createElement(ThreadListItemContext.Provider, { value: thread },\n        React.createElement(ThreadListItemUI, { ...threadListItemUIProps })));\n};\n// const App = () => {\n//   const route = useRouter();\n//   return (\n//     <Chat>\n//       {route === '/channels' && (\n//         <Channel>\n//           <MessageList />\n//           <Thread />\n//         </Channel>\n//       )}\n//       {route === '/threads' && (\n//         <Threads>\n//           <ThreadList />\n//           <ThreadProvider>\n//             <Thread />\n//           </ThreadProvider>\n//         </Threads>\n//       )}\n//     </Chat>\n//   );\n// };\n// pre-built layout\n{\n    /*\n  <Chat client={chatClient}>\n    <Views>\n      // has default\n      <ViewSelector onItemPointerDown={} />\n      <View.Chat>\n        <Channel>\n          <MessageList />\n          <MessageInput />\n        </Channel>\n      </View.Chat>\n      <View.Thread> <-- activeThread state\n        <ThreadList /> <-- uses context for click handler\n        <WrappedThread /> <-- ThreadProvider + Channel combo\n      </View.Thread>\n    </Views>\n  </Chat>;\n  */\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAASC,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,gBAAgB,IAAIC,uBAAuB,QAAQ,oBAAoB;AAChF,MAAMC,qBAAqB,GAAGL,aAAa,CAACM,SAAS,CAAC;AACtD,OAAO,MAAMC,wBAAwB,GAAGA,CAAA,KAAMN,UAAU,CAACI,qBAAqB,CAAC;AAC/E,OAAO,MAAMG,cAAc,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAuB,CAAC,KAAK;EAClE,MAAM;IAAEP,gBAAgB,GAAGC;EAAwB,CAAC,GAAGF,mBAAmB,CAAC,CAAC;EAC5E,OAAQH,KAAK,CAACY,aAAa,CAACN,qBAAqB,CAACO,QAAQ,EAAE;IAAEC,KAAK,EAAEJ;EAAO,CAAC,EACzEV,KAAK,CAACY,aAAa,CAACR,gBAAgB,EAAE;IAAE,GAAGO;EAAsB,CAAC,CAAC,CAAC;AAC5E,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}