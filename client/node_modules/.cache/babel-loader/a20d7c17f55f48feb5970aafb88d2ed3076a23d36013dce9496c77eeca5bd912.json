{"ast":null,"code":"import { useEffect } from 'react';\nimport uniqBy from 'lodash.uniqby';\nimport { getChannel } from '../../../utils/getChannel';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useNotificationMessageNewListener = (setChannels, customHandler, allowNewMessagesFromUnfilteredChannels = true) => {\n  const {\n    client\n  } = useChatContext('useNotificationMessageNewListener');\n  useEffect(() => {\n    const handleEvent = async event => {\n      if (customHandler && typeof customHandler === 'function') {\n        customHandler(setChannels, event);\n      } else if (allowNewMessagesFromUnfilteredChannels && event.channel?.type) {\n        const channel = await getChannel({\n          client,\n          id: event.channel.id,\n          type: event.channel.type\n        });\n        setChannels(channels => uniqBy([channel, ...channels], 'cid'));\n      }\n    };\n    client.on('notification.message_new', handleEvent);\n    return () => {\n      client.off('notification.message_new', handleEvent);\n    };\n  }, [allowNewMessagesFromUnfilteredChannels, client, customHandler, setChannels]);\n};","map":{"version":3,"names":["useEffect","uniqBy","getChannel","useChatContext","useNotificationMessageNewListener","setChannels","customHandler","allowNewMessagesFromUnfilteredChannels","client","handleEvent","event","channel","type","id","channels","on","off"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useNotificationMessageNewListener.js"],"sourcesContent":["import { useEffect } from 'react';\nimport uniqBy from 'lodash.uniqby';\nimport { getChannel } from '../../../utils/getChannel';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useNotificationMessageNewListener = (setChannels, customHandler, allowNewMessagesFromUnfilteredChannels = true) => {\n    const { client } = useChatContext('useNotificationMessageNewListener');\n    useEffect(() => {\n        const handleEvent = async (event) => {\n            if (customHandler && typeof customHandler === 'function') {\n                customHandler(setChannels, event);\n            }\n            else if (allowNewMessagesFromUnfilteredChannels && event.channel?.type) {\n                const channel = await getChannel({\n                    client,\n                    id: event.channel.id,\n                    type: event.channel.type,\n                });\n                setChannels((channels) => uniqBy([channel, ...channels], 'cid'));\n            }\n        };\n        client.on('notification.message_new', handleEvent);\n        return () => {\n            client.off('notification.message_new', handleEvent);\n        };\n    }, [allowNewMessagesFromUnfilteredChannels, client, customHandler, setChannels]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,MAAMC,iCAAiC,GAAGA,CAACC,WAAW,EAAEC,aAAa,EAAEC,sCAAsC,GAAG,IAAI,KAAK;EAC5H,MAAM;IAAEC;EAAO,CAAC,GAAGL,cAAc,CAAC,mCAAmC,CAAC;EACtEH,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAG,MAAOC,KAAK,IAAK;MACjC,IAAIJ,aAAa,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;QACtDA,aAAa,CAACD,WAAW,EAAEK,KAAK,CAAC;MACrC,CAAC,MACI,IAAIH,sCAAsC,IAAIG,KAAK,CAACC,OAAO,EAAEC,IAAI,EAAE;QACpE,MAAMD,OAAO,GAAG,MAAMT,UAAU,CAAC;UAC7BM,MAAM;UACNK,EAAE,EAAEH,KAAK,CAACC,OAAO,CAACE,EAAE;UACpBD,IAAI,EAAEF,KAAK,CAACC,OAAO,CAACC;QACxB,CAAC,CAAC;QACFP,WAAW,CAAES,QAAQ,IAAKb,MAAM,CAAC,CAACU,OAAO,EAAE,GAAGG,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;MACpE;IACJ,CAAC;IACDN,MAAM,CAACO,EAAE,CAAC,0BAA0B,EAAEN,WAAW,CAAC;IAClD,OAAO,MAAM;MACTD,MAAM,CAACQ,GAAG,CAAC,0BAA0B,EAAEP,WAAW,CAAC;IACvD,CAAC;EACL,CAAC,EAAE,CAACF,sCAAsC,EAAEC,MAAM,EAAEF,aAAa,EAAED,WAAW,CAAC,CAAC;AACpF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}