{"ast":null,"code":"import React from 'react';\nimport { FileSizeIndicator, PlaybackRateButton, PlayButton, WaveProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nimport { displayDuration } from './utils';\nimport { FileIcon } from '../ReactFileUtilities';\nimport { useTranslationContext } from '../../context';\nconst rootClassName = 'str-chat__message-attachment__voice-recording-widget';\nexport const VoiceRecordingPlayer = ({\n  attachment,\n  playbackRates\n}) => {\n  const {\n    t\n  } = useTranslationContext('VoiceRecordingPlayer');\n  const {\n    asset_url,\n    duration = 0,\n    mime_type,\n    title = t('Voice message'),\n    waveform_data\n  } = attachment;\n  const {\n    audioRef,\n    increasePlaybackRate,\n    isPlaying,\n    playbackRate,\n    progress,\n    secondsElapsed,\n    seek,\n    togglePlay\n  } = useAudioController({\n    durationSeconds: duration ?? 0,\n    mimeType: mime_type,\n    playbackRates\n  });\n  if (!asset_url) return null;\n  const displayedDuration = secondsElapsed || duration;\n  return React.createElement(\"div\", {\n    className: rootClassName,\n    \"data-testid\": 'voice-recording-widget'\n  }, React.createElement(\"audio\", {\n    ref: audioRef\n  }, React.createElement(\"source\", {\n    \"data-testid\": 'audio-source',\n    src: asset_url,\n    type: mime_type\n  })), React.createElement(PlayButton, {\n    isPlaying: isPlaying,\n    onClick: togglePlay\n  }), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__metadata'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__title',\n    \"data-testid\": 'voice-recording-title',\n    title: title\n  }, title), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__audio-state'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__timer'\n  }, attachment.duration ? displayDuration(displayedDuration) : React.createElement(FileSizeIndicator, {\n    fileSize: attachment.file_size,\n    maximumFractionDigits: 0\n  })), React.createElement(WaveProgressBar, {\n    progress: progress,\n    seek: seek,\n    waveformData: waveform_data || []\n  }))), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__right-section'\n  }, isPlaying ? React.createElement(PlaybackRateButton, {\n    disabled: !audioRef.current,\n    onClick: increasePlaybackRate\n  }, playbackRate.toFixed(1), \"x\") : React.createElement(FileIcon, {\n    big: true,\n    mimeType: mime_type,\n    size: 40\n  })));\n};\nexport const QuotedVoiceRecording = ({\n  attachment\n}) => {\n  const {\n    t\n  } = useTranslationContext();\n  const title = attachment.title || t('Voice message');\n  return React.createElement(\"div\", {\n    className: rootClassName,\n    \"data-testid\": 'quoted-voice-recording-widget'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__metadata'\n  }, title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__title',\n    \"data-testid\": 'voice-recording-title',\n    title: title\n  }, title), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__audio-state'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment__voice-recording-widget__timer'\n  }, attachment.duration ? displayDuration(attachment.duration) : React.createElement(FileSizeIndicator, {\n    fileSize: attachment.file_size,\n    maximumFractionDigits: 0\n  })))), React.createElement(FileIcon, {\n    big: true,\n    mimeType: attachment.mime_type,\n    size: 34\n  }));\n};\nexport const VoiceRecording = ({\n  attachment,\n  isQuoted\n}) => isQuoted ? React.createElement(QuotedVoiceRecording, {\n  attachment: attachment\n}) : React.createElement(VoiceRecordingPlayer, {\n  attachment: attachment\n});","map":{"version":3,"names":["React","FileSizeIndicator","PlaybackRateButton","PlayButton","WaveProgressBar","useAudioController","displayDuration","FileIcon","useTranslationContext","rootClassName","VoiceRecordingPlayer","attachment","playbackRates","t","asset_url","duration","mime_type","title","waveform_data","audioRef","increasePlaybackRate","isPlaying","playbackRate","progress","secondsElapsed","seek","togglePlay","durationSeconds","mimeType","displayedDuration","createElement","className","ref","src","type","onClick","fileSize","file_size","maximumFractionDigits","waveformData","disabled","current","toFixed","big","size","QuotedVoiceRecording","VoiceRecording","isQuoted"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Attachment/VoiceRecording.js"],"sourcesContent":["import React from 'react';\nimport { FileSizeIndicator, PlaybackRateButton, PlayButton, WaveProgressBar, } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nimport { displayDuration } from './utils';\nimport { FileIcon } from '../ReactFileUtilities';\nimport { useTranslationContext } from '../../context';\nconst rootClassName = 'str-chat__message-attachment__voice-recording-widget';\nexport const VoiceRecordingPlayer = ({ attachment, playbackRates, }) => {\n    const { t } = useTranslationContext('VoiceRecordingPlayer');\n    const { asset_url, duration = 0, mime_type, title = t('Voice message'), waveform_data, } = attachment;\n    const { audioRef, increasePlaybackRate, isPlaying, playbackRate, progress, secondsElapsed, seek, togglePlay, } = useAudioController({\n        durationSeconds: duration ?? 0,\n        mimeType: mime_type,\n        playbackRates,\n    });\n    if (!asset_url)\n        return null;\n    const displayedDuration = secondsElapsed || duration;\n    return (React.createElement(\"div\", { className: rootClassName, \"data-testid\": 'voice-recording-widget' },\n        React.createElement(\"audio\", { ref: audioRef },\n            React.createElement(\"source\", { \"data-testid\": 'audio-source', src: asset_url, type: mime_type })),\n        React.createElement(PlayButton, { isPlaying: isPlaying, onClick: togglePlay }),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__metadata' },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__title', \"data-testid\": 'voice-recording-title', title: title }, title),\n            React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__audio-state' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__timer' }, attachment.duration ? (displayDuration(displayedDuration)) : (React.createElement(FileSizeIndicator, { fileSize: attachment.file_size, maximumFractionDigits: 0 }))),\n                React.createElement(WaveProgressBar, { progress: progress, seek: seek, waveformData: waveform_data || [] }))),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__right-section' }, isPlaying ? (React.createElement(PlaybackRateButton, { disabled: !audioRef.current, onClick: increasePlaybackRate },\n            playbackRate.toFixed(1),\n            \"x\")) : (React.createElement(FileIcon, { big: true, mimeType: mime_type, size: 40 })))));\n};\nexport const QuotedVoiceRecording = ({ attachment }) => {\n    const { t } = useTranslationContext();\n    const title = attachment.title || t('Voice message');\n    return (React.createElement(\"div\", { className: rootClassName, \"data-testid\": 'quoted-voice-recording-widget' },\n        React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__metadata' },\n            title && (React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__title', \"data-testid\": 'voice-recording-title', title: title }, title)),\n            React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__audio-state' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment__voice-recording-widget__timer' }, attachment.duration ? (displayDuration(attachment.duration)) : (React.createElement(FileSizeIndicator, { fileSize: attachment.file_size, maximumFractionDigits: 0 }))))),\n        React.createElement(FileIcon, { big: true, mimeType: attachment.mime_type, size: 34 })));\n};\nexport const VoiceRecording = ({ attachment, isQuoted }) => isQuoted ? (React.createElement(QuotedVoiceRecording, { attachment: attachment })) : (React.createElement(VoiceRecordingPlayer, { attachment: attachment }));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}