{"ast":null,"code":"function Mines(numMines) {\n  console.log(\"filling mines\");\n  let minesPlaced = 0;\n  let numRows = 8;\n  let numCols = 8;\n  let mine = numMines;\n  const grid = Array(numRows * numCols).fill(0); // 0 means no mine, grid size is 64\n  while (minesPlaced < mine) {\n    const randomIndex = Math.floor(Math.random() * (numRows * numCols)); // Random index in 1D array\n    if (grid[randomIndex] !== -1) {\n      if (randomIndex + 8 < 64 && grid[randomIndex + 8] === -1) continue; // Increment below\n      if (randomIndex - 8 >= 0 && grid[randomIndex - 8] === -1) continue; // Increment above\n      if (randomIndex + 1 < 64 && grid[randomIndex + 1] === -1) continue; // Increment below\n      if (randomIndex - 1 >= 0 && grid[randomIndex - 1] === -1) continue; // Increment above\n      //if (randomIndex + 9 < 64 && grid[randomIndex + 9] === -1) continue; // Increment below\n      //if (randomIndex - 9 >= 0 && grid[randomIndex - 9] === -1) continue; // Increment above\n      //if (randomIndex + 7 < 64 && grid[randomIndex + 7] === -1) continue; // Increment below\n      //if (randomIndex - 7 >= 0 && grid[randomIndex - 7] === -1) continue; // Increment above\n      grid[randomIndex] = -1; // Mark as a mine\n      minesPlaced++;\n    }\n  }\n  for (let i = 0; i < numRows * numCols; i++) {\n    if (grid[i] === -1) continue;\n    if (i + 8 < 64 && grid[i + 8] === -1) grid[i]++; // Increment below\n    if (i - 8 >= 0 && grid[i - 8] === -1) grid[i]++; // Increment above\n    if (i + 1 < 64 && grid[i + 1] === -1) grid[i]++; // Increment below\n    if (i - 1 >= 0 && grid[i - 1] === -1) grid[i]++; // Increment above\n    if (i + 9 < 64 && grid[i + 9] === -1) grid[i]++; // Increment below\n    if (i - 9 >= 0 && grid[i - 9] === -1) grid[i]++; // Increment above\n    if (i + 7 < 64 && grid[i + 7] === -1) grid[i]++; // Increment below\n    if (i - 7 >= 0 && grid[i - 7] === -1) grid[i]++; // Increment above\n  }\n  return grid;\n}\n_c = Mines;\nexport default Mines;\nvar _c;\n$RefreshReg$(_c, \"Mines\");","map":{"version":3,"names":["Mines","numMines","console","log","minesPlaced","numRows","numCols","mine","grid","Array","fill","randomIndex","Math","floor","random","i","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/Mines.js"],"sourcesContent":["function Mines (numMines) {\n  console.log(\"filling mines\");\n  let minesPlaced = 0;\n  let numRows = 8;\n  let numCols = 8;\n  let mine = numMines;\n\n  const grid = Array(numRows * numCols).fill(0); // 0 means no mine, grid size is 64\n  while (minesPlaced < mine) {\n    const randomIndex = Math.floor(Math.random() * (numRows * numCols)); // Random index in 1D array\n    if (grid[randomIndex] !== -1) {\n      if (randomIndex + 8 < 64 && grid[randomIndex + 8] === -1) continue; // Increment below\n      if (randomIndex - 8 >= 0 && grid[randomIndex - 8] === -1) continue; // Increment above\n      if (randomIndex + 1 < 64 && grid[randomIndex + 1] === -1) continue; // Increment below\n      if (randomIndex - 1 >= 0 && grid[randomIndex - 1] === -1) continue; // Increment above\n      //if (randomIndex + 9 < 64 && grid[randomIndex + 9] === -1) continue; // Increment below\n      //if (randomIndex - 9 >= 0 && grid[randomIndex - 9] === -1) continue; // Increment above\n      //if (randomIndex + 7 < 64 && grid[randomIndex + 7] === -1) continue; // Increment below\n      //if (randomIndex - 7 >= 0 && grid[randomIndex - 7] === -1) continue; // Increment above\n      grid[randomIndex] = -1; // Mark as a mine\n      minesPlaced++;\n    }\n  }\n\n  for (let i = 0; i < numRows * numCols; i++) {\n    if (grid[i] === -1) continue;\n    if (i + 8 < 64 && grid[i + 8] === -1) grid[i]++; // Increment below\n    if (i - 8 >= 0 && grid[i - 8] === -1) grid[i]++; // Increment above\n    if (i + 1 < 64 && grid[i + 1] === -1) grid[i]++; // Increment below\n    if (i - 1 >= 0 && grid[i - 1] === -1) grid[i]++; // Increment above\n    if (i + 9 < 64 && grid[i + 9] === -1) grid[i]++; // Increment below\n    if (i - 9 >= 0 && grid[i - 9] === -1) grid[i]++; // Increment above\n    if (i + 7 < 64 && grid[i + 7] === -1) grid[i]++; // Increment below\n    if (i - 7 >= 0 && grid[i - 7] === -1) grid[i]++; // Increment above\n  }\n  return grid;\n}\n  export default Mines;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}