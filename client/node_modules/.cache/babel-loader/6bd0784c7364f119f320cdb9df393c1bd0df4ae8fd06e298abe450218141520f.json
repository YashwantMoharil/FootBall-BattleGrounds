{"ast":null,"code":"import { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nexport const handleActionWarning = `Action handler was called, but it is missing one of its required arguments. \nMake sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.`;\nexport function useActionHandler(message) {\n  const {\n    removeMessage,\n    updateMessage\n  } = useChannelActionContext('useActionHandler');\n  const {\n    channel\n  } = useChannelStateContext('useActionHandler');\n  return async (dataOrName, value, event) => {\n    if (event) event.preventDefault();\n    if (!message || !updateMessage || !removeMessage || !channel) {\n      console.warn(handleActionWarning);\n      return;\n    }\n    const messageID = message.id;\n    let formData = {};\n    // deprecated: value&name should be removed in favor of data obj\n    if (typeof dataOrName === 'string') {\n      formData[dataOrName] = value;\n    } else {\n      formData = {\n        ...dataOrName\n      };\n    }\n    if (messageID) {\n      const data = await channel.sendAction(messageID, formData);\n      if (data?.message) {\n        updateMessage(data.message);\n      } else {\n        removeMessage(message);\n      }\n    }\n  };\n}","map":{"version":3,"names":["useChannelActionContext","useChannelStateContext","handleActionWarning","useActionHandler","message","removeMessage","updateMessage","channel","dataOrName","value","event","preventDefault","console","warn","messageID","id","formData","data","sendAction"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Message/hooks/useActionHandler.js"],"sourcesContent":["import { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nexport const handleActionWarning = `Action handler was called, but it is missing one of its required arguments. \nMake sure the ChannelAction and ChannelState contexts are properly set and the hook is initialized with a valid message.`;\nexport function useActionHandler(message) {\n    const { removeMessage, updateMessage } = useChannelActionContext('useActionHandler');\n    const { channel } = useChannelStateContext('useActionHandler');\n    return async (dataOrName, value, event) => {\n        if (event)\n            event.preventDefault();\n        if (!message || !updateMessage || !removeMessage || !channel) {\n            console.warn(handleActionWarning);\n            return;\n        }\n        const messageID = message.id;\n        let formData = {};\n        // deprecated: value&name should be removed in favor of data obj\n        if (typeof dataOrName === 'string') {\n            formData[dataOrName] = value;\n        }\n        else {\n            formData = { ...dataOrName };\n        }\n        if (messageID) {\n            const data = await channel.sendAction(messageID, formData);\n            if (data?.message) {\n                updateMessage(data.message);\n            }\n            else {\n                removeMessage(message);\n            }\n        }\n    };\n}\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,uCAAuC;AAC/E,SAASC,sBAAsB,QAAQ,sCAAsC;AAC7E,OAAO,MAAMC,mBAAmB,GAAG;AACnC,yHAAyH;AACzH,OAAO,SAASC,gBAAgBA,CAACC,OAAO,EAAE;EACtC,MAAM;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGN,uBAAuB,CAAC,kBAAkB,CAAC;EACpF,MAAM;IAAEO;EAAQ,CAAC,GAAGN,sBAAsB,CAAC,kBAAkB,CAAC;EAC9D,OAAO,OAAOO,UAAU,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACvC,IAAIA,KAAK,EACLA,KAAK,CAACC,cAAc,CAAC,CAAC;IAC1B,IAAI,CAACP,OAAO,IAAI,CAACE,aAAa,IAAI,CAACD,aAAa,IAAI,CAACE,OAAO,EAAE;MAC1DK,OAAO,CAACC,IAAI,CAACX,mBAAmB,CAAC;MACjC;IACJ;IACA,MAAMY,SAAS,GAAGV,OAAO,CAACW,EAAE;IAC5B,IAAIC,QAAQ,GAAG,CAAC,CAAC;IACjB;IACA,IAAI,OAAOR,UAAU,KAAK,QAAQ,EAAE;MAChCQ,QAAQ,CAACR,UAAU,CAAC,GAAGC,KAAK;IAChC,CAAC,MACI;MACDO,QAAQ,GAAG;QAAE,GAAGR;MAAW,CAAC;IAChC;IACA,IAAIM,SAAS,EAAE;MACX,MAAMG,IAAI,GAAG,MAAMV,OAAO,CAACW,UAAU,CAACJ,SAAS,EAAEE,QAAQ,CAAC;MAC1D,IAAIC,IAAI,EAAEb,OAAO,EAAE;QACfE,aAAa,CAACW,IAAI,CAACb,OAAO,CAAC;MAC/B,CAAC,MACI;QACDC,aAAa,CAACD,OAAO,CAAC;MAC1B;IACJ;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}