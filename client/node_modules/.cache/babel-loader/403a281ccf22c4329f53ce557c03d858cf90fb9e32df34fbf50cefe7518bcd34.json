{"ast":null,"code":"import { validateAndGetMessage } from '../utils';\nimport { useChannelStateContext, useTranslationContext } from '../../../context';\nexport const useMarkUnreadHandler = (message, notifications = {}) => {\n  const {\n    getErrorNotification,\n    getSuccessNotification,\n    notify\n  } = notifications;\n  const {\n    channel\n  } = useChannelStateContext('useMarkUnreadHandler');\n  const {\n    t\n  } = useTranslationContext('useMarkUnreadHandler');\n  return async event => {\n    event.preventDefault();\n    if (!message?.id) {\n      console.warn('Mark unread handler does not have access to message id');\n      return;\n    }\n    try {\n      await channel.markUnread({\n        message_id: message.id\n      });\n      if (!notify) return;\n      const successMessage = getSuccessNotification && validateAndGetMessage(getSuccessNotification, [message]);\n      if (successMessage) notify(successMessage, 'success');\n    } catch (e) {\n      if (!notify) return;\n      const errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);\n      if (getErrorNotification && !errorMessage) return;\n      notify(errorMessage || t('Error marking message unread. Cannot mark unread messages older than the newest 100 channel messages.'), 'error');\n    }\n  };\n};","map":{"version":3,"names":["validateAndGetMessage","useChannelStateContext","useTranslationContext","useMarkUnreadHandler","message","notifications","getErrorNotification","getSuccessNotification","notify","channel","t","event","preventDefault","id","console","warn","markUnread","message_id","successMessage","e","errorMessage"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Message/hooks/useMarkUnreadHandler.js"],"sourcesContent":["import { validateAndGetMessage } from '../utils';\nimport { useChannelStateContext, useTranslationContext } from '../../../context';\nexport const useMarkUnreadHandler = (message, notifications = {}) => {\n    const { getErrorNotification, getSuccessNotification, notify } = notifications;\n    const { channel } = useChannelStateContext('useMarkUnreadHandler');\n    const { t } = useTranslationContext('useMarkUnreadHandler');\n    return async (event) => {\n        event.preventDefault();\n        if (!message?.id) {\n            console.warn('Mark unread handler does not have access to message id');\n            return;\n        }\n        try {\n            await channel.markUnread({ message_id: message.id });\n            if (!notify)\n                return;\n            const successMessage = getSuccessNotification &&\n                validateAndGetMessage(getSuccessNotification, [message]);\n            if (successMessage)\n                notify(successMessage, 'success');\n        }\n        catch (e) {\n            if (!notify)\n                return;\n            const errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);\n            if (getErrorNotification && !errorMessage)\n                return;\n            notify(errorMessage ||\n                t('Error marking message unread. Cannot mark unread messages older than the newest 100 channel messages.'), 'error');\n        }\n    };\n};\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,UAAU;AAChD,SAASC,sBAAsB,EAAEC,qBAAqB,QAAQ,kBAAkB;AAChF,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,OAAO,EAAEC,aAAa,GAAG,CAAC,CAAC,KAAK;EACjE,MAAM;IAAEC,oBAAoB;IAAEC,sBAAsB;IAAEC;EAAO,CAAC,GAAGH,aAAa;EAC9E,MAAM;IAAEI;EAAQ,CAAC,GAAGR,sBAAsB,CAAC,sBAAsB,CAAC;EAClE,MAAM;IAAES;EAAE,CAAC,GAAGR,qBAAqB,CAAC,sBAAsB,CAAC;EAC3D,OAAO,MAAOS,KAAK,IAAK;IACpBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAACR,OAAO,EAAES,EAAE,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;MACtE;IACJ;IACA,IAAI;MACA,MAAMN,OAAO,CAACO,UAAU,CAAC;QAAEC,UAAU,EAAEb,OAAO,CAACS;MAAG,CAAC,CAAC;MACpD,IAAI,CAACL,MAAM,EACP;MACJ,MAAMU,cAAc,GAAGX,sBAAsB,IACzCP,qBAAqB,CAACO,sBAAsB,EAAE,CAACH,OAAO,CAAC,CAAC;MAC5D,IAAIc,cAAc,EACdV,MAAM,CAACU,cAAc,EAAE,SAAS,CAAC;IACzC,CAAC,CACD,OAAOC,CAAC,EAAE;MACN,IAAI,CAACX,MAAM,EACP;MACJ,MAAMY,YAAY,GAAGd,oBAAoB,IAAIN,qBAAqB,CAACM,oBAAoB,EAAE,CAACF,OAAO,CAAC,CAAC;MACnG,IAAIE,oBAAoB,IAAI,CAACc,YAAY,EACrC;MACJZ,MAAM,CAACY,YAAY,IACfV,CAAC,CAAC,uGAAuG,CAAC,EAAE,OAAO,CAAC;IAC5H;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}