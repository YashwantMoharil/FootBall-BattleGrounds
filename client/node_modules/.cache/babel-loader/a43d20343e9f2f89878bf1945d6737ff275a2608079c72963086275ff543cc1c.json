{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [player, setPlayer] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    X: 0,\n    O: 0\n  });\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n  const handleTileclick = index => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setMistakeCounts(prev => ({\n      ...prev,\n      [player]: prev[player] + 1\n    }));\n    setPlayer(player === 'X' ? 'O' : 'X');\n  };\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setPlayer(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [player, \" plays with \", mistakeCounts, \" tiles broken\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileclick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"pPNLGTXEabjoPzPUbCsyksK3CMc=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useState","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","player","setPlayer","mistakeCounts","setMistakeCounts","X","O","tiles","setTiles","Array","fill","mines","setMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","fillMines","newGrid","start","handleTileclick","index","inProgress","newTiles","newMineCount","gameover","prev","handleReset","checkWinner","isBoardFull","includes","tie","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\n\nfunction TicTacToe() {\n  const [player, setPlayer] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    X: 0,\n    O: 0\n  });\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n\n  const handleTileclick = (index) => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress)\n      return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setMistakeCounts(prev => ({\n      ...prev,\n      [player]: prev[player] + 1\n    }));\n    setPlayer(player === 'X' ? 'O' : 'X');\n  };\n\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setPlayer(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4>{player} plays with {mistakeCounts} tiles broken</h4>\n      <Board\n        player={player}\n        tiles={tiles}\n        onTileClick={handleTileclick}\n        strike={strike}\n      />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}