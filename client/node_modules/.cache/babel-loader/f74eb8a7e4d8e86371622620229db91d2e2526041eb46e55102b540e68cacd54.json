{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  const {\n    channel\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  const cookies = new Cookies();\n  const [minesBlasted, setMinesBlasted] = useState(() => new Map());\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n  const handleTileclick = async index => {\n    console.log(minesBlasted[client.userID]);\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null || player !== turn) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      minesBlasted[client.userID] = minesBlasted[client.userID] === NaN ? 1 : minesBlasted[client.userID] + 1;\n      setMinesBlasted(minesBlasted);\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n    console.log(channel);\n    await channel.sendEvent({\n      type: \"game move\",\n      data: {\n        mines,\n        newTiles,\n        turn: turn === 'X' ? 'O' : 'X'\n      }\n    });\n  };\n  channel.on(event => {\n    if (event.type === \"game move\" && event.user.id !== client.userID) {\n      setMines(event.data.mines);\n      setTiles(event.data.newTiles);\n      setPlayer(event.data.turn);\n      setTurn(event.data.turn);\n    }\n  });\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", player === turn ? client.user.name : \"Opponent\", \" plays with \", minesBlasted[client.userID], \" tiles broken\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileclick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"PRoH5ycYl9hQvTt0iwGzvwkaoaI=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useChannelStateContext","useChatContext","useState","Cookies","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","player","setPlayer","turn","setTurn","channel","client","tiles","setTiles","Array","fill","mines","setMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","cookies","minesBlasted","setMinesBlasted","Map","fillMines","newGrid","start","handleTileclick","index","console","log","userID","inProgress","newTiles","newMineCount","NaN","gameover","sendEvent","type","data","on","event","user","id","handleReset","checkWinner","isBoardFull","includes","tie","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext} from \"stream-chat-react\"\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\"\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\n\nfunction TicTacToe() {\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  \n\n  const {channel} = useChannelStateContext();\n  const {client} = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  const cookies = new Cookies();\n  const [minesBlasted, setMinesBlasted] = useState(() => new Map());\n\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n\n  const handleTileclick = async (index) => {\n    console.log(minesBlasted[client.userID]);\n    if (gameState !== GameState.start && gameState !== GameState.inProgress)return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null || player !== turn) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      minesBlasted[client.userID] = minesBlasted[client.userID] === NaN ? 1 : minesBlasted[client.userID] + 1;\n      setMinesBlasted(minesBlasted);\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n    console.log(channel)\n    await channel.sendEvent({\n      type: \"game move\",\n      data: { mines, newTiles, turn: turn === 'X' ? 'O' : 'X' }\n    })\n  };\n\n  channel.on((event) => {\n      if(event.type === \"game move\" && event.user.id !== client.userID){\n        setMines(event.data.mines)    \n        setTiles(event.data.newTiles)\n        setPlayer(event.data.turn);\n        setTurn(event.data.turn);\n      }\n  })\n  \n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4> {player === turn ?  client.user.name : \"Opponent\"} plays with {minesBlasted[client.userID]} tiles broken</h4>\n      <Board\n        player={player}\n        tiles={tiles}\n        onTileClick={handleTileclick}\n        strike={strike}\n      />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,sBAAsB,EAAEC,cAAc,QAAO,mBAAmB;AACzE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACzC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC;EAGrC,MAAM;IAACe;EAAO,CAAC,GAAGjB,sBAAsB,CAAC,CAAC;EAC1C,MAAM;IAACkB;EAAM,CAAC,GAAGjB,cAAc,CAAC,CAAC;EACjC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAACmB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAACI,SAAS,CAACyB,YAAY,CAAC;EAClE,MAAMC,OAAO,GAAG,IAAI7B,OAAO,CAAC,CAAC;EAC7B,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,MAAM,IAAIiC,GAAG,CAAC,CAAC,CAAC;EAEjE,SAASC,SAASA,CAAA,EAAG;IACnB,IAAIP,SAAS,KAAKvB,SAAS,CAACyB,YAAY,EAAE;IAC1C,IAAIM,OAAO,GAAG7B,KAAK,CAACiB,SAAS,CAAC;IAC9BD,QAAQ,CAACa,OAAO,CAAC;IACjB;IACAP,YAAY,CAACxB,SAAS,CAACgC,KAAK,CAAC;EAC/B;EAEAvC,SAAS,CAAC,MAAM;IACdqC,SAAS,CAACb,KAAK,EAAEC,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,MAAMgB,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvCC,OAAO,CAACC,GAAG,CAACT,YAAY,CAACf,MAAM,CAACyB,MAAM,CAAC,CAAC;IACxC,IAAId,SAAS,KAAKvB,SAAS,CAACgC,KAAK,IAAIT,SAAS,KAAKvB,SAAS,CAACsC,UAAU,EAAC;IACxEd,YAAY,CAACxB,SAAS,CAACsC,UAAU,CAAC;IAClC,IAAIzB,KAAK,CAACqB,KAAK,CAAC,KAAK,IAAI,IAAI3B,MAAM,KAAKE,IAAI,EAAE;IAC9C,MAAM8B,QAAQ,GAAG,CAAC,GAAG1B,KAAK,CAAC;IAC3B0B,QAAQ,CAACL,KAAK,CAAC,GAAGjB,KAAK,CAACiB,KAAK,CAAC;IAC9BpB,QAAQ,CAACyB,QAAQ,CAAC;IAElB,IAAIA,QAAQ,CAACL,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1B,MAAMM,YAAY,GAAGrB,SAAS,GAAG,CAAC;MAClCC,YAAY,CAACoB,YAAY,CAAC;MAC1Bb,YAAY,CAACf,MAAM,CAACyB,MAAM,CAAC,GAAGV,YAAY,CAACf,MAAM,CAACyB,MAAM,CAAC,KAAKI,GAAG,GAAG,CAAC,GAAGd,YAAY,CAACf,MAAM,CAACyB,MAAM,CAAC,GAAG,CAAC;MACvGT,eAAe,CAACD,YAAY,CAAC;MAC7B,IAAIa,YAAY,KAAK,CAAC,EAAE;QACtBhB,YAAY,CAACxB,SAAS,CAAC0C,QAAQ,CAAC;MAClC;IACF;IACAhC,OAAO,CAACD,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACjC0B,OAAO,CAACC,GAAG,CAACzB,OAAO,CAAC;IACpB,MAAMA,OAAO,CAACgC,SAAS,CAAC;MACtBC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE;QAAE5B,KAAK;QAAEsB,QAAQ;QAAE9B,IAAI,EAAEA,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG;MAAI;IAC1D,CAAC,CAAC;EACJ,CAAC;EAEDE,OAAO,CAACmC,EAAE,CAAEC,KAAK,IAAK;IAClB,IAAGA,KAAK,CAACH,IAAI,KAAK,WAAW,IAAIG,KAAK,CAACC,IAAI,CAACC,EAAE,KAAKrC,MAAM,CAACyB,MAAM,EAAC;MAC/DnB,QAAQ,CAAC6B,KAAK,CAACF,IAAI,CAAC5B,KAAK,CAAC;MAC1BH,QAAQ,CAACiC,KAAK,CAACF,IAAI,CAACN,QAAQ,CAAC;MAC7B/B,SAAS,CAACuC,KAAK,CAACF,IAAI,CAACpC,IAAI,CAAC;MAC1BC,OAAO,CAACqC,KAAK,CAACF,IAAI,CAACpC,IAAI,CAAC;IAC1B;EACJ,CAAC,CAAC;EAEF,MAAMyC,WAAW,GAAGA,CAAA,KAAM;IACxBpC,QAAQ,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9BN,OAAO,CAAC,GAAG,CAAC;IACZc,YAAY,CAACxB,SAAS,CAACgC,KAAK,CAAC;IAC7BV,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,SAAS6B,WAAWA,CAAA,EAAG;IACrB,MAAMC,WAAW,GAAG,CAACvC,KAAK,CAACwC,QAAQ,CAAC,IAAI,CAAC;IACzC,IAAID,WAAW,EAAE;MACf5B,YAAY,CAACxB,SAAS,CAACsD,GAAG,CAAC;IAC7B;EACF;EAEA7D,SAAS,CAAC,MAAM;IACd0D,WAAW,CAACtC,KAAK,EAAES,SAAS,CAAC;EAC/B,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAGX,oBACET,OAAA;IAAAmD,QAAA,gBACEnD,OAAA;MAAAmD,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBvD,OAAA;MAAAmD,QAAA,GAAI,GAAC,EAAChD,MAAM,KAAKE,IAAI,GAAIG,MAAM,CAACoC,IAAI,CAACY,IAAI,GAAG,UAAU,EAAC,cAAY,EAACjC,YAAY,CAACf,MAAM,CAACyB,MAAM,CAAC,EAAC,eAAa;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClHvD,OAAA,CAACN,KAAK;MACJS,MAAM,EAAEA,MAAO;MACfM,KAAK,EAAEA,KAAM;MACbgD,WAAW,EAAE5B,eAAgB;MAC7BZ,MAAM,EAAEA;IAAO;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFvD,OAAA,CAACL,QAAQ;MAACwB,SAAS,EAAEA;IAAU;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCvD,OAAA,CAACH,KAAK;MAACsB,SAAS,EAAEA,SAAU;MAACuC,OAAO,EAAEZ;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACrD,EAAA,CA/FQD,SAAS;EAAA,QAKEX,sBAAsB,EACvBC,cAAc;AAAA;AAAAoE,EAAA,GANxB1D,SAAS;AAiGlB,eAAeA,SAAS;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}