{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nconst DEFAULT_LETTER_INTERVAL = 30;\nconst DEFAULT_RENDERING_LETTER_COUNT = 2;\n/**\n * A hook that returns text in a streamed, typewriter fashion. The speed of streaming is\n * configurable.\n * @param {number} [streamingLetterIntervalMs=30] - The timeout between each typing animation in milliseconds.\n * @param {number} [renderingLetterCount=2] - The number of letters to be rendered each time we update.\n * @param {string} text - The text that we want to render in a typewriter fashion.\n * @returns {{ streamedMessageText: string }} - A substring of the text property, up until we've finished rendering the typewriter animation.\n */\nexport const useMessageTextStreaming = ({\n  renderingLetterCount = DEFAULT_RENDERING_LETTER_COUNT,\n  streamingLetterIntervalMs = DEFAULT_LETTER_INTERVAL,\n  text\n}) => {\n  const [streamedMessageText, setStreamedMessageText] = useState(text);\n  const textCursor = useRef(text.length);\n  useEffect(() => {\n    const textLength = text.length;\n    const interval = setInterval(() => {\n      if (!text || textCursor.current >= textLength) {\n        clearInterval(interval);\n      }\n      const newCursorValue = textCursor.current + renderingLetterCount;\n      const newText = text.substring(0, newCursorValue);\n      textCursor.current += newText.length - textCursor.current;\n      setStreamedMessageText(newText);\n    }, streamingLetterIntervalMs);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [streamingLetterIntervalMs, renderingLetterCount, text]);\n  return {\n    streamedMessageText\n  };\n};","map":{"version":3,"names":["useEffect","useRef","useState","DEFAULT_LETTER_INTERVAL","DEFAULT_RENDERING_LETTER_COUNT","useMessageTextStreaming","renderingLetterCount","streamingLetterIntervalMs","text","streamedMessageText","setStreamedMessageText","textCursor","length","textLength","interval","setInterval","current","clearInterval","newCursorValue","newText","substring"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/node_modules/stream-chat-react/dist/components/Message/hooks/useMessageTextStreaming.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nconst DEFAULT_LETTER_INTERVAL = 30;\nconst DEFAULT_RENDERING_LETTER_COUNT = 2;\n/**\n * A hook that returns text in a streamed, typewriter fashion. The speed of streaming is\n * configurable.\n * @param {number} [streamingLetterIntervalMs=30] - The timeout between each typing animation in milliseconds.\n * @param {number} [renderingLetterCount=2] - The number of letters to be rendered each time we update.\n * @param {string} text - The text that we want to render in a typewriter fashion.\n * @returns {{ streamedMessageText: string }} - A substring of the text property, up until we've finished rendering the typewriter animation.\n */\nexport const useMessageTextStreaming = ({ renderingLetterCount = DEFAULT_RENDERING_LETTER_COUNT, streamingLetterIntervalMs = DEFAULT_LETTER_INTERVAL, text, }) => {\n    const [streamedMessageText, setStreamedMessageText] = useState(text);\n    const textCursor = useRef(text.length);\n    useEffect(() => {\n        const textLength = text.length;\n        const interval = setInterval(() => {\n            if (!text || textCursor.current >= textLength) {\n                clearInterval(interval);\n            }\n            const newCursorValue = textCursor.current + renderingLetterCount;\n            const newText = text.substring(0, newCursorValue);\n            textCursor.current += newText.length - textCursor.current;\n            setStreamedMessageText(newText);\n        }, streamingLetterIntervalMs);\n        return () => {\n            clearInterval(interval);\n        };\n    }, [streamingLetterIntervalMs, renderingLetterCount, text]);\n    return { streamedMessageText };\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,MAAMC,uBAAuB,GAAG,EAAE;AAClC,MAAMC,8BAA8B,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC,oBAAoB,GAAGF,8BAA8B;EAAEG,yBAAyB,GAAGJ,uBAAuB;EAAEK;AAAM,CAAC,KAAK;EAC9J,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAACM,IAAI,CAAC;EACpE,MAAMG,UAAU,GAAGV,MAAM,CAACO,IAAI,CAACI,MAAM,CAAC;EACtCZ,SAAS,CAAC,MAAM;IACZ,MAAMa,UAAU,GAAGL,IAAI,CAACI,MAAM;IAC9B,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAI,CAACP,IAAI,IAAIG,UAAU,CAACK,OAAO,IAAIH,UAAU,EAAE;QAC3CI,aAAa,CAACH,QAAQ,CAAC;MAC3B;MACA,MAAMI,cAAc,GAAGP,UAAU,CAACK,OAAO,GAAGV,oBAAoB;MAChE,MAAMa,OAAO,GAAGX,IAAI,CAACY,SAAS,CAAC,CAAC,EAAEF,cAAc,CAAC;MACjDP,UAAU,CAACK,OAAO,IAAIG,OAAO,CAACP,MAAM,GAAGD,UAAU,CAACK,OAAO;MACzDN,sBAAsB,CAACS,OAAO,CAAC;IACnC,CAAC,EAAEZ,yBAAyB,CAAC;IAC7B,OAAO,MAAM;MACTU,aAAa,CAACH,QAAQ,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,CAACP,yBAAyB,EAAED,oBAAoB,EAAEE,IAAI,CAAC,CAAC;EAC3D,OAAO;IAAEC;EAAoB,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}