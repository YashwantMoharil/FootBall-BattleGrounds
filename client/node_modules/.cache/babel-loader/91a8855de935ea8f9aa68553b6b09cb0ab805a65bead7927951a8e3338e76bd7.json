{"ast":null,"code":"import React, { useCallback, useState } from 'react';\nimport { PollAction } from './PollAction';\nimport { AddCommentForm as DefaultAddCommentForm } from './AddCommentForm';\nimport { SuggestPollOptionForm as DefaultSuggestPollOptionForm } from './SuggestPollOptionForm';\nimport { EndPollDialog as DefaultEndPollDialog } from './EndPollDialog';\nimport { PollAnswerList as DefaultPollAnswerList } from './PollAnswerList';\nimport { PollOptionsFullList as DefaultPollOptionsFullList } from './PollOptionsFullList';\nimport { PollResults as DefaultPollResults } from './PollResults';\nimport { MAX_OPTIONS_DISPLAYED, MAX_POLL_OPTIONS } from '../constants';\nimport { useChannelStateContext, useChatContext, useMessageContext, usePollContext, useTranslationContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst pollStateSelector = nextValue => ({\n  allow_answers: nextValue.allow_answers,\n  allow_user_suggested_options: nextValue.allow_user_suggested_options,\n  answers_count: nextValue.answers_count,\n  created_by_id: nextValue.created_by_id,\n  is_closed: nextValue.is_closed,\n  options: nextValue.options,\n  ownAnswer: nextValue.ownAnswer\n});\nexport const PollActions = ({\n  AddCommentForm = DefaultAddCommentForm,\n  EndPollDialog = DefaultEndPollDialog,\n  PollAnswerList = DefaultPollAnswerList,\n  PollOptionsFullList = DefaultPollOptionsFullList,\n  PollResults = DefaultPollResults,\n  SuggestPollOptionForm = DefaultSuggestPollOptionForm\n}) => {\n  const {\n    client\n  } = useChatContext();\n  const {\n    t\n  } = useTranslationContext('PollActions');\n  const {\n    channelCapabilities = {}\n  } = useChannelStateContext('PollActions');\n  const {\n    message\n  } = useMessageContext('PollActions');\n  const {\n    poll\n  } = usePollContext();\n  const {\n    allow_answers,\n    allow_user_suggested_options,\n    answers_count,\n    created_by_id,\n    is_closed,\n    options,\n    ownAnswer\n  } = useStateStore(poll.state, pollStateSelector);\n  const [modalOpen, setModalOpen] = useState();\n  const closeModal = useCallback(() => setModalOpen(undefined), []);\n  const onUpdateAnswerClick = useCallback(() => setModalOpen('add-comment'), []);\n  return React.createElement(\"div\", {\n    className: 'str-chat__poll-actions'\n  }, options.length > MAX_OPTIONS_DISPLAYED && React.createElement(PollAction, {\n    buttonText: t('See all options ({{count}})', {\n      count: options.length\n    }),\n    closeModal: closeModal,\n    modalIsOpen: modalOpen === 'view-all-options',\n    openModal: () => setModalOpen('view-all-options')\n  }, React.createElement(PollOptionsFullList, {\n    close: closeModal\n  })), !is_closed && allow_user_suggested_options && options.length < MAX_POLL_OPTIONS && React.createElement(PollAction, {\n    buttonText: t('Suggest an option'),\n    closeModal: closeModal,\n    modalClassName: 'str-chat__suggest-poll-option-modal',\n    modalIsOpen: modalOpen === 'suggest-option',\n    openModal: () => setModalOpen('suggest-option')\n  }, React.createElement(SuggestPollOptionForm, {\n    close: closeModal,\n    messageId: message.id\n  })), !is_closed && allow_answers && React.createElement(PollAction, {\n    buttonText: ownAnswer ? t('Update your comment') : t('Add a comment'),\n    closeModal: closeModal,\n    modalClassName: 'str-chat__add-poll-answer-modal',\n    modalIsOpen: modalOpen === 'add-comment',\n    openModal: () => setModalOpen('add-comment')\n  }, React.createElement(AddCommentForm, {\n    close: closeModal,\n    messageId: message.id\n  })), answers_count > 0 && channelCapabilities['query-poll-votes'] && React.createElement(PollAction, {\n    buttonText: t('View {{count}} comments', {\n      count: answers_count\n    }),\n    closeModal: closeModal,\n    modalClassName: 'str-chat__poll-answer-list-modal',\n    modalIsOpen: modalOpen === 'view-comments',\n    openModal: () => setModalOpen('view-comments')\n  }, React.createElement(PollAnswerList, {\n    close: closeModal,\n    onUpdateOwnAnswerClick: onUpdateAnswerClick\n  })), React.createElement(PollAction, {\n    buttonText: t('View results'),\n    closeModal: closeModal,\n    modalClassName: 'str-chat__poll-results-modal',\n    modalIsOpen: modalOpen === 'view-results',\n    openModal: () => setModalOpen('view-results')\n  }, React.createElement(PollResults, {\n    close: closeModal\n  })), !is_closed && created_by_id === client.user?.id && React.createElement(PollAction, {\n    buttonText: t('End vote'),\n    closeModal: closeModal,\n    modalClassName: 'str-chat__end-poll-modal',\n    modalIsOpen: modalOpen === 'end-vote',\n    openModal: () => setModalOpen('end-vote')\n  }, React.createElement(EndPollDialog, {\n    close: closeModal\n  })));\n};","map":{"version":3,"names":["React","useCallback","useState","PollAction","AddCommentForm","DefaultAddCommentForm","SuggestPollOptionForm","DefaultSuggestPollOptionForm","EndPollDialog","DefaultEndPollDialog","PollAnswerList","DefaultPollAnswerList","PollOptionsFullList","DefaultPollOptionsFullList","PollResults","DefaultPollResults","MAX_OPTIONS_DISPLAYED","MAX_POLL_OPTIONS","useChannelStateContext","useChatContext","useMessageContext","usePollContext","useTranslationContext","useStateStore","pollStateSelector","nextValue","allow_answers","allow_user_suggested_options","answers_count","created_by_id","is_closed","options","ownAnswer","PollActions","client","t","channelCapabilities","message","poll","state","modalOpen","setModalOpen","closeModal","undefined","onUpdateAnswerClick","createElement","className","length","buttonText","count","modalIsOpen","openModal","close","modalClassName","messageId","id","onUpdateOwnAnswerClick","user"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Poll/PollActions/PollActions.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { PollAction } from './PollAction';\nimport { AddCommentForm as DefaultAddCommentForm } from './AddCommentForm';\nimport { SuggestPollOptionForm as DefaultSuggestPollOptionForm } from './SuggestPollOptionForm';\nimport { EndPollDialog as DefaultEndPollDialog } from './EndPollDialog';\nimport { PollAnswerList as DefaultPollAnswerList } from './PollAnswerList';\nimport { PollOptionsFullList as DefaultPollOptionsFullList } from './PollOptionsFullList';\nimport { PollResults as DefaultPollResults } from './PollResults';\nimport { MAX_OPTIONS_DISPLAYED, MAX_POLL_OPTIONS } from '../constants';\nimport { useChannelStateContext, useChatContext, useMessageContext, usePollContext, useTranslationContext, } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst pollStateSelector = (nextValue) => ({\n    allow_answers: nextValue.allow_answers,\n    allow_user_suggested_options: nextValue.allow_user_suggested_options,\n    answers_count: nextValue.answers_count,\n    created_by_id: nextValue.created_by_id,\n    is_closed: nextValue.is_closed,\n    options: nextValue.options,\n    ownAnswer: nextValue.ownAnswer,\n});\nexport const PollActions = ({ AddCommentForm = DefaultAddCommentForm, EndPollDialog = DefaultEndPollDialog, PollAnswerList = DefaultPollAnswerList, PollOptionsFullList = DefaultPollOptionsFullList, PollResults = DefaultPollResults, SuggestPollOptionForm = DefaultSuggestPollOptionForm, }) => {\n    const { client } = useChatContext();\n    const { t } = useTranslationContext('PollActions');\n    const { channelCapabilities = {} } = useChannelStateContext('PollActions');\n    const { message } = useMessageContext('PollActions');\n    const { poll } = usePollContext();\n    const { allow_answers, allow_user_suggested_options, answers_count, created_by_id, is_closed, options, ownAnswer, } = useStateStore(poll.state, pollStateSelector);\n    const [modalOpen, setModalOpen] = useState();\n    const closeModal = useCallback(() => setModalOpen(undefined), []);\n    const onUpdateAnswerClick = useCallback(() => setModalOpen('add-comment'), []);\n    return (React.createElement(\"div\", { className: 'str-chat__poll-actions' },\n        options.length > MAX_OPTIONS_DISPLAYED && (React.createElement(PollAction, { buttonText: t('See all options ({{count}})', {\n                count: options.length,\n            }), closeModal: closeModal, modalIsOpen: modalOpen === 'view-all-options', openModal: () => setModalOpen('view-all-options') },\n            React.createElement(PollOptionsFullList, { close: closeModal }))),\n        !is_closed &&\n            allow_user_suggested_options &&\n            options.length < MAX_POLL_OPTIONS && (React.createElement(PollAction, { buttonText: t('Suggest an option'), closeModal: closeModal, modalClassName: 'str-chat__suggest-poll-option-modal', modalIsOpen: modalOpen === 'suggest-option', openModal: () => setModalOpen('suggest-option') },\n            React.createElement(SuggestPollOptionForm, { close: closeModal, messageId: message.id }))),\n        !is_closed && allow_answers && (React.createElement(PollAction, { buttonText: ownAnswer ? t('Update your comment') : t('Add a comment'), closeModal: closeModal, modalClassName: 'str-chat__add-poll-answer-modal', modalIsOpen: modalOpen === 'add-comment', openModal: () => setModalOpen('add-comment') },\n            React.createElement(AddCommentForm, { close: closeModal, messageId: message.id }))),\n        answers_count > 0 && channelCapabilities['query-poll-votes'] && (React.createElement(PollAction, { buttonText: t('View {{count}} comments', { count: answers_count }), closeModal: closeModal, modalClassName: 'str-chat__poll-answer-list-modal', modalIsOpen: modalOpen === 'view-comments', openModal: () => setModalOpen('view-comments') },\n            React.createElement(PollAnswerList, { close: closeModal, onUpdateOwnAnswerClick: onUpdateAnswerClick }))),\n        React.createElement(PollAction, { buttonText: t('View results'), closeModal: closeModal, modalClassName: 'str-chat__poll-results-modal', modalIsOpen: modalOpen === 'view-results', openModal: () => setModalOpen('view-results') },\n            React.createElement(PollResults, { close: closeModal })),\n        !is_closed && created_by_id === client.user?.id && (React.createElement(PollAction, { buttonText: t('End vote'), closeModal: closeModal, modalClassName: 'str-chat__end-poll-modal', modalIsOpen: modalOpen === 'end-vote', openModal: () => setModalOpen('end-vote') },\n            React.createElement(EndPollDialog, { close: closeModal })))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}