{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport { ThreadListItem as DefaultThreadListItem } from './ThreadListItem';\nimport { ThreadListEmptyPlaceholder as DefaultThreadListEmptyPlaceholder } from './ThreadListEmptyPlaceholder';\nimport { ThreadListUnseenThreadsBanner as DefaultThreadListUnseenThreadsBanner } from './ThreadListUnseenThreadsBanner';\nimport { ThreadListLoadingIndicator as DefaultThreadListLoadingIndicator } from './ThreadListLoadingIndicator';\nimport { useChatContext, useComponentContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst selector = nextValue => ({\n  threads: nextValue.threads\n});\nconst computeItemKey = (_, item) => item.id;\nexport const useThreadList = () => {\n  const {\n    client\n  } = useChatContext();\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        client.threads.activate();\n      }\n      if (document.visibilityState === 'hidden') {\n        client.threads.deactivate();\n      }\n    };\n    handleVisibilityChange();\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      client.threads.deactivate();\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [client]);\n};\nexport const ThreadList = ({\n  virtuosoProps\n}) => {\n  const {\n    client\n  } = useChatContext();\n  const {\n    ThreadListEmptyPlaceholder = DefaultThreadListEmptyPlaceholder,\n    ThreadListItem = DefaultThreadListItem,\n    ThreadListLoadingIndicator = DefaultThreadListLoadingIndicator,\n    ThreadListUnseenThreadsBanner = DefaultThreadListUnseenThreadsBanner\n  } = useComponentContext();\n  const {\n    threads\n  } = useStateStore(client.threads.state, selector);\n  useThreadList();\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-list-container'\n  }, React.createElement(ThreadListUnseenThreadsBanner, null), React.createElement(Virtuoso, {\n    atBottomStateChange: atBottom => atBottom && client.threads.loadNextPage(),\n    className: 'str-chat__thread-list',\n    components: {\n      EmptyPlaceholder: ThreadListEmptyPlaceholder,\n      Footer: ThreadListLoadingIndicator\n    },\n    computeItemKey: computeItemKey,\n    data: threads,\n    itemContent: (_, thread) => React.createElement(ThreadListItem, {\n      thread: thread\n    }),\n    ...virtuosoProps\n  }));\n};","map":{"version":3,"names":["React","useEffect","Virtuoso","ThreadListItem","DefaultThreadListItem","ThreadListEmptyPlaceholder","DefaultThreadListEmptyPlaceholder","ThreadListUnseenThreadsBanner","DefaultThreadListUnseenThreadsBanner","ThreadListLoadingIndicator","DefaultThreadListLoadingIndicator","useChatContext","useComponentContext","useStateStore","selector","nextValue","threads","computeItemKey","_","item","id","useThreadList","client","handleVisibilityChange","document","visibilityState","activate","deactivate","addEventListener","removeEventListener","ThreadList","virtuosoProps","state","createElement","className","atBottomStateChange","atBottom","loadNextPage","components","EmptyPlaceholder","Footer","data","itemContent","thread"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Threads/ThreadList/ThreadList.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Virtuoso } from 'react-virtuoso';\nimport { ThreadListItem as DefaultThreadListItem } from './ThreadListItem';\nimport { ThreadListEmptyPlaceholder as DefaultThreadListEmptyPlaceholder } from './ThreadListEmptyPlaceholder';\nimport { ThreadListUnseenThreadsBanner as DefaultThreadListUnseenThreadsBanner } from './ThreadListUnseenThreadsBanner';\nimport { ThreadListLoadingIndicator as DefaultThreadListLoadingIndicator } from './ThreadListLoadingIndicator';\nimport { useChatContext, useComponentContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst selector = (nextValue) => ({ threads: nextValue.threads });\nconst computeItemKey = (_, item) => item.id;\nexport const useThreadList = () => {\n    const { client } = useChatContext();\n    useEffect(() => {\n        const handleVisibilityChange = () => {\n            if (document.visibilityState === 'visible') {\n                client.threads.activate();\n            }\n            if (document.visibilityState === 'hidden') {\n                client.threads.deactivate();\n            }\n        };\n        handleVisibilityChange();\n        document.addEventListener('visibilitychange', handleVisibilityChange);\n        return () => {\n            client.threads.deactivate();\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\n        };\n    }, [client]);\n};\nexport const ThreadList = ({ virtuosoProps }) => {\n    const { client } = useChatContext();\n    const { ThreadListEmptyPlaceholder = DefaultThreadListEmptyPlaceholder, ThreadListItem = DefaultThreadListItem, ThreadListLoadingIndicator = DefaultThreadListLoadingIndicator, ThreadListUnseenThreadsBanner = DefaultThreadListUnseenThreadsBanner, } = useComponentContext();\n    const { threads } = useStateStore(client.threads.state, selector);\n    useThreadList();\n    return (React.createElement(\"div\", { className: 'str-chat__thread-list-container' },\n        React.createElement(ThreadListUnseenThreadsBanner, null),\n        React.createElement(Virtuoso, { atBottomStateChange: (atBottom) => atBottom && client.threads.loadNextPage(), className: 'str-chat__thread-list', components: {\n                EmptyPlaceholder: ThreadListEmptyPlaceholder,\n                Footer: ThreadListLoadingIndicator,\n            }, computeItemKey: computeItemKey, data: threads, itemContent: (_, thread) => React.createElement(ThreadListItem, { thread: thread }), ...virtuosoProps })));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,IAAIC,qBAAqB,QAAQ,kBAAkB;AAC1E,SAASC,0BAA0B,IAAIC,iCAAiC,QAAQ,8BAA8B;AAC9G,SAASC,6BAA6B,IAAIC,oCAAoC,QAAQ,iCAAiC;AACvH,SAASC,0BAA0B,IAAIC,iCAAiC,QAAQ,8BAA8B;AAC9G,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,MAAMC,QAAQ,GAAIC,SAAS,KAAM;EAAEC,OAAO,EAAED,SAAS,CAACC;AAAQ,CAAC,CAAC;AAChE,MAAMC,cAAc,GAAGA,CAACC,CAAC,EAAEC,IAAI,KAAKA,IAAI,CAACC,EAAE;AAC3C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,MAAM;IAAEC;EAAO,CAAC,GAAGX,cAAc,CAAC,CAAC;EACnCV,SAAS,CAAC,MAAM;IACZ,MAAMsB,sBAAsB,GAAGA,CAAA,KAAM;MACjC,IAAIC,QAAQ,CAACC,eAAe,KAAK,SAAS,EAAE;QACxCH,MAAM,CAACN,OAAO,CAACU,QAAQ,CAAC,CAAC;MAC7B;MACA,IAAIF,QAAQ,CAACC,eAAe,KAAK,QAAQ,EAAE;QACvCH,MAAM,CAACN,OAAO,CAACW,UAAU,CAAC,CAAC;MAC/B;IACJ,CAAC;IACDJ,sBAAsB,CAAC,CAAC;IACxBC,QAAQ,CAACI,gBAAgB,CAAC,kBAAkB,EAAEL,sBAAsB,CAAC;IACrE,OAAO,MAAM;MACTD,MAAM,CAACN,OAAO,CAACW,UAAU,CAAC,CAAC;MAC3BH,QAAQ,CAACK,mBAAmB,CAAC,kBAAkB,EAAEN,sBAAsB,CAAC;IAC5E,CAAC;EACL,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;AAChB,CAAC;AACD,OAAO,MAAMQ,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAC7C,MAAM;IAAET;EAAO,CAAC,GAAGX,cAAc,CAAC,CAAC;EACnC,MAAM;IAAEN,0BAA0B,GAAGC,iCAAiC;IAAEH,cAAc,GAAGC,qBAAqB;IAAEK,0BAA0B,GAAGC,iCAAiC;IAAEH,6BAA6B,GAAGC;EAAsC,CAAC,GAAGI,mBAAmB,CAAC,CAAC;EAC/Q,MAAM;IAAEI;EAAQ,CAAC,GAAGH,aAAa,CAACS,MAAM,CAACN,OAAO,CAACgB,KAAK,EAAElB,QAAQ,CAAC;EACjEO,aAAa,CAAC,CAAC;EACf,OAAQrB,KAAK,CAACiC,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkC,CAAC,EAC/ElC,KAAK,CAACiC,aAAa,CAAC1B,6BAA6B,EAAE,IAAI,CAAC,EACxDP,KAAK,CAACiC,aAAa,CAAC/B,QAAQ,EAAE;IAAEiC,mBAAmB,EAAGC,QAAQ,IAAKA,QAAQ,IAAId,MAAM,CAACN,OAAO,CAACqB,YAAY,CAAC,CAAC;IAAEH,SAAS,EAAE,uBAAuB;IAAEI,UAAU,EAAE;MACtJC,gBAAgB,EAAElC,0BAA0B;MAC5CmC,MAAM,EAAE/B;IACZ,CAAC;IAAEQ,cAAc,EAAEA,cAAc;IAAEwB,IAAI,EAAEzB,OAAO;IAAE0B,WAAW,EAAEA,CAACxB,CAAC,EAAEyB,MAAM,KAAK3C,KAAK,CAACiC,aAAa,CAAC9B,cAAc,EAAE;MAAEwC,MAAM,EAAEA;IAAO,CAAC,CAAC;IAAE,GAAGZ;EAAc,CAAC,CAAC,CAAC;AACvK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}