{"ast":null,"code":"import { validateAndGetMessage } from '../utils';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport const useDeleteHandler = (message, notifications = {}) => {\n  const {\n    getErrorNotification,\n    notify\n  } = notifications;\n  const {\n    deleteMessage,\n    updateMessage\n  } = useChannelActionContext('useDeleteHandler');\n  const {\n    client\n  } = useChatContext('useDeleteHandler');\n  const {\n    t\n  } = useTranslationContext('useDeleteHandler');\n  return async event => {\n    event.preventDefault();\n    if (!message?.id || !client || !updateMessage) {\n      return;\n    }\n    try {\n      const deletedMessage = await deleteMessage(message);\n      updateMessage(deletedMessage);\n    } catch (e) {\n      const errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);\n      if (notify) notify(errorMessage || t('Error deleting message'), 'error');\n    }\n  };\n};","map":{"version":3,"names":["validateAndGetMessage","useChannelActionContext","useChatContext","useTranslationContext","useDeleteHandler","message","notifications","getErrorNotification","notify","deleteMessage","updateMessage","client","t","event","preventDefault","id","deletedMessage","e","errorMessage"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Message/hooks/useDeleteHandler.js"],"sourcesContent":["import { validateAndGetMessage } from '../utils';\nimport { useChannelActionContext } from '../../../context/ChannelActionContext';\nimport { useChatContext } from '../../../context/ChatContext';\nimport { useTranslationContext } from '../../../context/TranslationContext';\nexport const useDeleteHandler = (message, notifications = {}) => {\n    const { getErrorNotification, notify } = notifications;\n    const { deleteMessage, updateMessage } = useChannelActionContext('useDeleteHandler');\n    const { client } = useChatContext('useDeleteHandler');\n    const { t } = useTranslationContext('useDeleteHandler');\n    return async (event) => {\n        event.preventDefault();\n        if (!message?.id || !client || !updateMessage) {\n            return;\n        }\n        try {\n            const deletedMessage = await deleteMessage(message);\n            updateMessage(deletedMessage);\n        }\n        catch (e) {\n            const errorMessage = getErrorNotification && validateAndGetMessage(getErrorNotification, [message]);\n            if (notify)\n                notify(errorMessage || t('Error deleting message'), 'error');\n        }\n    };\n};\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,UAAU;AAChD,SAASC,uBAAuB,QAAQ,uCAAuC;AAC/E,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,qBAAqB,QAAQ,qCAAqC;AAC3E,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,aAAa,GAAG,CAAC,CAAC,KAAK;EAC7D,MAAM;IAAEC,oBAAoB;IAAEC;EAAO,CAAC,GAAGF,aAAa;EACtD,MAAM;IAAEG,aAAa;IAAEC;EAAc,CAAC,GAAGT,uBAAuB,CAAC,kBAAkB,CAAC;EACpF,MAAM;IAAEU;EAAO,CAAC,GAAGT,cAAc,CAAC,kBAAkB,CAAC;EACrD,MAAM;IAAEU;EAAE,CAAC,GAAGT,qBAAqB,CAAC,kBAAkB,CAAC;EACvD,OAAO,MAAOU,KAAK,IAAK;IACpBA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAACT,OAAO,EAAEU,EAAE,IAAI,CAACJ,MAAM,IAAI,CAACD,aAAa,EAAE;MAC3C;IACJ;IACA,IAAI;MACA,MAAMM,cAAc,GAAG,MAAMP,aAAa,CAACJ,OAAO,CAAC;MACnDK,aAAa,CAACM,cAAc,CAAC;IACjC,CAAC,CACD,OAAOC,CAAC,EAAE;MACN,MAAMC,YAAY,GAAGX,oBAAoB,IAAIP,qBAAqB,CAACO,oBAAoB,EAAE,CAACF,OAAO,CAAC,CAAC;MACnG,IAAIG,MAAM,EACNA,MAAM,CAACU,YAAY,IAAIN,CAAC,CAAC,wBAAwB,CAAC,EAAE,OAAO,CAAC;IACpE;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}