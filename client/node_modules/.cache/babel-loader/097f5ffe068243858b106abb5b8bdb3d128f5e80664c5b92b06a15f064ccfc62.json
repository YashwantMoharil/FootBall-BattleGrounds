{"ast":null,"code":"import clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useHandleFileChangeWrapper } from './utils';\nimport { useMessageInputContext, useTranslationContext } from '../../context';\nimport { useMessageComposer } from '../MessageInput';\nimport { useAttachmentManagerState } from '../MessageInput/hooks/useAttachmentManagerState';\nimport { useStateStore } from '../../store';\nconst attachmentManagerConfigStateSelector = state => ({\n  acceptedFiles: state.attachments.acceptedFiles,\n  maxNumberOfFilesPerMessage: state.attachments.maxNumberOfFilesPerMessage\n});\n/**\n * @deprecated Use FileInput instead\n */\nexport const UploadButton = forwardRef(function UploadButton({\n  onFileChange,\n  resetOnChange = true,\n  ...rest\n}, ref) {\n  const handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);\n  return React.createElement(\"input\", {\n    onChange: handleInputChange,\n    ref: ref,\n    type: 'file',\n    ...rest\n  });\n});\nexport const FileInput = UploadButton;\nexport const UploadFileInput = forwardRef(function UploadFileInput({\n  className,\n  onFileChange: onFileChangeCustom,\n  ...props\n}, ref) {\n  const {\n    t\n  } = useTranslationContext('UploadFileInput');\n  const {\n    cooldownRemaining\n  } = useMessageInputContext();\n  const messageComposer = useMessageComposer();\n  const {\n    attachmentManager\n  } = messageComposer;\n  const {\n    isUploadEnabled\n  } = useAttachmentManagerState();\n  const {\n    acceptedFiles,\n    maxNumberOfFilesPerMessage\n  } = useStateStore(messageComposer.configState, attachmentManagerConfigStateSelector);\n  const id = useMemo(() => nanoid(), []);\n  const onFileChange = useCallback(files => {\n    attachmentManager.uploadFiles(files);\n    onFileChangeCustom?.(files);\n  }, [onFileChangeCustom, attachmentManager]);\n  return React.createElement(FileInput, {\n    accept: acceptedFiles?.join(','),\n    \"aria-label\": t('aria/File upload'),\n    \"data-testid\": 'file-input',\n    disabled: !isUploadEnabled || !!cooldownRemaining,\n    id: id,\n    multiple: maxNumberOfFilesPerMessage > 1,\n    ...props,\n    className: clsx('str-chat__file-input', className),\n    onFileChange: onFileChange,\n    ref: ref\n  });\n});","map":{"version":3,"names":["clsx","nanoid","React","forwardRef","useCallback","useMemo","useHandleFileChangeWrapper","useMessageInputContext","useTranslationContext","useMessageComposer","useAttachmentManagerState","useStateStore","attachmentManagerConfigStateSelector","state","acceptedFiles","attachments","maxNumberOfFilesPerMessage","UploadButton","onFileChange","resetOnChange","rest","ref","handleInputChange","createElement","onChange","type","FileInput","UploadFileInput","className","onFileChangeCustom","props","t","cooldownRemaining","messageComposer","attachmentManager","isUploadEnabled","configState","id","files","uploadFiles","accept","join","disabled","multiple"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/ReactFileUtilities/UploadButton.js"],"sourcesContent":["import clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useHandleFileChangeWrapper } from './utils';\nimport { useMessageInputContext, useTranslationContext } from '../../context';\nimport { useMessageComposer } from '../MessageInput';\nimport { useAttachmentManagerState } from '../MessageInput/hooks/useAttachmentManagerState';\nimport { useStateStore } from '../../store';\nconst attachmentManagerConfigStateSelector = (state) => ({\n    acceptedFiles: state.attachments.acceptedFiles,\n    maxNumberOfFilesPerMessage: state.attachments.maxNumberOfFilesPerMessage,\n});\n/**\n * @deprecated Use FileInput instead\n */\nexport const UploadButton = forwardRef(function UploadButton({ onFileChange, resetOnChange = true, ...rest }, ref) {\n    const handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);\n    return React.createElement(\"input\", { onChange: handleInputChange, ref: ref, type: 'file', ...rest });\n});\nexport const FileInput = UploadButton;\nexport const UploadFileInput = forwardRef(function UploadFileInput({ className, onFileChange: onFileChangeCustom, ...props }, ref) {\n    const { t } = useTranslationContext('UploadFileInput');\n    const { cooldownRemaining } = useMessageInputContext();\n    const messageComposer = useMessageComposer();\n    const { attachmentManager } = messageComposer;\n    const { isUploadEnabled } = useAttachmentManagerState();\n    const { acceptedFiles, maxNumberOfFilesPerMessage } = useStateStore(messageComposer.configState, attachmentManagerConfigStateSelector);\n    const id = useMemo(() => nanoid(), []);\n    const onFileChange = useCallback((files) => {\n        attachmentManager.uploadFiles(files);\n        onFileChangeCustom?.(files);\n    }, [onFileChangeCustom, attachmentManager]);\n    return (React.createElement(FileInput, { accept: acceptedFiles?.join(','), \"aria-label\": t('aria/File upload'), \"data-testid\": 'file-input', disabled: !isUploadEnabled || !!cooldownRemaining, id: id, multiple: maxNumberOfFilesPerMessage > 1, ...props, className: clsx('str-chat__file-input', className), onFileChange: onFileChange, ref: ref }));\n});\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,UAAU,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC/D,SAASC,0BAA0B,QAAQ,SAAS;AACpD,SAASC,sBAAsB,EAAEC,qBAAqB,QAAQ,eAAe;AAC7E,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,yBAAyB,QAAQ,iDAAiD;AAC3F,SAASC,aAAa,QAAQ,aAAa;AAC3C,MAAMC,oCAAoC,GAAIC,KAAK,KAAM;EACrDC,aAAa,EAAED,KAAK,CAACE,WAAW,CAACD,aAAa;EAC9CE,0BAA0B,EAAEH,KAAK,CAACE,WAAW,CAACC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGd,UAAU,CAAC,SAASc,YAAYA,CAAC;EAAEC,YAAY;EAAEC,aAAa,GAAG,IAAI;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC/G,MAAMC,iBAAiB,GAAGhB,0BAA0B,CAACa,aAAa,EAAED,YAAY,CAAC;EACjF,OAAOhB,KAAK,CAACqB,aAAa,CAAC,OAAO,EAAE;IAAEC,QAAQ,EAAEF,iBAAiB;IAAED,GAAG,EAAEA,GAAG;IAAEI,IAAI,EAAE,MAAM;IAAE,GAAGL;EAAK,CAAC,CAAC;AACzG,CAAC,CAAC;AACF,OAAO,MAAMM,SAAS,GAAGT,YAAY;AACrC,OAAO,MAAMU,eAAe,GAAGxB,UAAU,CAAC,SAASwB,eAAeA,CAAC;EAAEC,SAAS;EAAEV,YAAY,EAAEW,kBAAkB;EAAE,GAAGC;AAAM,CAAC,EAAET,GAAG,EAAE;EAC/H,MAAM;IAAEU;EAAE,CAAC,GAAGvB,qBAAqB,CAAC,iBAAiB,CAAC;EACtD,MAAM;IAAEwB;EAAkB,CAAC,GAAGzB,sBAAsB,CAAC,CAAC;EACtD,MAAM0B,eAAe,GAAGxB,kBAAkB,CAAC,CAAC;EAC5C,MAAM;IAAEyB;EAAkB,CAAC,GAAGD,eAAe;EAC7C,MAAM;IAAEE;EAAgB,CAAC,GAAGzB,yBAAyB,CAAC,CAAC;EACvD,MAAM;IAAEI,aAAa;IAAEE;EAA2B,CAAC,GAAGL,aAAa,CAACsB,eAAe,CAACG,WAAW,EAAExB,oCAAoC,CAAC;EACtI,MAAMyB,EAAE,GAAGhC,OAAO,CAAC,MAAMJ,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACtC,MAAMiB,YAAY,GAAGd,WAAW,CAAEkC,KAAK,IAAK;IACxCJ,iBAAiB,CAACK,WAAW,CAACD,KAAK,CAAC;IACpCT,kBAAkB,GAAGS,KAAK,CAAC;EAC/B,CAAC,EAAE,CAACT,kBAAkB,EAAEK,iBAAiB,CAAC,CAAC;EAC3C,OAAQhC,KAAK,CAACqB,aAAa,CAACG,SAAS,EAAE;IAAEc,MAAM,EAAE1B,aAAa,EAAE2B,IAAI,CAAC,GAAG,CAAC;IAAE,YAAY,EAAEV,CAAC,CAAC,kBAAkB,CAAC;IAAE,aAAa,EAAE,YAAY;IAAEW,QAAQ,EAAE,CAACP,eAAe,IAAI,CAAC,CAACH,iBAAiB;IAAEK,EAAE,EAAEA,EAAE;IAAEM,QAAQ,EAAE3B,0BAA0B,GAAG,CAAC;IAAE,GAAGc,KAAK;IAAEF,SAAS,EAAE5B,IAAI,CAAC,sBAAsB,EAAE4B,SAAS,CAAC;IAAEV,YAAY,EAAEA,YAAY;IAAEG,GAAG,EAAEA;EAAI,CAAC,CAAC;AAC3V,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}