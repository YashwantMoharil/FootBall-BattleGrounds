{"ast":null,"code":"import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../../utils';\nimport { useChatContext } from '../../../../context/ChatContext';\nimport { useComponentContext } from '../../../../context/ComponentContext';\nexport const useEnrichedMessages = args => {\n  const {\n    channel,\n    disableDateSeparator,\n    groupStyles,\n    headerPosition,\n    hideDeletedMessages,\n    hideNewMessageSeparator,\n    maxTimeBetweenGroupedMessages,\n    messages,\n    noGroupByUser,\n    reviewProcessedMessage\n  } = args;\n  const {\n    client\n  } = useChatContext('useEnrichedMessages');\n  const {\n    HeaderComponent\n  } = useComponentContext('useEnrichedMessages');\n  const lastRead = useMemo(() => channel.lastRead?.(), [channel]);\n  const enableDateSeparator = !disableDateSeparator;\n  let messagesWithDates = !enableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator ? messages : processMessages({\n    enableDateSeparator,\n    hideDeletedMessages,\n    hideNewMessageSeparator,\n    lastRead,\n    messages,\n    reviewProcessedMessage,\n    userId: client.userID || ''\n  });\n  if (HeaderComponent) {\n    messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n  }\n  const groupStylesFn = groupStyles || getGroupStyles;\n  const messageGroupStyles = useMemo(() => messagesWithDates.reduce((acc, message, i) => {\n    const style = groupStylesFn(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser, maxTimeBetweenGroupedMessages);\n    if (style) acc[message.id] = style;\n    return acc;\n  }, {}),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [maxTimeBetweenGroupedMessages, messagesWithDates, noGroupByUser]);\n  return {\n    messageGroupStyles,\n    messages: messagesWithDates\n  };\n};","map":{"version":3,"names":["useMemo","getGroupStyles","insertIntro","processMessages","useChatContext","useComponentContext","useEnrichedMessages","args","channel","disableDateSeparator","groupStyles","headerPosition","hideDeletedMessages","hideNewMessageSeparator","maxTimeBetweenGroupedMessages","messages","noGroupByUser","reviewProcessedMessage","client","HeaderComponent","lastRead","enableDateSeparator","messagesWithDates","userId","userID","groupStylesFn","messageGroupStyles","reduce","acc","message","i","style","id"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useEnrichedMessages.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { getGroupStyles, insertIntro, processMessages } from '../../utils';\nimport { useChatContext } from '../../../../context/ChatContext';\nimport { useComponentContext } from '../../../../context/ComponentContext';\nexport const useEnrichedMessages = (args) => {\n    const { channel, disableDateSeparator, groupStyles, headerPosition, hideDeletedMessages, hideNewMessageSeparator, maxTimeBetweenGroupedMessages, messages, noGroupByUser, reviewProcessedMessage, } = args;\n    const { client } = useChatContext('useEnrichedMessages');\n    const { HeaderComponent } = useComponentContext('useEnrichedMessages');\n    const lastRead = useMemo(() => channel.lastRead?.(), [channel]);\n    const enableDateSeparator = !disableDateSeparator;\n    let messagesWithDates = !enableDateSeparator && !hideDeletedMessages && hideNewMessageSeparator\n        ? messages\n        : processMessages({\n            enableDateSeparator,\n            hideDeletedMessages,\n            hideNewMessageSeparator,\n            lastRead,\n            messages,\n            reviewProcessedMessage,\n            userId: client.userID || '',\n        });\n    if (HeaderComponent) {\n        messagesWithDates = insertIntro(messagesWithDates, headerPosition);\n    }\n    const groupStylesFn = groupStyles || getGroupStyles;\n    const messageGroupStyles = useMemo(() => messagesWithDates.reduce((acc, message, i) => {\n        const style = groupStylesFn(message, messagesWithDates[i - 1], messagesWithDates[i + 1], noGroupByUser, maxTimeBetweenGroupedMessages);\n        if (style)\n            acc[message.id] = style;\n        return acc;\n    }, {}), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [maxTimeBetweenGroupedMessages, messagesWithDates, noGroupByUser]);\n    return { messageGroupStyles, messages: messagesWithDates };\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,EAAEC,WAAW,EAAEC,eAAe,QAAQ,aAAa;AAC1E,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,OAAO,MAAMC,mBAAmB,GAAIC,IAAI,IAAK;EACzC,MAAM;IAAEC,OAAO;IAAEC,oBAAoB;IAAEC,WAAW;IAAEC,cAAc;IAAEC,mBAAmB;IAAEC,uBAAuB;IAAEC,6BAA6B;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAwB,CAAC,GAAGV,IAAI;EAC1M,MAAM;IAAEW;EAAO,CAAC,GAAGd,cAAc,CAAC,qBAAqB,CAAC;EACxD,MAAM;IAAEe;EAAgB,CAAC,GAAGd,mBAAmB,CAAC,qBAAqB,CAAC;EACtE,MAAMe,QAAQ,GAAGpB,OAAO,CAAC,MAAMQ,OAAO,CAACY,QAAQ,GAAG,CAAC,EAAE,CAACZ,OAAO,CAAC,CAAC;EAC/D,MAAMa,mBAAmB,GAAG,CAACZ,oBAAoB;EACjD,IAAIa,iBAAiB,GAAG,CAACD,mBAAmB,IAAI,CAACT,mBAAmB,IAAIC,uBAAuB,GACzFE,QAAQ,GACRZ,eAAe,CAAC;IACdkB,mBAAmB;IACnBT,mBAAmB;IACnBC,uBAAuB;IACvBO,QAAQ;IACRL,QAAQ;IACRE,sBAAsB;IACtBM,MAAM,EAAEL,MAAM,CAACM,MAAM,IAAI;EAC7B,CAAC,CAAC;EACN,IAAIL,eAAe,EAAE;IACjBG,iBAAiB,GAAGpB,WAAW,CAACoB,iBAAiB,EAAEX,cAAc,CAAC;EACtE;EACA,MAAMc,aAAa,GAAGf,WAAW,IAAIT,cAAc;EACnD,MAAMyB,kBAAkB,GAAG1B,OAAO,CAAC,MAAMsB,iBAAiB,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,EAAEC,CAAC,KAAK;IACnF,MAAMC,KAAK,GAAGN,aAAa,CAACI,OAAO,EAAEP,iBAAiB,CAACQ,CAAC,GAAG,CAAC,CAAC,EAAER,iBAAiB,CAACQ,CAAC,GAAG,CAAC,CAAC,EAAEd,aAAa,EAAEF,6BAA6B,CAAC;IACtI,IAAIiB,KAAK,EACLH,GAAG,CAACC,OAAO,CAACG,EAAE,CAAC,GAAGD,KAAK;IAC3B,OAAOH,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACN;EACA,CAACd,6BAA6B,EAAEQ,iBAAiB,EAAEN,aAAa,CAAC,CAAC;EAClE,OAAO;IAAEU,kBAAkB;IAAEX,QAAQ,EAAEO;EAAkB,CAAC;AAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}