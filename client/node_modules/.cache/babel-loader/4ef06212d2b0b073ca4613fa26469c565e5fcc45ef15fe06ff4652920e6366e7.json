{"ast":null,"code":"import throttle from 'lodash.throttle';\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { resampleWaveformData } from '../audioSampling';\nexport const WaveProgressBar = ({\n  amplitudesCount = 40,\n  progress = 0,\n  relativeAmplitudeBarWidth = 2,\n  relativeAmplitudeGap = 1,\n  seek,\n  waveformData\n}) => {\n  const [progressIndicator, setProgressIndicator] = useState(null);\n  const isDragging = useRef(false);\n  const [root, setRoot] = useState(null);\n  const [trackAxisX, setTrackAxisX] = useState();\n  const lastRootWidth = useRef(undefined);\n  const handleDragStart = e => {\n    e.preventDefault();\n    if (!progressIndicator) return;\n    isDragging.current = true;\n    progressIndicator.style.cursor = 'grabbing';\n  };\n  const handleDrag = e => {\n    if (!isDragging.current) return;\n    // Due to throttling of seek, it is necessary to create a copy (snapshot) of the event.\n    // Otherwise, the event would be nullified at the point when the throttled function is executed.\n    seek({\n      ...e\n    });\n  };\n  const handleDragStop = useCallback(() => {\n    if (!progressIndicator) return;\n    isDragging.current = false;\n    progressIndicator.style.removeProperty('cursor');\n  }, [progressIndicator]);\n  const getTrackAxisX = useMemo(() => throttle(rootWidth => {\n    if (rootWidth === lastRootWidth.current) return;\n    lastRootWidth.current = rootWidth;\n    const possibleAmpCount = Math.floor(rootWidth / (relativeAmplitudeGap + relativeAmplitudeBarWidth));\n    const tooManyAmplitudesToRender = possibleAmpCount < amplitudesCount;\n    const barCount = tooManyAmplitudesToRender ? possibleAmpCount : amplitudesCount;\n    const amplitudeBarWidthToGapRatio = relativeAmplitudeBarWidth / (relativeAmplitudeBarWidth + relativeAmplitudeGap);\n    const barWidth = barCount && rootWidth / barCount * amplitudeBarWidthToGapRatio;\n    setTrackAxisX({\n      barCount,\n      barWidth,\n      gap: barWidth * (relativeAmplitudeGap / relativeAmplitudeBarWidth)\n    });\n  }, 1), [relativeAmplitudeBarWidth, relativeAmplitudeGap, amplitudesCount]);\n  const resampledWaveformData = useMemo(() => trackAxisX ? resampleWaveformData(waveformData, trackAxisX.barCount) : [], [trackAxisX, waveformData]);\n  useEffect(() => {\n    document.addEventListener('pointerup', handleDragStop);\n    return () => {\n      document.removeEventListener('pointerup', handleDragStop);\n    };\n  }, [handleDragStop]);\n  useEffect(() => {\n    if (!root || typeof ResizeObserver === 'undefined') return;\n    const observer = new ResizeObserver(([entry]) => {\n      getTrackAxisX(entry.contentRect.width);\n    });\n    observer.observe(root);\n    return () => {\n      observer.disconnect();\n    };\n  }, [getTrackAxisX, root]);\n  useLayoutEffect(() => {\n    if (!root) return;\n    const {\n      width: rootWidth\n    } = root.getBoundingClientRect();\n    getTrackAxisX(rootWidth);\n  }, [getTrackAxisX, root]);\n  if (!waveformData.length || trackAxisX?.barCount === 0) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__wave-progress-bar__track',\n    \"data-testid\": 'wave-progress-bar-track',\n    onClick: seek,\n    onPointerDown: handleDragStart,\n    onPointerMove: handleDrag,\n    onPointerUp: handleDragStop,\n    ref: setRoot,\n    role: 'progressbar',\n    style: {\n      '--str-chat__voice-recording-amplitude-bar-gap-width': trackAxisX?.gap + 'px'\n    }\n  }, resampledWaveformData.map((amplitude, i) => React.createElement(\"div\", {\n    className: clsx('str-chat__wave-progress-bar__amplitude-bar', {\n      ['str-chat__wave-progress-bar__amplitude-bar--active']: progress > i / resampledWaveformData.length * 100\n    }),\n    \"data-testid\": 'amplitude-bar',\n    key: `amplitude-${i}`,\n    style: {\n      '--str-chat__voice-recording-amplitude-bar-width': trackAxisX?.barWidth + 'px',\n      '--str-chat__wave-progress-bar__amplitude-bar-height': amplitude ? amplitude * 100 + '%' : '0%'\n    }\n  })), React.createElement(\"div\", {\n    className: 'str-chat__wave-progress-bar__progress-indicator',\n    \"data-testid\": 'wave-progress-bar-progress-indicator',\n    ref: setProgressIndicator,\n    style: {\n      left: `${progress < 0 ? 0 : progress > 100 ? 100 : progress}%`\n    }\n  }));\n};","map":{"version":3,"names":["throttle","React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","clsx","resampleWaveformData","WaveProgressBar","amplitudesCount","progress","relativeAmplitudeBarWidth","relativeAmplitudeGap","seek","waveformData","progressIndicator","setProgressIndicator","isDragging","root","setRoot","trackAxisX","setTrackAxisX","lastRootWidth","undefined","handleDragStart","e","preventDefault","current","style","cursor","handleDrag","handleDragStop","removeProperty","getTrackAxisX","rootWidth","possibleAmpCount","Math","floor","tooManyAmplitudesToRender","barCount","amplitudeBarWidthToGapRatio","barWidth","gap","resampledWaveformData","document","addEventListener","removeEventListener","ResizeObserver","observer","entry","contentRect","width","observe","disconnect","getBoundingClientRect","length","createElement","className","onClick","onPointerDown","onPointerMove","onPointerUp","ref","role","map","amplitude","i","key","left"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/Attachment/components/WaveProgressBar.js"],"sourcesContent":["import throttle from 'lodash.throttle';\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState, } from 'react';\nimport clsx from 'clsx';\nimport { resampleWaveformData } from '../audioSampling';\nexport const WaveProgressBar = ({ amplitudesCount = 40, progress = 0, relativeAmplitudeBarWidth = 2, relativeAmplitudeGap = 1, seek, waveformData, }) => {\n    const [progressIndicator, setProgressIndicator] = useState(null);\n    const isDragging = useRef(false);\n    const [root, setRoot] = useState(null);\n    const [trackAxisX, setTrackAxisX] = useState();\n    const lastRootWidth = useRef(undefined);\n    const handleDragStart = (e) => {\n        e.preventDefault();\n        if (!progressIndicator)\n            return;\n        isDragging.current = true;\n        progressIndicator.style.cursor = 'grabbing';\n    };\n    const handleDrag = (e) => {\n        if (!isDragging.current)\n            return;\n        // Due to throttling of seek, it is necessary to create a copy (snapshot) of the event.\n        // Otherwise, the event would be nullified at the point when the throttled function is executed.\n        seek({ ...e });\n    };\n    const handleDragStop = useCallback(() => {\n        if (!progressIndicator)\n            return;\n        isDragging.current = false;\n        progressIndicator.style.removeProperty('cursor');\n    }, [progressIndicator]);\n    const getTrackAxisX = useMemo(() => throttle((rootWidth) => {\n        if (rootWidth === lastRootWidth.current)\n            return;\n        lastRootWidth.current = rootWidth;\n        const possibleAmpCount = Math.floor(rootWidth / (relativeAmplitudeGap + relativeAmplitudeBarWidth));\n        const tooManyAmplitudesToRender = possibleAmpCount < amplitudesCount;\n        const barCount = tooManyAmplitudesToRender ? possibleAmpCount : amplitudesCount;\n        const amplitudeBarWidthToGapRatio = relativeAmplitudeBarWidth / (relativeAmplitudeBarWidth + relativeAmplitudeGap);\n        const barWidth = barCount && (rootWidth / barCount) * amplitudeBarWidthToGapRatio;\n        setTrackAxisX({\n            barCount,\n            barWidth,\n            gap: barWidth * (relativeAmplitudeGap / relativeAmplitudeBarWidth),\n        });\n    }, 1), [relativeAmplitudeBarWidth, relativeAmplitudeGap, amplitudesCount]);\n    const resampledWaveformData = useMemo(() => (trackAxisX ? resampleWaveformData(waveformData, trackAxisX.barCount) : []), [trackAxisX, waveformData]);\n    useEffect(() => {\n        document.addEventListener('pointerup', handleDragStop);\n        return () => {\n            document.removeEventListener('pointerup', handleDragStop);\n        };\n    }, [handleDragStop]);\n    useEffect(() => {\n        if (!root || typeof ResizeObserver === 'undefined')\n            return;\n        const observer = new ResizeObserver(([entry]) => {\n            getTrackAxisX(entry.contentRect.width);\n        });\n        observer.observe(root);\n        return () => {\n            observer.disconnect();\n        };\n    }, [getTrackAxisX, root]);\n    useLayoutEffect(() => {\n        if (!root)\n            return;\n        const { width: rootWidth } = root.getBoundingClientRect();\n        getTrackAxisX(rootWidth);\n    }, [getTrackAxisX, root]);\n    if (!waveformData.length || trackAxisX?.barCount === 0)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__wave-progress-bar__track', \"data-testid\": 'wave-progress-bar-track', onClick: seek, onPointerDown: handleDragStart, onPointerMove: handleDrag, onPointerUp: handleDragStop, ref: setRoot, role: 'progressbar', style: {\n            '--str-chat__voice-recording-amplitude-bar-gap-width': trackAxisX?.gap + 'px',\n        } },\n        resampledWaveformData.map((amplitude, i) => (React.createElement(\"div\", { className: clsx('str-chat__wave-progress-bar__amplitude-bar', {\n                ['str-chat__wave-progress-bar__amplitude-bar--active']: progress > (i / resampledWaveformData.length) * 100,\n            }), \"data-testid\": 'amplitude-bar', key: `amplitude-${i}`, style: {\n                '--str-chat__voice-recording-amplitude-bar-width': trackAxisX?.barWidth + 'px',\n                '--str-chat__wave-progress-bar__amplitude-bar-height': amplitude\n                    ? amplitude * 100 + '%'\n                    : '0%',\n            } }))),\n        React.createElement(\"div\", { className: 'str-chat__wave-progress-bar__progress-indicator', \"data-testid\": 'wave-progress-bar-progress-indicator', ref: setProgressIndicator, style: { left: `${progress < 0 ? 0 : progress > 100 ? 100 : progress}%` } })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}