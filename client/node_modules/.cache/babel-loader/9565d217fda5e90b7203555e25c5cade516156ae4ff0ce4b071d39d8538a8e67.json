{"ast":null,"code":"import clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { CommandItem } from './CommandItem';\nimport { EmoticonItem } from './EmoticonItem';\nimport { SuggestionListItem as DefaultSuggestionListItem } from './SuggestionListItem';\nimport { UserItem } from './UserItem';\nimport { useComponentContext } from '../../../context/ComponentContext';\nimport { useStateStore } from '../../../store';\nimport { InfiniteScrollPaginator } from '../../InfiniteScrollPaginator/InfiniteScrollPaginator';\nimport { useMessageComposer } from '../../MessageInput';\nconst textComposerStateSelector = state => ({\n  suggestions: state.suggestions\n});\nconst searchSourceStateSelector = nextValue => ({\n  items: nextValue.items ?? []\n});\nexport const defaultComponents = {\n  '/': props => React.createElement(CommandItem, {\n    entity: props.entity\n  }),\n  ':': props => React.createElement(EmoticonItem, {\n    entity: props.entity\n  }),\n  '@': props => React.createElement(UserItem, {\n    entity: props.entity\n  })\n};\nexport const SuggestionList = ({\n  className,\n  closeOnClickOutside = true,\n  containerClassName,\n  focusedItemIndex,\n  setFocusedItemIndex,\n  suggestionItemComponents = defaultComponents\n}) => {\n  const {\n    AutocompleteSuggestionItem = DefaultSuggestionListItem\n  } = useComponentContext();\n  const messageComposer = useMessageComposer();\n  const {\n    textComposer\n  } = messageComposer;\n  const {\n    suggestions\n  } = useStateStore(textComposer.state, textComposerStateSelector);\n  const {\n    items\n  } = useStateStore(suggestions?.searchSource.state, searchSourceStateSelector) ?? {};\n  const [container, setContainer] = useState(null);\n  const component = suggestions?.trigger ? suggestionItemComponents[suggestions?.trigger] : undefined;\n  useEffect(() => {\n    if (!closeOnClickOutside || !suggestions || !container) return;\n    const handleClick = event => {\n      if (container.contains(event.target)) return;\n      textComposer.closeSuggestions();\n    };\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, [closeOnClickOutside, suggestions, container, textComposer]);\n  if (!suggestions || !items?.length || !component) return null;\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__suggestion-list-container', containerClassName),\n    ref: setContainer\n  }, React.createElement(InfiniteScrollPaginator, {\n    loadNextOnScrollToBottom: suggestions.searchSource.search,\n    threshold: 100\n  }, React.createElement(\"ul\", {\n    className: clsx('str-chat__suggestion-list str-chat__suggestion-list--react', className)\n  }, items.map((item, i) => React.createElement(AutocompleteSuggestionItem, {\n    component: component,\n    focused: focusedItemIndex === i,\n    item: item,\n    key: item.id.toString(),\n    onMouseEnter: () => setFocusedItemIndex?.(i)\n  })))));\n};","map":{"version":3,"names":["clsx","React","useEffect","useState","CommandItem","EmoticonItem","SuggestionListItem","DefaultSuggestionListItem","UserItem","useComponentContext","useStateStore","InfiniteScrollPaginator","useMessageComposer","textComposerStateSelector","state","suggestions","searchSourceStateSelector","nextValue","items","defaultComponents","props","createElement","entity","SuggestionList","className","closeOnClickOutside","containerClassName","focusedItemIndex","setFocusedItemIndex","suggestionItemComponents","AutocompleteSuggestionItem","messageComposer","textComposer","searchSource","container","setContainer","component","trigger","undefined","handleClick","event","contains","target","closeSuggestions","document","addEventListener","removeEventListener","length","ref","loadNextOnScrollToBottom","search","threshold","map","item","i","focused","key","id","toString","onMouseEnter"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/TextareaComposer/SuggestionList/SuggestionList.js"],"sourcesContent":["import clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { CommandItem } from './CommandItem';\nimport { EmoticonItem } from './EmoticonItem';\nimport { SuggestionListItem as DefaultSuggestionListItem } from './SuggestionListItem';\nimport { UserItem } from './UserItem';\nimport { useComponentContext } from '../../../context/ComponentContext';\nimport { useStateStore } from '../../../store';\nimport { InfiniteScrollPaginator } from '../../InfiniteScrollPaginator/InfiniteScrollPaginator';\nimport { useMessageComposer } from '../../MessageInput';\nconst textComposerStateSelector = (state) => ({\n    suggestions: state.suggestions,\n});\nconst searchSourceStateSelector = (nextValue) => ({\n    items: nextValue.items ?? [],\n});\nexport const defaultComponents = {\n    '/': (props) => (React.createElement(CommandItem, { entity: props.entity })),\n    ':': (props) => (React.createElement(EmoticonItem, { entity: props.entity })),\n    '@': (props) => (React.createElement(UserItem, { entity: props.entity })),\n};\nexport const SuggestionList = ({ className, closeOnClickOutside = true, containerClassName, focusedItemIndex, setFocusedItemIndex, suggestionItemComponents = defaultComponents, }) => {\n    const { AutocompleteSuggestionItem = DefaultSuggestionListItem } = useComponentContext();\n    const messageComposer = useMessageComposer();\n    const { textComposer } = messageComposer;\n    const { suggestions } = useStateStore(textComposer.state, textComposerStateSelector);\n    const { items } = useStateStore(suggestions?.searchSource.state, searchSourceStateSelector) ?? {};\n    const [container, setContainer] = useState(null);\n    const component = suggestions?.trigger\n        ? suggestionItemComponents[suggestions?.trigger]\n        : undefined;\n    useEffect(() => {\n        if (!closeOnClickOutside || !suggestions || !container)\n            return;\n        const handleClick = (event) => {\n            if (container.contains(event.target))\n                return;\n            textComposer.closeSuggestions();\n        };\n        document.addEventListener('click', handleClick);\n        return () => {\n            document.removeEventListener('click', handleClick);\n        };\n    }, [closeOnClickOutside, suggestions, container, textComposer]);\n    if (!suggestions || !items?.length || !component)\n        return null;\n    return (React.createElement(\"div\", { className: clsx('str-chat__suggestion-list-container', containerClassName), ref: setContainer },\n        React.createElement(InfiniteScrollPaginator, { loadNextOnScrollToBottom: suggestions.searchSource.search, threshold: 100 },\n            React.createElement(\"ul\", { className: clsx('str-chat__suggestion-list str-chat__suggestion-list--react', className) }, items.map((item, i) => (React.createElement(AutocompleteSuggestionItem, { component: component, focused: focusedItemIndex === i, item: item, key: item.id.toString(), onMouseEnter: () => setFocusedItemIndex?.(i) })))))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}