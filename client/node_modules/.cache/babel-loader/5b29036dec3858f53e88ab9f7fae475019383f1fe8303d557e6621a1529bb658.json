{"ast":null,"code":"import React from 'react';\nimport clsx from 'clsx';\nimport ReactPlayer from 'react-player';\nimport { ImageComponent } from '../Gallery';\nimport { SafeAnchor } from '../SafeAnchor';\nimport { PlayButton, ProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nconst getHostFromURL = url => {\n  if (url !== undefined && url !== null) {\n    const [trimmedUrl] = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/');\n    return trimmedUrl;\n  }\n  return null;\n};\nconst UnableToRenderCard = ({\n  type\n}) => {\n  const {\n    t\n  } = useTranslationContext('Card');\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__message-attachment-card', {\n      [`str-chat__message-attachment-card--${type}`]: type\n    })\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--content'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--text'\n  }, t('this content could not be displayed'))));\n};\nconst SourceLink = ({\n  author_name,\n  url\n}) => React.createElement(\"div\", {\n  className: 'str-chat__message-attachment-card--source-link',\n  \"data-testid\": 'card-source-link'\n}, React.createElement(SafeAnchor, {\n  className: 'str-chat__message-attachment-card--url',\n  href: url,\n  rel: 'noopener noreferrer',\n  target: '_blank'\n}, author_name || getHostFromURL(url)));\nconst CardHeader = props => {\n  const {\n    asset_url,\n    dimensions,\n    image,\n    image_url,\n    thumb_url,\n    title,\n    type\n  } = props;\n  let visual = null;\n  if (asset_url && type === 'video') {\n    visual = React.createElement(ReactPlayer, {\n      className: 'react-player',\n      controls: true,\n      height: '100%',\n      url: asset_url,\n      width: '100%'\n    });\n  } else if (image) {\n    visual = React.createElement(ImageComponent, {\n      dimensions: dimensions,\n      fallback: title || image,\n      image_url: image_url,\n      thumb_url: thumb_url\n    });\n  }\n  return visual ? React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--header str-chat__message-attachment-card-react--header',\n    \"data-testid\": 'card-header'\n  }, visual) : null;\n};\nconst CardContent = props => {\n  const {\n    author_name,\n    og_scrape_url,\n    text,\n    title,\n    title_link,\n    type\n  } = props;\n  const url = title_link || og_scrape_url;\n  return React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--content'\n  }, type === 'audio' ? React.createElement(CardAudio, {\n    og: props\n  }) : React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--flex'\n  }, url && React.createElement(SourceLink, {\n    author_name: author_name,\n    url: url\n  }), title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--title'\n  }, title), text && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--text'\n  }, text)));\n};\nexport const CardAudio = ({\n  og: {\n    asset_url,\n    author_name,\n    mime_type,\n    og_scrape_url,\n    text,\n    title,\n    title_link\n  }\n}) => {\n  const {\n    audioRef,\n    isPlaying,\n    progress,\n    seek,\n    togglePlay\n  } = useAudioController({\n    mimeType: mime_type\n  });\n  const url = title_link || og_scrape_url;\n  const dataTestId = 'card-audio-widget';\n  const rootClassName = 'str-chat__message-attachment-card-audio-widget';\n  return React.createElement(\"div\", {\n    className: rootClassName,\n    \"data-testid\": dataTestId\n  }, asset_url && React.createElement(React.Fragment, null, React.createElement(\"audio\", {\n    ref: audioRef\n  }, React.createElement(\"source\", {\n    \"data-testid\": 'audio-source',\n    src: asset_url,\n    type: 'audio/mp3'\n  })), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card-audio-widget--first-row'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--play-controls'\n  }, React.createElement(PlayButton, {\n    isPlaying: isPlaying,\n    onClick: togglePlay\n  })), React.createElement(ProgressBar, {\n    onClick: seek,\n    progress: progress\n  }))), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--second-row'\n  }, url && React.createElement(SourceLink, {\n    author_name: author_name,\n    url: url\n  }), title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--title'\n  }, title), text && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--description'\n  }, text)));\n};\nconst UnMemoizedCard = props => {\n  const {\n    asset_url,\n    giphy,\n    image_url,\n    thumb_url,\n    title,\n    title_link,\n    type\n  } = props;\n  const {\n    giphyVersion: giphyVersionName\n  } = useChannelStateContext('CardHeader');\n  let image = thumb_url || image_url;\n  const dimensions = {};\n  if (type === 'giphy' && typeof giphy !== 'undefined') {\n    const giphyVersion = giphy[giphyVersionName];\n    image = giphyVersion.url;\n    dimensions.height = giphyVersion.height;\n    dimensions.width = giphyVersion.width;\n  }\n  if (!title && !title_link && !asset_url && !image) {\n    return React.createElement(UnableToRenderCard, null);\n  }\n  return React.createElement(\"div\", {\n    className: `str-chat__message-attachment-card str-chat__message-attachment-card--${type}`\n  }, React.createElement(CardHeader, {\n    ...props,\n    dimensions: dimensions,\n    image: image\n  }), React.createElement(CardContent, {\n    ...props\n  }));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport const Card = React.memo(UnMemoizedCard);","map":{"version":3,"names":["React","clsx","ReactPlayer","ImageComponent","SafeAnchor","PlayButton","ProgressBar","useAudioController","useChannelStateContext","useTranslationContext","getHostFromURL","url","undefined","trimmedUrl","replace","split","UnableToRenderCard","type","t","createElement","className","SourceLink","author_name","href","rel","target","CardHeader","props","asset_url","dimensions","image","image_url","thumb_url","title","visual","controls","height","width","fallback","CardContent","og_scrape_url","text","title_link","CardAudio","og","mime_type","audioRef","isPlaying","progress","seek","togglePlay","mimeType","dataTestId","rootClassName","Fragment","ref","src","onClick","UnMemoizedCard","giphy","giphyVersion","giphyVersionName","Card","memo"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/node_modules/stream-chat-react/dist/components/Attachment/Card.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport ReactPlayer from 'react-player';\nimport { ImageComponent } from '../Gallery';\nimport { SafeAnchor } from '../SafeAnchor';\nimport { PlayButton, ProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nconst getHostFromURL = (url) => {\n    if (url !== undefined && url !== null) {\n        const [trimmedUrl] = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/');\n        return trimmedUrl;\n    }\n    return null;\n};\nconst UnableToRenderCard = ({ type }) => {\n    const { t } = useTranslationContext('Card');\n    return (React.createElement(\"div\", { className: clsx('str-chat__message-attachment-card', {\n            [`str-chat__message-attachment-card--${type}`]: type,\n        }) },\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, t('this content could not be displayed')))));\n};\nconst SourceLink = ({ author_name, url, }) => (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--source-link', \"data-testid\": 'card-source-link' },\n    React.createElement(SafeAnchor, { className: 'str-chat__message-attachment-card--url', href: url, rel: 'noopener noreferrer', target: '_blank' }, author_name || getHostFromURL(url))));\nconst CardHeader = (props) => {\n    const { asset_url, dimensions, image, image_url, thumb_url, title, type } = props;\n    let visual = null;\n    if (asset_url && type === 'video') {\n        visual = (React.createElement(ReactPlayer, { className: 'react-player', controls: true, height: '100%', url: asset_url, width: '100%' }));\n    }\n    else if (image) {\n        visual = (React.createElement(ImageComponent, { dimensions: dimensions, fallback: title || image, image_url: image_url, thumb_url: thumb_url }));\n    }\n    return visual ? (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--header str-chat__message-attachment-card-react--header', \"data-testid\": 'card-header' }, visual)) : null;\n};\nconst CardContent = (props) => {\n    const { author_name, og_scrape_url, text, title, title_link, type } = props;\n    const url = title_link || og_scrape_url;\n    return (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' }, type === 'audio' ? (React.createElement(CardAudio, { og: props })) : (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--flex' },\n        url && React.createElement(SourceLink, { author_name: author_name, url: url }),\n        title && (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--title' }, title)),\n        text && React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, text)))));\n};\nexport const CardAudio = ({ og: { asset_url, author_name, mime_type, og_scrape_url, text, title, title_link }, }) => {\n    const { audioRef, isPlaying, progress, seek, togglePlay } = useAudioController({\n        mimeType: mime_type,\n    });\n    const url = title_link || og_scrape_url;\n    const dataTestId = 'card-audio-widget';\n    const rootClassName = 'str-chat__message-attachment-card-audio-widget';\n    return (React.createElement(\"div\", { className: rootClassName, \"data-testid\": dataTestId },\n        asset_url && (React.createElement(React.Fragment, null,\n            React.createElement(\"audio\", { ref: audioRef },\n                React.createElement(\"source\", { \"data-testid\": 'audio-source', src: asset_url, type: 'audio/mp3' })),\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card-audio-widget--first-row' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--play-controls' },\n                    React.createElement(PlayButton, { isPlaying: isPlaying, onClick: togglePlay })),\n                React.createElement(ProgressBar, { onClick: seek, progress: progress })))),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--second-row' },\n            url && React.createElement(SourceLink, { author_name: author_name, url: url }),\n            title && (React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--title' }, title)),\n            text && (React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--description' }, text)))));\n};\nconst UnMemoizedCard = (props) => {\n    const { asset_url, giphy, image_url, thumb_url, title, title_link, type } = props;\n    const { giphyVersion: giphyVersionName } = useChannelStateContext('CardHeader');\n    let image = thumb_url || image_url;\n    const dimensions = {};\n    if (type === 'giphy' && typeof giphy !== 'undefined') {\n        const giphyVersion = giphy[giphyVersionName];\n        image = giphyVersion.url;\n        dimensions.height = giphyVersion.height;\n        dimensions.width = giphyVersion.width;\n    }\n    if (!title && !title_link && !asset_url && !image) {\n        return React.createElement(UnableToRenderCard, null);\n    }\n    return (React.createElement(\"div\", { className: `str-chat__message-attachment-card str-chat__message-attachment-card--${type}` },\n        React.createElement(CardHeader, { ...props, dimensions: dimensions, image: image }),\n        React.createElement(CardContent, { ...props })));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport const Card = React.memo(UnMemoizedCard);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}