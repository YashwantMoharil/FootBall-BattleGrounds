{"ast":null,"code":"import { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useUserPresenceChangedListener = setChannels => {\n  const {\n    client\n  } = useChatContext('useUserPresenceChangedListener');\n  useEffect(() => {\n    const handleEvent = event => {\n      setChannels(channels => {\n        const newChannels = channels.map(channel => {\n          if (!event.user?.id || !channel.state.members[event.user.id]) {\n            return channel;\n          }\n          const newChannel = channel; // dumb workaround for linter\n          newChannel.state.members[event.user.id].user = event.user;\n          return newChannel;\n        });\n        return [...newChannels];\n      });\n    };\n    client.on('user.presence.changed', handleEvent);\n    return () => {\n      client.off('user.presence.changed', handleEvent);\n    };\n  }, [client, setChannels]);\n};","map":{"version":3,"names":["useEffect","useChatContext","useUserPresenceChangedListener","setChannels","client","handleEvent","event","channels","newChannels","map","channel","user","id","state","members","newChannel","on","off"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useUserPresenceChangedListener.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useUserPresenceChangedListener = (setChannels) => {\n    const { client } = useChatContext('useUserPresenceChangedListener');\n    useEffect(() => {\n        const handleEvent = (event) => {\n            setChannels((channels) => {\n                const newChannels = channels.map((channel) => {\n                    if (!event.user?.id || !channel.state.members[event.user.id]) {\n                        return channel;\n                    }\n                    const newChannel = channel; // dumb workaround for linter\n                    newChannel.state.members[event.user.id].user = event.user;\n                    return newChannel;\n                });\n                return [...newChannels];\n            });\n        };\n        client.on('user.presence.changed', handleEvent);\n        return () => {\n            client.off('user.presence.changed', handleEvent);\n        };\n    }, [client, setChannels]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,MAAMC,8BAA8B,GAAIC,WAAW,IAAK;EAC3D,MAAM;IAAEC;EAAO,CAAC,GAAGH,cAAc,CAAC,gCAAgC,CAAC;EACnED,SAAS,CAAC,MAAM;IACZ,MAAMK,WAAW,GAAIC,KAAK,IAAK;MAC3BH,WAAW,CAAEI,QAAQ,IAAK;QACtB,MAAMC,WAAW,GAAGD,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;UAC1C,IAAI,CAACJ,KAAK,CAACK,IAAI,EAAEC,EAAE,IAAI,CAACF,OAAO,CAACG,KAAK,CAACC,OAAO,CAACR,KAAK,CAACK,IAAI,CAACC,EAAE,CAAC,EAAE;YAC1D,OAAOF,OAAO;UAClB;UACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,CAAC;UAC5BK,UAAU,CAACF,KAAK,CAACC,OAAO,CAACR,KAAK,CAACK,IAAI,CAACC,EAAE,CAAC,CAACD,IAAI,GAAGL,KAAK,CAACK,IAAI;UACzD,OAAOI,UAAU;QACrB,CAAC,CAAC;QACF,OAAO,CAAC,GAAGP,WAAW,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;IACDJ,MAAM,CAACY,EAAE,CAAC,uBAAuB,EAAEX,WAAW,CAAC;IAC/C,OAAO,MAAM;MACTD,MAAM,CAACa,GAAG,CAAC,uBAAuB,EAAEZ,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,CAACD,MAAM,EAAED,WAAW,CAAC,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}