{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const player = \"X\";\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    \"X\": 0,\n    \"O\": 0\n  });\n  const {\n    channel\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const newTiles = tiles;\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const newMines = tiles;\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n  useEffect(() => {\n    const handleGameMove = event => {\n      if (event.type === \"game-move\" && event.user.id !== client.userID) {\n        // apply incoming state for *other* players\n        setTiles(event.data.tiles);\n        setMines(event.data.mines);\n        // …and any other setters you need\n      }\n    };\n    channel.on(\"event\", handleGameMove);\n    return () => channel.off(\"event\", handleGameMove);\n  }, [channel, client.userID]);\n  const handleTileclick = async index => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      setMistakeCounts(prev => ({\n        ...prev,\n        [player]: prev[player] + 1\n      }));\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    //setTurn(turn === 'X' ? 'O' : 'X');\n    await channel.sendEvent({\n      type: \"game-move\",\n      data: {\n        tiles,\n        mines /*, … */\n      }\n    });\n  };\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [turn, \" plays with \", JSON.stringify(mistakeCounts), \" tiles broken\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileclick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"HfNJQSWtQT8Iw15tVxlhzB+IQsA=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useChannelStateContext","useChatContext","useState","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","player","turn","setTurn","mistakeCounts","setMistakeCounts","channel","client","tiles","setTiles","Array","fill","newTiles","mines","setMines","newMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","fillMines","newGrid","start","handleGameMove","event","type","user","id","userID","data","on","off","handleTileclick","index","inProgress","newMineCount","prev","gameover","sendEvent","handleReset","checkWinner","isBoardFull","includes","tie","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\"\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\n\nfunction TicTacToe() {\n  const player = \"X\";\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    \"X\": 0,\n    \"O\": 0\n  });\n  const {channel} = useChannelStateContext();\n  const {client} = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const newTiles = tiles;\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const newMines = tiles;\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  \n\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n\n\n  useEffect(() => {\n  const handleGameMove = (event) => {\n    if (event.type === \"game-move\" && event.user.id !== client.userID) {\n      // apply incoming state for *other* players\n      setTiles(event.data.tiles);\n      setMines(event.data.mines);\n      // …and any other setters you need\n    }\n  };\n\n  channel.on(\"event\", handleGameMove);\n  return () => channel.off(\"event\", handleGameMove);\n}, [channel, client.userID]);\n\n  const handleTileclick = async (index) => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress)return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      setMistakeCounts(prev => ({\n      ...prev,\n      [player]: prev[player] + 1\n    }));\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    //setTurn(turn === 'X' ? 'O' : 'X');\n   await channel.sendEvent({\n    type: \"game-move\",\n    data: {tiles, mines /*, … */ }\n  });\n\n  };\n\n  \n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4>{turn} plays with {JSON.stringify(mistakeCounts)} tiles broken</h4>\n      <Board\n        player={player}\n        tiles={tiles}\n        onTileClick={handleTileclick}\n        strike={strike}\n      />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default TicTacToe;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,sBAAsB,EAAEC,cAAc,QAAQ,mBAAmB;AAC1E,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC;IACjD,GAAG,EAAE,CAAC;IACN,GAAG,EAAE;EACP,CAAC,CAAC;EACF,MAAM;IAACe;EAAO,CAAC,GAAGjB,sBAAsB,CAAC,CAAC;EAC1C,MAAM;IAACkB;EAAM,CAAC,GAAGjB,cAAc,CAAC,CAAC;EACjC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxD,MAAMC,QAAQ,GAAGJ,KAAK;EACtB,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAACmB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACxD,MAAMI,QAAQ,GAAGP,KAAK;EACtB,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAACG,SAAS,CAAC4B,YAAY,CAAC;EAGlE,SAASC,SAASA,CAAA,EAAG;IACnB,IAAIH,SAAS,KAAK1B,SAAS,CAAC4B,YAAY,EAAE;IAC1C,IAAIE,OAAO,GAAG5B,KAAK,CAACoB,SAAS,CAAC;IAC9BF,QAAQ,CAACU,OAAO,CAAC;IACjB;IACAH,YAAY,CAAC3B,SAAS,CAAC+B,KAAK,CAAC;EAC/B;EAEArC,SAAS,CAAC,MAAM;IACdmC,SAAS,CAACV,KAAK,EAAEC,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAGXzB,SAAS,CAAC,MAAM;IAChB,MAAMsC,cAAc,GAAIC,KAAK,IAAK;MAChC,IAAIA,KAAK,CAACC,IAAI,KAAK,WAAW,IAAID,KAAK,CAACE,IAAI,CAACC,EAAE,KAAKvB,MAAM,CAACwB,MAAM,EAAE;QACjE;QACAtB,QAAQ,CAACkB,KAAK,CAACK,IAAI,CAACxB,KAAK,CAAC;QAC1BM,QAAQ,CAACa,KAAK,CAACK,IAAI,CAACnB,KAAK,CAAC;QAC1B;MACF;IACF,CAAC;IAEDP,OAAO,CAAC2B,EAAE,CAAC,OAAO,EAAEP,cAAc,CAAC;IACnC,OAAO,MAAMpB,OAAO,CAAC4B,GAAG,CAAC,OAAO,EAAER,cAAc,CAAC;EACnD,CAAC,EAAE,CAACpB,OAAO,EAAEC,MAAM,CAACwB,MAAM,CAAC,CAAC;EAE1B,MAAMI,eAAe,GAAG,MAAOC,KAAK,IAAK;IACvC,IAAIhB,SAAS,KAAK1B,SAAS,CAAC+B,KAAK,IAAIL,SAAS,KAAK1B,SAAS,CAAC2C,UAAU,EAAC;IACxEhB,YAAY,CAAC3B,SAAS,CAAC2C,UAAU,CAAC;IAClC,IAAI7B,KAAK,CAAC4B,KAAK,CAAC,KAAK,IAAI,EAAE;IAC3B,MAAMxB,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAAC;IAC3BI,QAAQ,CAACwB,KAAK,CAAC,GAAGvB,KAAK,CAACuB,KAAK,CAAC;IAC9B3B,QAAQ,CAACG,QAAQ,CAAC;IAElB,IAAIA,QAAQ,CAACwB,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1B,MAAME,YAAY,GAAGtB,SAAS,GAAG,CAAC;MAClCC,YAAY,CAACqB,YAAY,CAAC;MAC1BjC,gBAAgB,CAACkC,IAAI,KAAK;QAC1B,GAAGA,IAAI;QACP,CAACtC,MAAM,GAAGsC,IAAI,CAACtC,MAAM,CAAC,GAAG;MAC3B,CAAC,CAAC,CAAC;MACD,IAAIqC,YAAY,KAAK,CAAC,EAAE;QACtBjB,YAAY,CAAC3B,SAAS,CAAC8C,QAAQ,CAAC;MAClC;IACF;IACA;IACD,MAAMlC,OAAO,CAACmC,SAAS,CAAC;MACvBb,IAAI,EAAE,WAAW;MACjBI,IAAI,EAAE;QAACxB,KAAK;QAAEK,KAAK,CAAC;MAAS;IAC/B,CAAC,CAAC;EAEF,CAAC;EAGD,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxBjC,QAAQ,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9BR,OAAO,CAAC,GAAG,CAAC;IACZkB,YAAY,CAAC3B,SAAS,CAAC+B,KAAK,CAAC;IAC7BN,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,SAASwB,WAAWA,CAAA,EAAG;IACrB,MAAMC,WAAW,GAAG,CAACpC,KAAK,CAACqC,QAAQ,CAAC,IAAI,CAAC;IACzC,IAAID,WAAW,EAAE;MACfvB,YAAY,CAAC3B,SAAS,CAACoD,GAAG,CAAC;IAC7B;EACF;EAEA1D,SAAS,CAAC,MAAM;IACduD,WAAW,CAACnC,KAAK,EAAEW,SAAS,CAAC;EAC/B,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAGX,oBACEV,OAAA;IAAAiD,QAAA,gBACEjD,OAAA;MAAAiD,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBrD,OAAA;MAAAiD,QAAA,GAAK7C,IAAI,EAAC,cAAY,EAACkD,IAAI,CAACC,SAAS,CAACjD,aAAa,CAAC,EAAC,eAAa;IAAA;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvErD,OAAA,CAACN,KAAK;MACJS,MAAM,EAAEA,MAAO;MACfO,KAAK,EAAEA,KAAM;MACb8C,WAAW,EAAEnB,eAAgB;MAC7BjB,MAAM,EAAEA;IAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFrD,OAAA,CAACL,QAAQ;MAAC2B,SAAS,EAAEA;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCrD,OAAA,CAACH,KAAK;MAACyB,SAAS,EAAEA,SAAU;MAACmC,OAAO,EAAEb;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACnD,EAAA,CA1GQD,SAAS;EAAA,QAOEV,sBAAsB,EACvBC,cAAc;AAAA;AAAAkE,EAAA,GARxBzD,SAAS;AA4GlB,eAAeA,SAAS;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}