{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/src/Components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  const {\n    channel\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  const [minesBlasted, setMinesBlasted] = useState(() => new Map());\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n  const handleTileclick = async index => {\n    console.log(minesBlasted[client.userID]);\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null || player !== turn) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      setMinesBlasted(prev => {\n        var _prev$client$userID;\n        return {\n          ...prev,\n          [client.userID]: ((_prev$client$userID = prev[client.userID]) !== null && _prev$client$userID !== void 0 ? _prev$client$userID : 0) + 1\n        };\n      });\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n    console.log(channel);\n    await channel.sendEvent({\n      type: \"game move\",\n      data: {\n        mines,\n        newTiles,\n        turn: turn === 'X' ? 'O' : 'X'\n      }\n    });\n  };\n  channel.on(event => {\n    if (event.type === \"game move\" && event.user.id !== client.userID) {\n      setMines(event.data.mines);\n      setTiles(event.data.newTiles);\n      setPlayer(event.data.turn);\n      setTurn(event.data.turn);\n    }\n  });\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [turn === player ? client.user.name : \"Opponent\", \" plays with \", JSON.stringify(minesBlasted), \" tiles broken\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileclick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"XwbP2Dj7gZr0l0rYsvWP+EI9ooQ=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useChannelStateContext","useChatContext","useState","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","player","setPlayer","turn","setTurn","channel","client","tiles","setTiles","Array","fill","mines","setMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","minesBlasted","setMinesBlasted","Map","fillMines","newGrid","start","handleTileclick","index","console","log","userID","inProgress","newTiles","newMineCount","prev","_prev$client$userID","gameover","sendEvent","type","data","on","event","user","id","handleReset","checkWinner","isBoardFull","includes","tie","children","fileName","_jsxFileName","lineNumber","columnNumber","name","JSON","stringify","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\"\nimport { useState } from \"react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\n\nfunction TicTacToe() {\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n\n\n  const { channel } = useChannelStateContext();\n  const { client } = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  const [minesBlasted, setMinesBlasted] = useState(() => new Map());\n\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n\n  const handleTileclick = async (index) => {\n    console.log(minesBlasted[client.userID])\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null || player !== turn) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      setMinesBlasted(prev => ({\n        ...prev,\n        [client.userID]: (prev[client.userID] ?? 0) + 1\n      }));\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n    console.log(channel)\n    await channel.sendEvent({\n      type: \"game move\",\n      data: { mines, newTiles, turn: turn === 'X' ? 'O' : 'X' }\n    })\n  };\n\n  channel.on((event) => {\n    if (event.type === \"game move\" && event.user.id !== client.userID) {\n      setMines(event.data.mines)\n      setTiles(event.data.newTiles)\n      setPlayer(event.data.turn);\n      setTurn(event.data.turn);\n    }\n  })\n\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4>{turn === player ? client.user.name : \"Opponent\"} plays with {JSON.stringify(minesBlasted)} tiles broken</h4>\n      <Board\n        player={player}\n        tiles={tiles}\n        onTileClick={handleTileclick}\n        strike={strike}\n      />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}