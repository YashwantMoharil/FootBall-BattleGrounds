{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext } from \"stream-chat-react\";\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    \"X\": 0,\n    \"O\": 0\n  });\n  const {\n    channel\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  const cookies = new Cookies();\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n  const handleTileclick = async index => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress) return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null || player !== turn) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      setMistakeCounts(prev => ({\n        ...prev,\n        [player]: prev[player] + 1\n      }));\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n    console.log(channel);\n    await channel.sendEvent({\n      type: \"game move\",\n      data: {\n        mines,\n        newTiles,\n        turn: turn === 'X' ? 'O' : 'X'\n      }\n    });\n  };\n  channel.on(event => {\n    if (event.type === \"game move\" && event.user.id !== client.userID) {\n      setMines(event.data.mines);\n      setTiles(event.data.newTiles);\n      setPlayer(event.data.turn);\n      setTurn(event.data.turn);\n    }\n  });\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", player === turn ? client.user.name : \"Opponent\", \" plays with \", JSON.stringify(mistakeCounts), \" tiles broken\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileclick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"fPXNgjGtgwODwSawkny6De0k04Q=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useChannelStateContext","useChatContext","useState","Cookies","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","player","setPlayer","turn","setTurn","mistakeCounts","setMistakeCounts","channel","client","tiles","setTiles","Array","fill","mines","setMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","cookies","fillMines","newGrid","start","handleTileclick","index","inProgress","newTiles","newMineCount","prev","gameover","console","log","sendEvent","type","data","on","event","user","id","userID","handleReset","checkWinner","isBoardFull","includes","tie","children","fileName","_jsxFileName","lineNumber","columnNumber","name","JSON","stringify","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useChannelStateContext, useChatContext} from \"stream-chat-react\"\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\"\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\n\nfunction TicTacToe() {\n  const [player, setPlayer] = useState(\"X\");\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    \"X\": 0,\n    \"O\": 0\n  });\n  const {channel} = useChannelStateContext();\n  const {client} = useChatContext();\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n  const cookies = new Cookies();\n\n  function fillMines() {\n    if (gameState !== GameState.mineCreation) return;\n    let newGrid = Mines(mineCount);\n    setMines(newGrid);\n    //console.log(newGrid);\n    setGameState(GameState.start);\n  }\n\n  useEffect(() => {\n    fillMines(mines, setMines);\n  }, [mines]);\n\n  const handleTileclick = async (index) => {\n    if (gameState !== GameState.start && gameState !== GameState.inProgress)return;\n    setGameState(GameState.inProgress);\n    if (tiles[index] !== null || player !== turn) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    setTiles(newTiles);\n\n    if (newTiles[index] === -1) {\n      const newMineCount = mineCount - 1;\n      setMineCount(newMineCount);\n      setMistakeCounts(prev => ({\n      ...prev,\n      [player]: prev[player] + 1\n    }));\n      if (newMineCount === 0) {\n        setGameState(GameState.gameover);\n      }\n    }\n    setTurn(turn === 'X' ? 'O' : 'X');\n    console.log(channel)\n    await channel.sendEvent({\n      type: \"game move\",\n      data: { mines, newTiles, turn: turn === 'X' ? 'O' : 'X' }\n    })\n  };\n\n  channel.on((event) => {\n      if(event.type === \"game move\" && event.user.id !== client.userID){\n        setMines(event.data.mines)    \n        setTiles(event.data.newTiles)\n        setPlayer(event.data.turn);\n        setTurn(event.data.turn);\n      }\n  })\n  \n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.start);\n    setStrike(null);\n  };\n\n  function checkWinner() {\n    const isBoardFull = !tiles.includes(null);\n    if (isBoardFull) {\n      setGameState(GameState.tie);\n    }\n  }\n\n  useEffect(() => {\n    checkWinner(tiles, setStrike);\n  }, [tiles]);\n\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4> {player === turn ?  client.user.name : \"Opponent\"} plays with {JSON.stringify(mistakeCounts)} tiles broken</h4>\n      <Board\n        player={player}\n        tiles={tiles}\n        onTileClick={handleTileclick}\n        strike={strike}\n      />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}