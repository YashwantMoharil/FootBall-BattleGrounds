{"ast":null,"code":"var _jsxFileName = \"/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useChannelStateContext, useChatContext, Channel, Chat, ChannelHeader } from \"stream-chat-react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const {\n    channel\n  } = useChannelStateContext() || {};\n  const {\n    client\n  } = useChatContext() || {};\n\n  // Guard: render nothing until channel and client are available\n  if (!channel || !client) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading game...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 35\n  }, this);\n  const [player, setPlayer] = useState(null);\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({\n    X: 0,\n    O: 0\n  });\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n\n  // Assign player based on join order\n  useEffect(() => {\n    var _channel$state;\n    const memberIds = (_channel$state = channel.state) !== null && _channel$state !== void 0 && _channel$state.members ? Object.keys(channel.state.members).sort() : [];\n    const myId = client.userID;\n    const isFirst = memberIds.indexOf(myId) === 0;\n    setPlayer(isFirst ? \"X\" : \"O\");\n  }, [channel.state, client.userID]);\n\n  // Initialize mines once\n  useEffect(() => {\n    if (gameState === GameState.mineCreation) {\n      const newGrid = Mines(mineCount);\n      setMines(newGrid);\n      setGameState(GameState.start);\n    }\n  }, [gameState, mineCount]);\n\n  // Broadcast computed state\n  const handleTileClick = async index => {\n    if (![GameState.start, GameState.inProgress].includes(gameState)) return;\n    if (turn !== player) return;\n    if (tiles[index] !== null) return;\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    const newMineCount = mines[index] === -1 ? mineCount - 1 : mineCount;\n    const newMistakes = {\n      ...mistakeCounts\n    };\n    if (mines[index] === -1) newMistakes[player] += 1;\n    const newTurn = turn === \"X\" ? \"O\" : \"X\";\n    const newGameState = newMineCount === 0 ? GameState.gameover : GameState.inProgress;\n    await channel.sendEvent({\n      type: \"game-move\",\n      data: {\n        tiles: newTiles,\n        mines,\n        mineCount: newMineCount,\n        turn: newTurn,\n        gameState: newGameState,\n        mistakeCounts: newMistakes\n      }\n    });\n  };\n\n  // Sync on incoming events\n  useEffect(() => {\n    const handler = event => {\n      if (event.type === \"game-move\") {\n        const {\n          tiles: newTiles,\n          mines: newMines,\n          mineCount: newMineCount,\n          turn: newTurn,\n          gameState: newGameState,\n          mistakeCounts: newMistakes\n        } = event.data;\n        setTiles(newTiles);\n        setMines(newMines);\n        setMineCount(newMineCount);\n        setTurn(newTurn);\n        setGameState(newGameState);\n        setMistakeCounts(newMistakes);\n      }\n    };\n    channel.on(\"event\", handler);\n    return () => channel.off(\"event\", handler);\n  }, [channel]);\n\n  // Detect tie\n  useEffect(() => {\n    if (!tiles.includes(null)) setGameState(GameState.tie);\n  }, [tiles]);\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.mineCreation);\n    setStrike(null);\n    setMineCount(5);\n    setMistakeCounts({\n      X: 0,\n      O: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [turn, \"'s Turn | Mistakes - X: \", mistakeCounts.X, \", O: \", mistakeCounts.O]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      player: player,\n      tiles: tiles,\n      onTileClick: handleTileClick,\n      strike: strike\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      gameState: gameState,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"35fEN7kEWWgSw0HvE+/xmKnqwUI=\", false, function () {\n  return [useChannelStateContext, useChatContext];\n});\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useEffect","useState","useChannelStateContext","useChatContext","Channel","Chat","ChannelHeader","Board","GameOver","GameState","Reset","Mines","jsxDEV","_jsxDEV","TicTacToe","_s","channel","client","children","fileName","_jsxFileName","lineNumber","columnNumber","player","setPlayer","turn","setTurn","mistakeCounts","setMistakeCounts","X","O","tiles","setTiles","Array","fill","mines","setMines","mineCount","setMineCount","strike","setStrike","gameState","setGameState","mineCreation","_channel$state","memberIds","state","members","Object","keys","sort","myId","userID","isFirst","indexOf","newGrid","start","handleTileClick","index","inProgress","includes","newTiles","newMineCount","newMistakes","newTurn","newGameState","gameover","sendEvent","type","data","handler","event","newMines","on","off","tie","handleReset","onTileClick","onReset","_c","$RefreshReg$"],"sources":["/Users/yashwantmoharil/Desktop/football-battlegrounds/client/src/Components/TicTacToe.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useChannelStateContext, useChatContext, Channel, Chat, ChannelHeader } from \"stream-chat-react\";\nimport Board from \"./Board\";\nimport GameOver from \"./GameOver\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport Mines from \"./Mines\";\n\nfunction TicTacToe() {\n  const { channel } = useChannelStateContext() || {};\n  const { client } = useChatContext() || {};\n\n  // Guard: render nothing until channel and client are available\n  if (!channel || !client) return <div>Loading game...</div>;\n\n  const [player, setPlayer] = useState(null);\n  const [turn, setTurn] = useState(\"X\");\n  const [mistakeCounts, setMistakeCounts] = useState({ X: 0, O: 0 });\n  const [tiles, setTiles] = useState(Array(64).fill(null));\n  const [mines, setMines] = useState(Array(64).fill(null));\n  const [mineCount, setMineCount] = useState(5);\n  const [strike, setStrike] = useState(null);\n  const [gameState, setGameState] = useState(GameState.mineCreation);\n\n  // Assign player based on join order\n  useEffect(() => {\n    const memberIds = channel.state?.members ? Object.keys(channel.state.members).sort() : [];\n    const myId = client.userID;\n    const isFirst = memberIds.indexOf(myId) === 0;\n    setPlayer(isFirst ? \"X\" : \"O\");\n  }, [channel.state, client.userID]);\n\n  // Initialize mines once\n  useEffect(() => {\n    if (gameState === GameState.mineCreation) {\n      const newGrid = Mines(mineCount);\n      setMines(newGrid);\n      setGameState(GameState.start);\n    }\n  }, [gameState, mineCount]);\n\n  // Broadcast computed state\n  const handleTileClick = async (index) => {\n    if (![GameState.start, GameState.inProgress].includes(gameState)) return;\n    if (turn !== player) return;\n    if (tiles[index] !== null) return;\n\n    const newTiles = [...tiles];\n    newTiles[index] = mines[index];\n    const newMineCount = mines[index] === -1 ? mineCount - 1 : mineCount;\n    const newMistakes = { ...mistakeCounts };\n    if (mines[index] === -1) newMistakes[player] += 1;\n    const newTurn = turn === \"X\" ? \"O\" : \"X\";\n    const newGameState = newMineCount === 0 ? GameState.gameover : GameState.inProgress;\n\n    await channel.sendEvent({\n      type: \"game-move\",\n      data: {\n        tiles: newTiles,\n        mines,\n        mineCount: newMineCount,\n        turn: newTurn,\n        gameState: newGameState,\n        mistakeCounts: newMistakes,\n      },\n    });\n  };\n\n  // Sync on incoming events\n  useEffect(() => {\n    const handler = (event) => {\n      if (event.type === \"game-move\") {\n        const {\n          tiles: newTiles,\n          mines: newMines,\n          mineCount: newMineCount,\n          turn: newTurn,\n          gameState: newGameState,\n          mistakeCounts: newMistakes,\n        } = event.data;\n        setTiles(newTiles);\n        setMines(newMines);\n        setMineCount(newMineCount);\n        setTurn(newTurn);\n        setGameState(newGameState);\n        setMistakeCounts(newMistakes);\n      }\n    };\n\n    channel.on(\"event\", handler);\n    return () => channel.off(\"event\", handler);\n  }, [channel]);\n\n  // Detect tie\n  useEffect(() => {\n    if (!tiles.includes(null)) setGameState(GameState.tie);\n  }, [tiles]);\n\n  const handleReset = () => {\n    setTiles(Array(64).fill(null));\n    setTurn(\"X\");\n    setGameState(GameState.mineCreation);\n    setStrike(null);\n    setMineCount(5);\n    setMistakeCounts({ X: 0, O: 0 });\n  };\n\n  return (\n    <div>\n      <h1>Tic Tac Toe</h1>\n      <h4>{turn}'s Turn | Mistakes - X: {mistakeCounts.X}, O: {mistakeCounts.O}</h4>\n      <Board player={player} tiles={tiles} onTileClick={handleTileClick} strike={strike} />\n      <GameOver gameState={gameState} />\n      <Reset gameState={gameState} onReset={handleReset} />\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}