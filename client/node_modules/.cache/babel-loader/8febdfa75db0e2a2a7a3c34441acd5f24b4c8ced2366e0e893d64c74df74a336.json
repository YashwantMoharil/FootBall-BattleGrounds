{"ast":null,"code":"import React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { Attachment as DefaultAttachment } from '../Attachment';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { Poll } from '../Poll';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { renderText as defaultRenderText } from './renderText';\nexport const QuotedMessage = ({\n  renderText: propsRenderText\n}) => {\n  const {\n    Attachment = DefaultAttachment,\n    Avatar: ContextAvatar\n  } = useComponentContext('QuotedMessage');\n  const {\n    client\n  } = useChatContext();\n  const {\n    isMyMessage,\n    message,\n    renderText: contextRenderText\n  } = useMessageContext('QuotedMessage');\n  const {\n    t,\n    userLanguage\n  } = useTranslationContext('QuotedMessage');\n  const {\n    jumpToMessage\n  } = useChannelActionContext('QuotedMessage');\n  const renderText = propsRenderText ?? contextRenderText ?? defaultRenderText;\n  const Avatar = ContextAvatar || DefaultAvatar;\n  const {\n    quoted_message\n  } = message;\n  const poll = quoted_message?.poll_id && client.polls.fromState(quoted_message.poll_id);\n  const quotedMessageDeleted = quoted_message?.deleted_at || quoted_message?.type === 'deleted';\n  const quotedMessageText = quotedMessageDeleted ? t('This message was deleted...') : quoted_message?.i18n?.[`${userLanguage}_text`] || quoted_message?.text;\n  const quotedMessageAttachment = quoted_message?.attachments?.length && !quotedMessageDeleted ? quoted_message.attachments[0] : null;\n  const renderedText = useMemo(() => renderText(quotedMessageText, quoted_message?.mentioned_users), [quotedMessageText, quoted_message?.mentioned_users, renderText]);\n  if (!quoted_message) return null;\n  if (!quoted_message.poll && !quotedMessageText && !quotedMessageAttachment) return null;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: clsx('str-chat__quoted-message-preview', {\n      mine: isMyMessage()\n    }),\n    \"data-testid\": 'quoted-message',\n    onClickCapture: e => {\n      e.stopPropagation();\n      e.preventDefault();\n      jumpToMessage(quoted_message.id);\n    }\n  }, quoted_message.user && React.createElement(Avatar, {\n    className: 'str-chat__avatar--quoted-message-sender',\n    image: quoted_message.user.image,\n    name: quoted_message.user.name || quoted_message.user.id,\n    user: quoted_message.user\n  }), React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-bubble',\n    \"data-testid\": 'quoted-message-contents'\n  }, poll ? React.createElement(Poll, {\n    isQuoted: true,\n    poll: poll\n  }) : React.createElement(React.Fragment, null, quotedMessageAttachment && React.createElement(Attachment, {\n    attachments: [quotedMessageAttachment],\n    isQuoted: true\n  }), React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-bubble__text',\n    \"data-testid\": 'quoted-message-text'\n  }, renderedText)))), message.attachments?.length ? React.createElement(Attachment, {\n    attachments: message.attachments\n  }) : null);\n};","map":{"version":3,"names":["React","useMemo","clsx","Attachment","DefaultAttachment","Avatar","DefaultAvatar","Poll","useChatContext","useComponentContext","useMessageContext","useTranslationContext","useChannelActionContext","renderText","defaultRenderText","QuotedMessage","propsRenderText","ContextAvatar","client","isMyMessage","message","contextRenderText","t","userLanguage","jumpToMessage","quoted_message","poll","poll_id","polls","fromState","quotedMessageDeleted","deleted_at","type","quotedMessageText","i18n","text","quotedMessageAttachment","attachments","length","renderedText","mentioned_users","createElement","Fragment","className","mine","onClickCapture","e","stopPropagation","preventDefault","id","user","image","name","isQuoted"],"sources":["/Users/yashwantmoharil/Documents/Football-Battlegrounds/client/node_modules/stream-chat-react/dist/components/Message/QuotedMessage.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { Attachment as DefaultAttachment } from '../Attachment';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { Poll } from '../Poll';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { renderText as defaultRenderText } from './renderText';\nexport const QuotedMessage = ({ renderText: propsRenderText }) => {\n    const { Attachment = DefaultAttachment, Avatar: ContextAvatar } = useComponentContext('QuotedMessage');\n    const { client } = useChatContext();\n    const { isMyMessage, message, renderText: contextRenderText, } = useMessageContext('QuotedMessage');\n    const { t, userLanguage } = useTranslationContext('QuotedMessage');\n    const { jumpToMessage } = useChannelActionContext('QuotedMessage');\n    const renderText = propsRenderText ?? contextRenderText ?? defaultRenderText;\n    const Avatar = ContextAvatar || DefaultAvatar;\n    const { quoted_message } = message;\n    const poll = quoted_message?.poll_id && client.polls.fromState(quoted_message.poll_id);\n    const quotedMessageDeleted = quoted_message?.deleted_at || quoted_message?.type === 'deleted';\n    const quotedMessageText = quotedMessageDeleted\n        ? t('This message was deleted...')\n        : quoted_message?.i18n?.[`${userLanguage}_text`] ||\n            quoted_message?.text;\n    const quotedMessageAttachment = quoted_message?.attachments?.length && !quotedMessageDeleted\n        ? quoted_message.attachments[0]\n        : null;\n    const renderedText = useMemo(() => renderText(quotedMessageText, quoted_message?.mentioned_users), [quotedMessageText, quoted_message?.mentioned_users, renderText]);\n    if (!quoted_message)\n        return null;\n    if (!quoted_message.poll && !quotedMessageText && !quotedMessageAttachment)\n        return null;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: clsx('str-chat__quoted-message-preview', { mine: isMyMessage() }), \"data-testid\": 'quoted-message', onClickCapture: (e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                jumpToMessage(quoted_message.id);\n            } },\n            quoted_message.user && (React.createElement(Avatar, { className: 'str-chat__avatar--quoted-message-sender', image: quoted_message.user.image, name: quoted_message.user.name || quoted_message.user.id, user: quoted_message.user })),\n            React.createElement(\"div\", { className: 'str-chat__quoted-message-bubble', \"data-testid\": 'quoted-message-contents' }, poll ? (React.createElement(Poll, { isQuoted: true, poll: poll })) : (React.createElement(React.Fragment, null,\n                quotedMessageAttachment && (React.createElement(Attachment, { attachments: [quotedMessageAttachment], isQuoted: true })),\n                React.createElement(\"div\", { className: 'str-chat__quoted-message-bubble__text', \"data-testid\": 'quoted-message-text' }, renderedText))))),\n        message.attachments?.length ? (React.createElement(Attachment, { attachments: message.attachments })) : null));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}